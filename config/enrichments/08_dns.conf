#####################################################
# all ecs ip/hostname fields
# related.ip, client.nat.ip, server.nat.ip, source.nat.ip, destination.nat.ip
# 
# client.ip, client.address
# destination.ip, destination.address
# server.ip, server.address
# source.ip, source.address
# host.ip, host.hostname
# observer.ip, observer.hostname
# 
# not touching related.ip as it would be duplicated
# and .nat.ip fields do not have corresponding name fields
# 
# for all others
# if .ip field exists and .hostname/.address does not
# then copy the .ip to .hostname/.address and lookup for name
# and replace the .hostname value with the found name
# 
# don't want to retry coz of high volume. Also same IPs would be hit in next logs and maybe cached
#####################################################
filter { 
  if "disable_dns_enrichment" in [tags] or "disable_lookups" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_dns_enrichment"]
    }
  } else {
    if [host.ip] and ![host.hostname] {
      mutate {
        add_field => { "host.hostname" => "%{host.ip}" }
      }
      dns {
        reverse => ["host.hostname"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
        add_tag => ["_dns_success_host.hostname"]
      }
      if ![host.domain] and "_dns_success_host.hostname" in [tags] {
        dissect {
          mapping => {
          "host.hostname" => "%{?host_name}.%{host.domain}"
          }
        }
        mutate {
          remove_tag => ["_dns_success_host.hostname"]
        }
      }
    }
    if [client.ip] and ![client.address] {
      mutate {
        add_field => { "client.address" => "%{client.ip}" }
      }
      dns {
        reverse => ["client.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
        add_tag => ["_dns_success_client.address"]
      }
      if ![client.domain] and "_dns_success_client.address" in [tags] {
        dissect {
          mapping => {
          "client.address" => "%{?host_name}.%{client.domain}"
          }
        }
        mutate {
          remove_tag => ["_dns_success_client.address"]
        }
      }
    }
    if [destination.ip] and ![destination.address] {
      mutate {
        add_field => { "destination.address" => "%{destination.ip}" }
      }
      dns {
        reverse => ["destination.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
        add_tag => ["_dns_success_destination.address"]
      }
      if ![destination.domain] and "_dns_success_destination.address" in [tags] {
        dissect {
          mapping => {
          "destination.address" => "%{?host_name}.%{destination.domain}"
          }
        }
        mutate {
          remove_tag => ["_dns_success_destination.address"]
        }
      }
    }
    if [server.ip] and ![server.address] {
      mutate {
        add_field => { "server.address" => "%{server.ip}" }
      }
      dns {
        reverse => ["server.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
        add_tag => ["_dns_success_server.address"]
      }
      if ![server.domain] and "_dns_success_server.address" in [tags] {
        dissect {
          mapping => {
          "server.address" => "%{?host_name}.%{server.domain}"
          }
        }
        mutate {
          remove_tag => ["_dns_success_server.address"]
        }
      }
    }
    if [source.ip] and ![source.address] {
      mutate {
        add_field => { "source.address" => "%{source.ip}" }
      }
      dns {
        reverse => ["source.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
        add_tag => ["_dns_success_source.address"]
      }
      if ![source.domain] and "_dns_success_source.address" in [tags] {
        dissect {
          mapping => {
          "source.address" => "%{?host_name}.%{source.domain}"
          }
        }
        mutate {
          remove_tag => ["_dns_success_source.address"]
        }
      }
    }
    if [observer.ip] and ![observer.hostname] {
      mutate {
        add_field => { "observer.hostname" => "%{observer.ip}" }
      }
      dns {
        reverse => ["observer.hostname"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
    }
  }
}