# lowercase fields
# if a field exists, and it is not an excluded key, lowercase it
# url field are already lowercased in url enrichment so don't redo
filter {
  if "disable_lowercase_enrichment" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_lowercase_enrichment", "disable_enrichments"]
    }
  } else {
    ruby {
      code => '
        hash = event.to_hash
        lowercase_exclude_list = [
          "rule.uuid",
          "file.gid",
          "file.uid",
          "trace.id",
          "transaction.id",
          "event.reference",
          "package.reference",
          "rule.reference",
          "threat.tactic.reference",
          "threat.technique.reference",
          "vulnerability.reference",
          "dll.pe.original_file_name",
          "file.pe.original_file_name",
          "process.pe.original_file_name",
          "url.domain",
          "url.extension",
          "url.fragment",
          "url.full.text",
          "url.original",
          "url.original.text",
          "url.password",
          "url.path",
          "url.port",
          "url.query",
          "url.registered_domain",
          "url.scheme",
          "url.top_level_domain",
          "url.username",
          "log.original",
          "user_agent.original",
          "user_agent.original.text"
        ]
        hash.each do |k,v|
          if v.is_a? String
            if lowercase_exclude_list.include?k
              next
            else
              event.set(k, v.to_s.downcase)
            end
          end
        end
      '
      tag_on_exception => "enrichment_lowercase_ruby_exception"
    }
  }
}