##### mapping logs with MISP memcache
# If IOC exists fetch it's stored value from memcached
# Dissect to extract fields
# Remove the fetched field so that same key can be used to get new value in next `if block`.
filter {
  if "disable_misp_enrichment" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_misp_enrichment"]
    }
  } else {
    if [process.hash.md5] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "process.hash.md5"
        get => { "%{process.hash.md5}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_process.hash.md5" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [process.parent.hash.md5] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "process.parent.hash.md5"
        get => { "%{process.parent.hash.md5}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_process.parent.hash.md5" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.hash.md5] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.hash.md5"
        get => { "%{file.hash.md5}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.hash.md5" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.hash.sha1] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.hash.sha1"
        get => { "%{file.hash.sha1}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.hash.sha1" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.hash.sha256] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.hash.sha256"
        get => { "%{file.hash.sha256}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.hash.sha256" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.hash.sha512] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.hash.sha512"
        get => { "%{file.hash.sha512}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.hash.sha512" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.name"
        get => { "%{file.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.name] and [file.hash.md5] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.name_file.hash.md5"
        get => { "%{file.name}|%{file.hash.md5}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.name_file.hash.md5" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.name] and [file.name_hash.sha1] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.name_file.hash.sha1"
        get => { "%{file.name}|%{file.name_hash.sha1}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.name_file.hash.sha1" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.name] and [file.hash.sha256] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.name_file.hash.sha256"
        get => { "%{file.name}|%{file.hash.sha256}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.name_file.hash.sha256" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.name] and [file.hash.sha512] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.name_file.hash.sha512"
        get => { "%{file.name}|%{file.hash.sha512}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.name_file.hash.sha512" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [source.ip] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "source.ip"
        get => { "%{source.ip}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_source.ip" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.ip] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.ip"
        get => { "%{destination.ip}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.ip" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [host.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "host.name"
        get => { "%{host.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_host.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [url.domain] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "url.domain"
        get => { "%{url.domain}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_url.domain" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [url.domain] and [destination.ip] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "url.domain_destination.ip"
        get => { "%{url.domain}|%{destination.ip}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_url.domain_destination.ip" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [url.full] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "url.full"
        get => { "%{url.full}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_url.full" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [http.request.method] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "http.request.method"
        get => { "%{http.request.method}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_http.request.method" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [user_agent.original] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "user_agent.original"
        get => { "%{user_agent.original}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_user_agent.original" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [tls.server.hash.md5] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "tls.server.hash.md5"
        get => { "%{tls.server.hash.md5}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_tls.server.hash.md5" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [registry.key] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "registry.key"
        get => { "%{registry.key}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_registry.key" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [registry.key] and [registry.value] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "registry.key_registry.value"
        get => { "%{registry.key}|%{registry.value}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_registry.key_registry.value" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [source.as.organization.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "source.as.organization.name"
        get => { "%{source.as.organization.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_source.as.organization.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [rule.description] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "rule.description"
        get => { "%{rule.description}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_rule.description" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.mime_type] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.mime_type"
        get => { "%{file.mime_type}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.mime_type" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [user.id] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "user.id"
        get => { "%{user.id}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_user.id" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [http.cookie.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "http.cookie.name"
        get => { "%{http.cookie.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_http.cookie.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [vulnerability.reference] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "vulnerability.reference"
        get => { "%{vulnerability.reference}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_vulnerability.reference" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [file.path] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "file.path"
        get => { "%{file.path}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_file.path" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.user.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.user.name"
        get => { "%{destination.user.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.user.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.user.email] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.user.email"
        get => { "%{destination.user.email}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.user.email" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.address] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.address"
        get => { "%{destination.address}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.address" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.as.organization.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.as.organization.name"
        get => { "%{destination.as.organization.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.as.organization.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [process.name] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "process.name"
        get => { "%{process.name}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_process.name" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [tls.server.hash.sha1] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "tls.server.hash.sha1"
        get => { "%{tls.server.hash.sha1}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_tls.server.hash.sha1" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [tls.server.hash.md5] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "tls.server.hash.md5"
        get => { "%{tls.server.hash.md5}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_tls.server.hash.md5" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [tls.server.hash.sha256] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "tls.server.hash.sha256"
        get => { "%{tls.server.hash.sha256}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_tls.server.hash.sha256" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.port] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.port"
        get => { "%{destination.port}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.port" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.ip] and [destination.port] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.ip_destination.port"
        get => { "%{destination.ip}|%{destination.port}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.ip_destination.port" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.address] and [destination.port] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.address_destination.port"
        get => { "%{destination.address}|%{destination.port}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.address_destination.port" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [source.mac] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "source.mac"
        get => { "%{source.mac}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_source.mac" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [source.user.email] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "source.user.email"
        get => { "%{source.user.email}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_source.user.email" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [destination.user.email] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "destination.user.email"
        get => { "%{destination.user.email}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_destination.user.email" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [email.subject] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "email.subject"
        get => { "%{email.subject}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_email.subject" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [email.body] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "email.body"
        get => { "%{email.body}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_email.body" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
    if [email.header] {
      memcached {
        hosts => ["${MEMCACHED_ADDRESS}"]
        namespace => "email.header"
        get => { "%{email.header}" => "memcache_value" }
        add_tag => [ "misp" ]
      }
      if "memcached_get_success_email.header" in [tags] {
        dissect {
          mapping => {
            "memcache_value" => '"threat.list.ioc": "%{threat.list.ioc}", "threat.list.type": "%{threat.list.type}", "threat.list.event_analysis": "%{threat.list.event_analysis}", "threat.list.member_org": "%{threat.list.member_org}", "threat.list.source_org": "%{threat.list.source_org}", "threat.list.event_info": "%{threat.list.event_info}", "threat.list.severity_name": "%{threat.list.severity_name}", "threat.list.category": "%{threat.list.category}", "threat.list.object_category": "%{threat.list.object_category}", "threat.list.comment": "%{threat.list.comment}", "threat.list.event_tag": "%{threat.list.event_tag}", "threat.list.safe_to_enable_ids": "%{threat.list.safe_to_enable_ids}", "threat.list.object_relation": "%{threat.list.object_relation}", "threat.list.attribute_tag": "%{threat.list.attribute_tag}", "threat.list.object_name": "%{threat.list.object_name}"'
          }
        }
        mutate {
          remove_field => ["memcache_value"]
        }
      }
    }
  }
}