#####################################################
# WARNING Logstash prior to version 7.11 on windows based client setting the environment variable for PUBLIC_DNS and PRIVATE_DNS does not work if they are array
# all ecs ip/hostname fields
# related.ip, client.nat.ip, server.nat.ip, source.nat.ip, destination.nat.ip
# 
# client.ip, client.address
# destination.ip, destination.address
# server.ip, server.address
# source.ip, source.address
# host.ip, host.hostname
# observer.ip, observer.hostname
# 
# not touching related.ip as it would be duplicated
# and .nat.ip fields do not have corresponding name fields
# 
# for all others
# if hostname field exists and it's an IP and the IP field does not exist
#   copy the hostname to IP and remove hostname
# 
# if .ip field exists and .hostname/.address does not
#   copy the .ip to .hostname/.address and lookup for name
#   and replace the .hostname value with the found name
# 
# if the hostname field exists no matter how we got that split to get the domain
# 
# don't want to retry lookup coz of high volume.
# Also same IPs would be hit in next logs and maybe cached
#####################################################
filter {
  if "disable_dns_enrichment" in [tags] or "disable_lookups" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_dns_enrichment"]
    }
  }
  else {
    ### Reverse lookup
    if [client.ip] and ![client.ip][0] and ![client.address] {
      mutate {
        add_field => {
          "client.address" => "%{client.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["client.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [client.address] =~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["client.address"]
        }
      }
    }
    if [host.ip] and ![host.ip][0] and ![host.hostname] {
      mutate {
        add_field => {
          "host.hostname" => "%{host.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["host.hostname"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
    }
    if [server.ip] and ![server.ip][0] and ![server.address] {
      mutate {
        add_field => {
          "server.address" => "%{server.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["server.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [server.address] =~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["server.address"]
        }
      }
    }
    if [source.ip] and ![source.ip][0] and ![source.address] {
      mutate {
        add_field => {
          "source.address" => "%{source.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["source.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [source.address] =~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["source.address"]
        }
      }
    }
    if [destination.ip] and ![destination.ip][0] and ![destination.address] {
      mutate {
        add_field => {
          "destination.address" => "%{destination.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["destination.address"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [destination.address] =~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["destination.address"]
        }
      }
    }
    if [log.source.ip] and ![log.source.ip][0] and ![log.source.hostname] {
      mutate {
        add_field => {
          "log.source.hostname" => "%{log.source.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["log.source.hostname"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [log.source.hostname] =~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["log.source.hostname"]
        }
      }
    }
    if [observer.ip] and ![observer.ip][0] and ![observer.hostname] {
      mutate {
        add_field => {
          "observer.hostname" => "%{observer.ip}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["observer.hostname"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [observer.hostname] =~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["observer.hostname"]
        }
      }
    }
    ### resolve
    if [client.address] and ![client.address][0] and ![client.ip] {
      mutate {
        add_field => {
          "client.ip" => "%{client.address}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        resolve => ["client.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [client.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["client.ip"]
        }
      }
    }
    if [host.hostname] and ![host.hostname][0] and ![host.ip] {
      mutate {
        add_field => {
          "host.ip" => "%{host.hostname}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        resolve => ["host.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [host.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["host.ip"]
        }
      }
    }
    if [server.address] and ![server.address][0] and ![server.ip] {
      mutate {
        add_field => {
          "server.ip" => "%{server.address}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        resolve => ["server.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [server.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["server.ip"]
        }
      }
    }
    if [source.address] and ![source.address][0] and ![source.ip] {
      mutate {
        add_field => {
          "source.ip" => "%{source.address}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["source.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [source.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["source.ip"]
        }
      }
    }
    if [destination.address] and ![destination.address][0] and ![destination.ip] {
      mutate {
        add_field => {
          "destination.ip" => "%{destination.address}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        resolve => ["destination.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [destination.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["destination.ip"]
        }
      }
    }
    if [log.source.hostname] and ![log.source.hostname][0] and ![log.source.ip] {
      mutate {
        add_field => {
          "log.source.ip" => "%{log.source.hostname}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["log.source.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [log.source.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["log.source.ip"]
        }
      }
    }
    if [observer.hostname] and ![observer.hostname][0] and ![observer.ip] {
      mutate {
        add_field => {
          "observer.ip" => "%{observer.hostname}"
        }
      }
      dns {
        nameserver => [VAR_DNS_SERVER]
        reverse => ["observer.ip"]
        action => "replace"
        max_retries => 0
        hit_cache_size => 500000
        hit_cache_ttl => 3600
        failed_cache_size => 500000
        failed_cache_ttl => 3600
      }
      if [observer.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
        mutate {
          remove_field => ["observer.ip"]
        }
      }
    }
    ### is source.ip public oe private
    if [source.ip] and [source.ip] =~ {^(192.168\.\d+\.\d+|172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+|10\.\d+\.\d+\.\d+|100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+)$" {
      mutate {
        add_tag => [ "source_ip_private" ]
      }
    } else if [source.ip] {
      mutate {
        add_tag => [ "source_ip_public" ]
      }
    }
### is destination.ip public oe private
    if [destination.ip] and [destination.ip] =~ {^(192.168\.\d+\.\d+|172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+|10\.\d+\.\d+\.\d+|100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+)$" {
      mutate {
        add_tag => [ "destination_ip_private" ]
      }
    } else if [destination.ip] {
      mutate {
        add_tag => [ "destination_ip_public" ]
      }
    }
  }
}