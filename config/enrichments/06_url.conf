# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
# 1. Check to see if url.original or url.full exsist and 
# 2. Ensures url.original and url.full both exsist
# 3. Lowercase [url][full]
# 4. Parses [url][full] into subfields tmp fields
# 5. Rename tmp fields to ECS fields if fields do not exsist
# 6. Convert "[url][port]" to "integer" and remove tmp field
# 7. Run Top Level Domain (TLD) against [url][domain] filter
# 8. Rename tld fields to ECS fields if ECS field does not exsist
# 9. Remove the remaining TLD fields
filter {
  if "disable_url_enrichment" in [tags] or "disable_code_reduction" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_url_enrichment"]
    }
  } else {
      if [url][full] or [url][original] {
        if [url][full] and (![url][original] or [url][original] == "") {
          mutate {
            copy => { "[url][full]" => "[url][original]" }
          }
        }
        if [url][original] and (![url][full] or [url][full] == "") {
          mutate {
            copy => { "[url][original]" => "[url][full]" }
          }
        }
        # parse out url into temp sub fields
        mutate {
          lowercase => [ "[url][full]" ]
        }
        grok {
          match => {"[url][full]" => "^((?<[tmp][url][scheme]>.*?)://)?((?<[tmp][user][name]>.*?):(?<[tmp][user][password]>.*?)@)?(?<[tmp][url][domain]>[\w\-\_\.]+)(:(?<[tmp][url][port]>\d+))?(/|$)((?<[tmp][url][path]>.*?))?(\?(?<[tmp][url][query]>.*?))?(\#(?<[tmp][url][fragment]>.*?))?$" }
          timeout_millis => 500
          tag_on_failure => "_groktimeout_url_en_1"
        }
        if [tmp][url][scheme] and (![url][scheme] or [url][scheme] == "" ) {
          mutate {
            rename => { "[tmp][url][scheme]" => "[url][scheme]" }
          }
        }
        if [tmp][user][name] and (![user][name] or [user][name] == "" ) {
          mutate {
            rename => { "[tmp][user][name]" => "[url][username]" }
          }
        }
        if [tmp][user][password] and (![user][password] or [user][password] == "" ) {
          mutate {
            rename => { "[tmp][user][password]" => "[url][password]" }
          }  
        }
        if [tmp][url][domain] and (![url][domain] or [url][domain] == "" ) {
          mutate {
            rename => { "[tmp][url][domain]" => "[url][domain]" }
          }
        }
        if [tmp][url][port] and (![url][port] or [url][port] == "" ) {
          mutate {
            rename => { "[tmp][url][port]" => "[url][port]" }
          }
        }
        if [tmp][url][path] and (![url][path] or [url][path] == "" ) {
          mutate {
            rename => { "[tmp][url][path]" => "[url][path]" }
          }
        }
        if [tmp][url][query] and (![url][query] or [url][query] == "" ) {
          mutate {
            rename => { "[tmp][url][query]" => "[url][query]" }
          }
        }
        if [tmp][url][fragment] and (![url][fragment] or [url][fragment] == "" ) {
          mutate {
            rename => { "[tmp][url][fragment]" => "[url][fragment]" }
          }  
        }
      mutate {
        convert => { "[url][port]" => "integer" }
        remove_field => [ "tmp" ]
      }
      tld {
        source => "[url][domain]"
        target => "tmp"
      }
      if [tmp][domain] and (![url][registered_domain] or [url][registered_domain] == "" ) {
        mutate {
          rename => { "[tmp][domain]" => "[url][registered_domain]" }
        }
      }
      if [tmp][sld] and (![url][subdomain] or [url][subdomain] == "" ) {
        mutate {
          rename => {  "[tmp][sld]" => "[url][subdomain]"  }
        }
      }
      if [tmp][tld] and (![url][top_level_domain] or [url][top_level_domain] == "" ) {
          mutate {
            rename => { "[tmp][tld]" => "[url][top_level_domain]" }
          }
      }
      mutate {
        remove_field => [ "tmp" ]
      }
    }
  }
}
