# remove empty fields and truncate all fields to 1024 bytes
filter {
  if "disable_remove_empty_n_truncate_enrichment" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_remove_empty_n_truncate_enrichment", "disable_enrichments"]
    }
  } else {
    ruby {
      code => '
        hash = event.to_hash
        truncate_exclude_list = [
          "message",
          "client.as.organization.name.text",
          "client.user.full_name.text",
          "client.user.name.text",
          "destination.as.organization.name.text",
          "destination.user.full_name.text",
          "destination.user.name.text",
          "destination.user.email",
          "error.message",
          "error.stack_trace.text",
          "file.path.text",
          "file.target_path.text",
          "host.os.full.text",
          "host.os.name.text",
          "host.user.full_name.text",
          "host.user.name.text",
          "http.request.body.content.text",
          "http.response.body.content.text",
          "observer.os.full.text",
          "observer.os.name.text",
          "organization.name.text",
          "process.command_line.text",
          "process.executable.text",
          "process.name.text",
          "process.parent.command_line.text",
          "process.parent.executable.text",
          "process.parent.name.text",
          "process.parent.title.text",
          "process.parent.working_directory.text",
          "process.title.text",
          "process.working_directory.text",
          "server.as.organization.name.text",
          "server.user.full_name.text",
          "server.user.name.text",
          "source.as.organization.name.text",
          "source.user.full_name.text",
          "source.user.name.text",
          "threat.technique.name.text",
          "url.full.text",
          "url.original.text",
          "user.full_name.text",
          "user.name.text",
          "user_agent.original.text",
          "user_agent.os.full.text",
          "user_agent.os.name.text",
          "vulnerability.description.text",
        ]
        hash.each do |k,v|
          if v == nil
            event.remove(k)
          else
            if v.is_a? String
              exclude_list = ["-", "null", "nil", "n/a"]
              stripd_val = v.to_s.strip.downcase
              if stripd_val.empty? or exclude_list.include?stripd_val or /%{[a-z\-_.]+}/.match(stripd_val)
                event.remove(k)
              else
                if truncate_exclude_list.include?k
                  next
                end
                event.set(k, v.to_s[0, 1023])
              end
            end
          end
        end
      '
      tag_on_exception => "enrichment_remove_empty_ruby_exception"
    }
  }
}