filter {
  if "disable_host_split" in [tags] or "disable_code_reduction" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_host_split"]
    }
  }
  else {
    # [client][address] [client][domain]
    if [client][address] =~ "^.*?\..*?$" {
      if [client][address] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[client][address]" => "^(?<[client][tmp]>\d+.\d+.\d+.\d+)\.(?<[client][domain]>.*?)$" }
          tag_on_failure => "_logsourcesourcename_grok_failure"
        }
        mutate {
          rename => { "[client][tmp]" => "[client][address]" }
        }
      } else if [client][address] !~ "^\d+\.\d+\.\d+\.\d+$" {
        grok {
          match => { "[client][address]" => "^(?<[client][tmp]>.*?)\.(?<[client][domain]>.*?)$" }
          tag_on_failure => "_logsourcesourcename_grok_failure_2"
        }
        mutate {
          rename => { "[client][tmp]" => "[client][address]" }
        }
      }
    }

    # [server][address] [server][domain]
    if [server][address] =~ "^.*?\..*?$" {
      if [server][address] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[server][address]" => "^(?<[server][tmp]>\d+.\d+.\d+.\d+)\.(?<[server][domain]>.*?)$" }
          tag_on_failure => "_logsourcesourcename_grok_failure"
        }
        mutate {
          rename => { "[server][tmp]" => "[server][address]" }
        }
      } else if [server][address] !~ "^\d+\.\d+\.\d+\.\d+$" {
        grok {
          match => { "[server][address]" => "^(?<[server][tmp]>.*?)\.(?<[server][domain]>.*?)$" }
          tag_on_failure => "_logsourcesourcename_grok_failure_2"
        }
        mutate {
          rename => { "[server][tmp]" => "[server][address]" }
        }
      }
    }

    # [source][address] [source][domain]
    if [source][address] =~ "^.*?\..*?$" {
      if [source][address] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[source][address]" => "^(?<[source][tmp]>\d+.\d+.\d+.\d+)\.(?<[source][domain]>.*?)$" }
          tag_on_failure => "_logsourcesourcename_grok_failure"
        }
        mutate {
          rename => { "[source][tmp]" => "[source][address]" }
        }
      } else if [source][address] !~ "^\d+\.\d+\.\d+\.\d+$" {
        grok {
          match => { "[source][address]" => "^(?<[source][tmp]>.*?)\.(?<[source][domain]>.*?)$" }
          tag_on_failure => "_logsourcesourcename_grok_failure_2"
        }
        mutate {
          rename => { "[source][tmp]" => "[source][address]" }
        }
      }
    }
    
    # [host][hostname] [host][domain]
    if [host][hostname] =~ "^.*?\..*?$" {
      if [host][hostname] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[host][hostname]" => "^(?<[host][tmp]>\d+.\d+.\d+.\d+)\.(?<[host][domain]>.*?)$" }
          tag_on_failure => "_logsourcehostname_grok_failure"
        }
        mutate {
          rename => { "[host][tmp]" => "[host][hostname]" }
        }
      } else if [host][hostname] !~ "^\d+\.\d+\.\d+\.\d+$" {
        grok {
          match => { "[host][hostname]" => "^(?<[host][tmp]>.*?)\.(?<[host][domain]>.*?)$" }
          tag_on_failure => "_logsourcehostname_grok_failure_2"
        }
        mutate {
          rename => { "[host][tmp]" => "[host][hostname]" }
        }
      }
    }
    
    # [log][source][hostname] [log][source][domain]
    if [log][source][hostname] =~ "^.*?\..*?$" {
      if [log][source][hostname] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[log][source][hostname]" => "^(?<[log][source][tmp]>\d+.\d+.\d+.\d+)\..*?$" }
          tag_on_failure => "_logsourcehostname_grok_failure"
        }
        mutate {
          rename => { "[log][source][tmp]" => "[log][source][hostname]" }
        }
      }
    }

    # [destination][address] [destination][domain]
    if [destination][address] =~ "^.*?\..*?$" {
      if [destination][address] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[destination][address]" => "^(?<[destination][tmp]>\d+.\d+.\d+.\d+)\.(?<[destination][domain]>.*?)$" }
          tag_on_failure => "_destinationaddress_grok_failure"
        }
        mutate {
          rename => { "[destination][tmp]" => "[destination][address]" }
        }
      } else if [destination][address] !~ "^\d+\.\d+\.\d+\.\d+$" {
        grok {
          match => { "[destination][address]" => "^(?<[destination][tmp]>.*?)\.(?<[destination][domain]>.*?)$" }
          tag_on_failure => "_destinationaddress_grok_failure_2"
        }
        mutate {
          rename => { "[destination][tmp]" => "[destination][address]" }
        }
      }
    }

    # [observer][hostname] [observer][domain]
    if [observer][hostname] =~ "^.*?\..*?$" {
      if [observer][hostname] =~ "^\d+\.\d+\.\d+\.\d+\..*?$" {
        grok {
          match => { "[observer][hostname]" => "^(?<[observer][tmp]>\d+.\d+.\d+.\d+)\..*?$" }
          tag_on_failure => "_observerhostname_grok_failure"
        }
        mutate {
          rename => { "[observer][tmp]" => "[observer][hostname]" }
        }
      }
    }
  }
}
