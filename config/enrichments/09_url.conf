# 1. Removes all url.x fields, except for url.full
# 2. Copies url.full to url.original
# 3. Lowercase url.full
# 4. If url.full then parses url.full into subfields
# 5. if url.domain processes url.domain with Top Level Domain (TLD) filter
# 6. Rename tld fields to ECS fields
# 7. Remove the remaining TLD fields not ECS
filter {
  if "disable_url_enrichment" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_url_enrichment"]
    }
  } else {
    mutate {
      remove_field => [ "url.domain", "url.extension", "url.fragment", "url.full.text", "url.original", "url.original.text", "url.password", "url.path", "url.port", "url.query", "url.registered_domain", "url.scheme", "url.top_level_domain", "url.username" ]
      tag_on_failure => "_mutate_error_url_en_1"
    }

    ### URL enrichment
    if [url.full] and [url.full] != "" {
      ### mutate order of operation has lowercase before copy 
      mutate {
        lowercase => [ "url.full" ]
      }
      mutate {
        copy => { "url.full" => "url.original" }
        tag_on_failure => "_mutate_error_url_en_2"
      }
      grok {
        match => { "url.full" => "^((?<url.scheme>[A-Za-z]+(\+[A-Za-z+]+)?):\/\/)?((?<url.username>.*?):(?<url.password>.*?)@)?(?<url.domain>(\w+)(\.\w+)+)(:(?<url.port>\d+))?(?<url.path>\/.*?(\.(?<url.extension>.*?))?)?(\?(?<url.query>).*?)?(\#(?<url.fragment>.*?))?$" }      
        tag_on_failure => "_groktimeout_url_en_1"
      }

      # add tld enrichment
      # if url.domain exists parse it for top level domain
      # tld filter produces object like
      # {trd=clients4, domain=google.com, subdomain=clients4.google.com, sld=google, tld=com}
      # mutate the tld and domain fields to url.top_level_domain and url.registered_domain respectively
      # tld {
      #   source => "url.domain"
      #   target => "tld_object"
      # }
      # mutate {
      #   rename => {"[tld_object][tld]" => "url.top_level_domain"}
      #   rename => {"[tld_object][domain]" => "url.registered_domain"}
      #   remove_field => ["tld_object"]
      # }
    }
  }
}