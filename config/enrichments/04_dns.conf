#####################################################
# WARNING Logstash prior to version 7.11 on windows based client setting the environment variable for PUBLIC_DNS and PRIVATE_DNS does not work if they are array
# all ecs ip/hostname fields
# related.ip, client.nat.ip, server.nat.ip, source.nat.ip, destination.nat.ip
# 
# client.ip, client.address
# destination.ip, destination.address
# server.ip, server.address
# source.ip, source.address
# host.ip, host.hostname
# observer.ip, observer.hostname
# 
# not touching related.ip as it would be duplicated
# and .nat.ip fields do not have corresponding name fields
# 
# for all others
# if hostname field exists and it's an IP and the IP field does not exist
#   copy the hostname to IP and remove hostname
# 
# if .ip field exists and .hostname/.address does not
#   copy the .ip to .hostname/.address and lookup for name
#   and replace the .hostname value with the found name
# 
# if the hostname field exists no matter how we got that split to get the domain
# 
# don't want to retry lookup coz of high volume.
# Also same IPs would be hit in next logs and maybe cached
#####################################################
filter {
  if "disable_dns_enrichment" in [tags] or "disable_lookups" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_dns_enrichment"]
    }
  } else {
    if [host.hostname] and [host.hostname] =~ "^\d+\.\d+\.\d+\.\d+$" and ![host.ip] {
      mutate {
        copy => { "host.hostname" =>  "host.ip" }
        remove_field => [ "host.hostname" ]
      }
    }
    ### DNS lookup
    if [host.ip] and ![host.hostname] {
      ### Exclude loopback address
      if [host.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "host.hostname" => "%{host.ip}" }
        }
        ### Private vs Public
        if [host.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [host.ip] =~ "^10\.\d+\.\d+\.\d+$" or [host.ip] =~ "^192.168\.\d+\.\d+$" or [host.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["host.hostname"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["host.hostname"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
        if ![host.domain] and [host.domain] !~ "^\d+\.\d+\.\d+\.\d+$" {
          dissect {
            mapping => {
              "host.hostname" => "%{host.hostname}.%{host.domain}"
            }
          }
        }
      }
    }
    if [client.address] and [client.address] =~ "^\d+\.\d+\.\d+\.\d+$" and ![client.ip] {
      mutate {
        copy => { "client.address" =>  "client.ip" }
        remove_field => [ "client.address" ]
      }
    }
    ### DNS lookup
    if [client.ip] and ![client.address] {
      ### Exclude loopback address
      if [client.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "client.address" => "%{client.ip}" }
        }
        ### Private vs Public
        if [client.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [client.ip] =~ "^10\.\d+\.\d+\.\d+$" or [client.ip] =~ "^192.168\.\d+\.\d+$" or [client.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["client.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["client.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
        if ![client.domain] and [client.domain] !~ "^\d+\.\d+\.\d+\.\d+$" {
          dissect {
            mapping => {
              "client.address" => "%{client.address}.%{client.domain}"
            }
          }
        }
      }
    }
    if [destination.address] and [destination.address] =~ "^\d+\.\d+\.\d+\.\d+$" and ![destination.ip] {
      mutate {
        copy => { "destination.address" =>  "destination.ip" }
        remove_field => [ "destination.address" ]
      }
    }
    ### DNS lookup
    if [destination.ip] and ![destination.address] {
      ### Exclude loopback address
      if [destination.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "destination.address" => "%{destination.ip}" }
        }
        ### Private vs Public
        if [destination.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [destination.ip] =~ "^10\.\d+\.\d+\.\d+$" or [destination.ip] =~ "^192.168\.\d+\.\d+$" or [destination.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["destination.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["destination.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
        if ![destination.domain] and [destination.domain] !~ "^\d+\.\d+\.\d+\.\d+$" {
          dissect {
            mapping => {
              "destination.address" => "%{destination.address}.%{destination.domain}"
            }
          }
        }
      }
    }
    if [server.address] and [server.address] =~ "^\d+\.\d+\.\d+\.\d+$" and ![server.ip] {
      mutate {
        copy => { "server.address" =>  "server.ip" }
        remove_field => [ "server.address" ]
      }
    }
    ### DNS lookup
    if [server.ip] and ![server.address] {
      ### Exclude loopback address
      if [server.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "server.address" => "%{server.ip}" }
        }
        ### Private vs Public
        if [server.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [server.ip] =~ "^10\.\d+\.\d+\.\d+$" or [server.ip] =~ "^192.168\.\d+\.\d+$" or [server.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["server.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["server.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
        if ![server.domain] and [server.domain] !~ "^\d+\.\d+\.\d+\.\d+$" {
          dissect {
            mapping => {
              "server.address" => "%{server.address}.%{server.domain}"
            }
          }
        }
      }
    }
    if [source.address] and [source.address] =~ "^\d+\.\d+\.\d+\.\d+$" and ![source.ip] {
      mutate {
        copy => { "source.address" =>  "source.ip" }
        remove_field => [ "source.address" ]
      }
    }
    ### DNS lookup
    if [source.ip] and ![source.address] {
      ### Exclude loopback address
      if [source.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "source.address" => "%{source.ip}" }
        }
        ### Private vs Public
        if [source.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [source.ip] =~ "^10\.\d+\.\d+\.\d+$" or [source.ip] =~ "^192.168\.\d+\.\d+$" or [source.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["source.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["source.address"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
        if ![source.domain] and [source.domain] !~ "^\d+\.\d+\.\d+\.\d+$" {
          dissect {
            mapping => {
              "source.address" => "%{source.address}.%{source.domain}"
            }
          }
        }
      }
    }
    if [observer.hostname] and [observer.hostname] =~ "^\d+\.\d+\.\d+\.\d+$" and ![observer.ip] {
      mutate {
        copy => { "observer.hostname" =>  "observer.ip" }
        remove_field => [ "observer.hostname" ]
      }
    }
    ### DNS lookup
    if [observer.ip] and ![observer.hostname] {
      ### Exclude loopback address
      if [observer.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "observer.hostname" => "%{observer.ip}" }
        }
        ### Private vs Public
        if [observer.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [observer.ip] =~ "^10\.\d+\.\d+\.\d+$" or [observer.ip] =~ "^192.168\.\d+\.\d+$" or [observer.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["observer.hostname"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["observer.hostname"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
      }
    }
    if [log.source.hostname] and [log.source.hostname] =~ "^\d+\.\d+\.\d+\.\d+$" and ![log.source.ip] {
      mutate {
        copy => { "log.source.hostname" =>  "log.source.ip" }
        remove_field => [ "log.source.hostname" ]
      }
    }
    ### DNS lookup
    if [log.source.ip] and ![log.source.hostname] {
      ### Exclude loopback address
      if [log.source.ip] != "^127\.\d+\.\d+\.\d+$" {
        mutate {
          add_field => { "log.source.hostname" => "%{log.source.ip}" }
        }
        ### Private vs Public
        if [log.source.ip] =~ "^100\.(64|[7-9][0-9]|1[0-1][0-9]|12[0-7])\.\d+\.\d+$" or [log.source.ip] =~ "^10\.\d+\.\d+\.\d+$" or [log.source.ip] =~ "^192.168\.\d+\.\d+$" or [log.source.ip] =~ "^172\.([1][6-9]|[2][0-9]|[3][0-1])\.\d+\.\d+$" {
          # PRIVATE_DNS
          dns {
            nameserver => {
              address => "${PRIVATE_DNS}"
            }
            reverse => ["log.source.hostname"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        } else {
          # PUBLIC_DNS
          dns {
            nameserver => {
              address => "${PUBLIC_DNS}"
            }
            reverse => ["log.source.hostname"]
            action => "replace"
            max_retries => 0
            hit_cache_size => 500000
            hit_cache_ttl => 3600
            failed_cache_size => 500000
            failed_cache_ttl => 3600
          }
        }
      }
    }
  }
}