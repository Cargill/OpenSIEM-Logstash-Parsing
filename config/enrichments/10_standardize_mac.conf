# This enrichment takes the various schemas of MAC addresses and converts them to a common format (no punctuation)
filter {
  if "disable_standardize_mac" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_standardize_mac"]
    }
  }
  else {
    if [host.mac] and [host.mac] != "" {
      ruby {
        code => '
          mac = event.get("host.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("host.mac", mac)
        '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
    if [client.mac] and [client.mac] != "" {
      ruby {
        code => '
          mac = event.get("client.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("client.mac", mac)
          '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
    if [destination.mac] and [destination.mac] != "" {
      ruby {
        code => '
          mac = event.get("destination.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("destination.mac", mac)
          '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
    if [observer.mac] and [observer.mac] != "" {
      ruby {
        code => '
          mac = event.get("observer.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("observer.mac", mac)
          '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
    if [server.mac] and [server.mac] != "" {
      ruby {
        code => '
          mac = event.get("server.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("server.mac", mac)
        '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
    if [source.mac] and [source.mac] != "" {
      ruby {
        code => '
          mac = event.get("source.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("source.mac", mac)
          '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
    if [network.mac] and [network.mac] != "" {
      ruby {
        code => '
          mac = event.get("network.mac")
          if mac.is_a? String
            mac = mac.gsub(":", "").gsub("-", "")
          else
            mac = mac.map { |address| address.gsub(":","").gsub("-", "")}
          end
          event.set("network.mac", mac)
          '
        tag_on_exception => "enrichment_standardize_mac_ruby_exception"
      }
    }
  }
}