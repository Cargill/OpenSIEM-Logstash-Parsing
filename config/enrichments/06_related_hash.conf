############ related hash
filter {
  if "disable_related_hash_enrichment" in [tags] or "disable_related_fields" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_related_hash_enrichment"]
    }
  } else {
    mutate {
      add_field => {"related.hash" => ""}
    }
    mutate {
      strip => ["dll.hash.md5", "dll.hash.sha1", "dll.hash.sha256", "dll.hash.sha512", "file.hash.md5", "file.hash.sha1", "file.hash.sha256", "file.hash.sha512", "hash.sha1", "process.hash.md5", "process.hash.sha1", "process.hash.sha256", "process.hash.sha512", "process.parent.hash.md5", "process.parent.hash.sha1", "process.parent.hash.sha256", "process.parent.hash.sha512"]
    }
    mutate {
      merge => { "related.hash" => "dll.hash.md5" }
      merge => { "related.hash" => "dll.hash.sha1" }
      merge => { "related.hash" => "dll.hash.sha256" }
      merge => { "related.hash" => "dll.hash.sha512" }
      merge => { "related.hash" => "file.hash.md5" }
      merge => { "related.hash" => "file.hash.sha1" }
      merge => { "related.hash" => "file.hash.sha256" }
      merge => { "related.hash" => "file.hash.sha512" }
      merge => { "related.hash" => "hash.sha1" }
      merge => { "related.hash" => "process.hash.md5" }
      merge => { "related.hash" => "process.hash.sha1" }
      merge => { "related.hash" => "process.hash.sha256" }
      merge => { "related.hash" => "process.hash.sha512" }
      merge => { "related.hash" => "process.parent.hash.md5" }
      merge => { "related.hash" => "process.parent.hash.sha1" }
      merge => { "related.hash" => "process.parent.hash.sha256" }
      merge => { "related.hash" => "process.parent.hash.sha512" }
      split => { "related.hash" => ", " }
    }
    if [related.hash] and ![related.hash][0] and [related.hash] !~ ".*?" {
      mutate {
          remove_field => [ "related.hash" ]
        }
    }
    if [related.hash] {
      # deduplicate related.hash
      ruby {
        code => 'event.set("related.hash", event.get("related.hash").uniq)'
      }
    }
  }
}