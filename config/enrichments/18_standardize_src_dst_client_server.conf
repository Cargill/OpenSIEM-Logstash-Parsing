filter {
  # according to ECS, server = destination and client = source
  if [destination][ip] {
    mutate {
      add_field => { "[server][ip]" => "%{[[destination][ip]]}" }
    }
  }
  if [destination][port] {
    mutate {
      add_field => { "[server][port]" => "%{[[destination][port]]}" }
    }
  }
  if [destination][nat][port] {
    mutate {
      add_field => { "[server][nat][port]" => "%{[[destination][nat][port]]}" }
    }
  }
  if [destination][bytes] {
    mutate {
      add_field => { "[server][bytes]" => "%{[[destination][bytes]]}" }
    }
  }
  if [destination][packets] {
    mutate {
      add_field => { "[server][packets]" => "%{[[destination][packets]]}" }
    }
  }
  if [source][ip] {
    mutate {
      add_field => { "[client][ip]" => "%{[[source][ip]]}" }
    }
  }
  if [source][port] {
    mutate {
      add_field => { "[client][port]" => "%{[[source][port]]}" }
    }
  }
  if [source][nat][port] {
    mutate {
      add_field => { "[client][nat][port]" => "%{[[source][nat][port]]}" }
    }
  }
  if [source][bytes] {
    mutate {
      add_field => { "[client][bytes]" => "%{[[source][bytes]]}" }
    }
  }
  if [source][packets] {
    mutate {
      add_field => { "[client][packets]" => "%{[[source][packets]]}" }
    }
  }
  if [source][domain]
 {
    mutate {
      add_field => { "[source][address]" => "%{[[source][domain]]}" }
    }
  }
  if [source][bytes] and [destination][bytes] {
    ruby {
	    code => "event.set('[network][bytes]', ( event.get('[source][bytes]').to_f + event.get('[destination][bytes]').to_f ))"
    }
  }
  if [source][packets] and [destination][packets] {
    ruby {
	    code => "event.set('[network][packets]', ( event.get('[source][packets]').to_f + event.get('[destination][packets]').to_f ))"
    }
  }
}
