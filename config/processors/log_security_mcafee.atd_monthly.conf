input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "organization.name" => "cargill" }
    add_field => { "event.module" => "mcafee" }
    add_field => { "event.dataset" => "mcafee.atd" }
    add_field => { "observer.vendor" => "mcafee" }
    add_field => { "observer.product" => "mcafee advanced threat defense" }
    add_field => { "observer.type" => "security_sandbox" }
  }
  ### Header
  ### Logstash tcp or udp in
  if [agent.type] == "logstash" {
    dissect {
      tag_on_failure => "_dateparsefailure_header"
      mapping => {
        message => "<%{pri}> %{rest_msg}"
      }
    }
  } else {
  ### Filebeats udp or tcp in
    dissect {
      tag_on_failure => "_dateparsefailure_header"
      mapping => {
        message => "%{?data} {%{?data}} <%{pri}> %{rest_msg}"
      }
    }
  }
  syslog_pri {
    syslog_pri_field_name => "pri"
  }
  dissect {
    mapping => {
      # 2019-09-09T10:58:44.873Z {name=iabrcamp004}      <181>          Sep           9              06:00:31      saop-atd1   MATD-LOG[3629]: {}
      "message" => "%{log_ts} {%{?data}} <%{pri}>%{event.start->} %{+event.start} %{+event.start} %{source.address} %{process.name}[%{process.pid}]: %{log_message}"
    }
  }
  json {
    source => "log_message"
    target => "atd"
  }
  mutate {
	rename => {
      "[atd][Summary][Client]" => "source.ip"
      "[atd][Summary][User]" => "user.name"
      "[atd][Summary][src ip]" => "source.ip"
      "[atd][Summary][dst ip]" => "destination.ip"
      "[atd][Summary][taskid]" => "process.thread.id"
      "[atd][Summary][port]" => "destination.port"
      "[atd][Summary][Subject][Name]" => "file.name"
      "[atd][Summary][Subject][type]" => "file.type"
      "[atd][Summary][Subject][md5]" => "file.hash.md5"
      "[atd][Summary][Subject][sha1]" => "file.hash.sha1"
      "[atd][Summary][Subject][sha-256]" => "file.hash.sha256"
      "[atd][Summary][Subject][sha-512]" => "file.hash.sha512"
      "[atd][Summary][Subject][size]" => "file.size"
      "[atd][Summary][Verdict][Severity]" => "event.severity"
      "[atd][Summary][Verdict][Description]" => "event.severity_name"
      "syslog_facility_code" => "log.syslog.facility.code"
      "syslog_facility" => "log.syslog.facility.name"
      "syslog_severity_code" => "log.syslog.severity.code"
      "syslog_severity" => "log.syslog.severity.name"
	  "[atd][Client]" => "source.ip"
      "[atd][Action]" => "event.action"
      "[atd][User]" => "user.name"
      "[atd][src ip]"=> "source.ip"
      "[atd][dst ip]"=> "destination.ip"
      "[atd][taskid]" => "process.thread.id"
      "[atd][port]"=> "destination.port"
      "[atd][url]"=> "url.full"
      "[atd][name]"=> "file.name"
      "[atd][type]"=> "file.type"
      "[atd][md5]"=> "hash.md5"
      "[atd][sha1]"=> "hash.sha1"
      "[atd][sha-256]"=> "hash.sha256"
      "[atd][sha-512]"=> "hash.sha512"
      "[atd][size]"=> "file.size"
      "[atd][techniques]"=> "threat.technique.name"
      "[atd][tactics]" => "threat.tactic.name"
      "[atd][Description]"=> "rule.description"
      "[atd][analysis]"=> "event.action"
      "[atd][severity]"=> "event.severity_name"
    }
  }
  if ![event.action]{
	  if [atd][Summary][SubmitterType] and [atd][Summary][SubmitterType] == "MWG" {
		mutate {
			add_field => {"event.action" => "permitted"}
		}
	  } else {
		mutate {
			add_field => {"event.action" => "animalized"}
			}
	  }
  }
  date {
    match => ["event.start" , "MMM dd HH:mm:ss", "MMM dd HH:mm:ss ZZZ"]
    timezone => "GMT"
    locale => "en"
    target => "event.start"
  }
   # if [event.action] {
    # mutate {
    #   add_field => { "agent.parse_rule" => "RULE 1" }
   # }
    # it was just an audit log
    # translate {
    #  field => "[event.action]"
    #  destination => "[rule.category]"
    #  dictionary => {
    #    "Session Login" => "Audit/Authentication Success"
    #    "Session Logout" => "Audit/Authentication Success"
    #    "Successful user login" => "Ops/Information"
    #    "Successful user logout" => "Ops/Information"
    #    "Invalid user name" => "Ops/Warning"
    #    "Invalid User"      => "Ops/Warning"
    #  }
    #  fallback => "Audit/Other"
    # }
 # }
  # if [Summary] {
  #   mutate {
  #   add_field => { "agent.parse_rule" => "RULE 2" }
  #   }
    # an atd log after scanning a file
    # Severity 6 – Incomplete. The submitted file analysis failed or incomplete.
    # Severity 2 – Failed. Advanced Threat Defense is unable to analyze the submitted file.
    # Severity 1 – Clean. The submitted file is not a malware.
    # Severity 0 – Informational. The submitted file has insufficient or invalid information for analysis.
    # Severity 1 – Vey low activity. The submitted file hasn't shown signs of a malware. Use with caution.
    # Severity 2 – Low activities. The submitted file shows signs of a malware that pose low risk.
    # Severity 3 – Likey to be malicious. The submitted file shows signs of a malware that pose medium risk.
    # Severity 4 – Malicious. The submitted file shows signs of a malware that pose high risk.
    # Severity 5 – Very high. The submitted file shows signs of a malware that pose high risk.
    # mutate {
    #  add_field => {
    #   "severity" => "%{[Summary][Verdict][Severity]}"
    #    "description" => "%{[Summary][Verdict][Description]}"
    #  }
    #}
    # if [severity] =~ "-1" {
    #  if [description] =~ "is considered to be clean" {
    #    mutate {
    #      add_field => { "agent.parse_rule" => "RULE 3" }
    #    }
    #    mutate {
    #      add_field => {
    #        "rule.category" => "Security/Other"
    #      }
    #    }
    #  }
    #  else if [description] =~ "Sample is clean" {
    #    mutate {
    #      add_field => { "agent.parse_rule" => "RULE 4" }
    #    }
    #    mutate {
    #      add_field => {
    #        "rule.category" => "Audit/Other Audit Success"
    #      }
    #    }
    #  }
    #  else {
    #    mutate {
    #      add_field => { "agent.parse_rule" => "RULE 5" }
    #    }
    #     mutate {
    #      add_field => {
    #        "rule.category" => "Security/Other"
    #      }
    #    }
    #  }
    # }
    # else {
    #  mutate {
    #    add_field => { "agent.parse_rule" => "RULE 6" }
    #  }
    #  translate {
    #    field => "[severity]"
    #    destination => "[rule.category]"
    #    dictionary => {
    #      "0" => "Security/Activity"
    #      "2" => "Security/Malware"
    #    }
    #    fallback => "Security/Other"
    #  }
    # }
  mutate {
	remove_field => ["[atd]", "rest_msg", "pri","log_ts","log_message","description","log.object","log.process.name","client.as.number","client.as.organization.name","client.as.organization.name.text","client.bytes","client.domain","client.packets","client.registered_domain","client.top_level_domain","client.user.domain","client.user.email","client.user.full_name","client.user.full_name.text","client.user.group.domain","client.user.group.id","client.user.group.name","client.user.hash","client.user.id","server.as.number","server.as.organization.name","server.as.organization.name.text","server.bytes","server.packets","server.registered_domain","server.top_level_domain","server.user.domain","server.user.email","server.user.full_name","server.user.full_name.text","server.user.group.domain","server.user.group.id","server.user.group.name","server.user.hash","server.user.id","server.user.name","server.user.name.text","destination.as.number","destination.as.organization.name","destination.as.organization.name.text","some_number"]
  }

}
output {
  pipeline { send_to => [enrichments] }
}