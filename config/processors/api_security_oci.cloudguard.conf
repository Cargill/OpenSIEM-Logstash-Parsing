# Copyright [2021] [Cargill, Incorporated.]
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[cloud][provider]" => "oci" }
    add_field => { "[event][module]" => "oci" }
    add_field => { "[event][dataset]" => "oci.cloudguard" }
    gsub => [ "message", "[\\]", "" ]
  }
  json {
    source => "message"
    target => "cg"
  }
  mutate {
    add_field => { "[log][source][hostname]" => "%{[cg][oracle][tenantid]}"}
  }
  if ":" in [cg][data][message] and "," in [cg][data][message] {
    mutate {
      gsub => [ "[cg][data][message]", "'", '"' ]
    }
    json {
      source => "[cg][data][message]"
      target => "tmp"
    }
    mutate {
      rename => { "[tmp][compartmentName]" => "[event][provider]" }
      rename => { "[tmp][additionalDetails][riskLevel]" => "[event][severity_name]" }
      rename => { "[tmp][additionalDetails][region]" => "[cloud][region]" }
      rename => { "[tmp][additionalDetails][reason]" => "[event][reason]" }
      rename => { "[tmp][additionalDetails][resourceType]" => "[dns][answers][type]" }
      rename => { "[tmp][additionalDetails][problemDescription]" => "[rule][description]" }
      rename => { "[tmp][additionalDetails][problemName]" => "[rule][category]" }
      rename => { "[tmp][additionalDetails][status]" => "[service][state]" }
      rename => { "[tmp][additionalDetails][firstDetected]" => "[event][start]" }
      rename => { "[tmp][additionalDetails][lastDetected]" => "[event][end]" }
      rename => { "[tmp][additionalDetails][problemType]" => "[event][type]" }
      rename => { "[tmp][additionalDetails][problemRecommendation]" => "[event][recommendation]" }
    }
  }
  else {
    mutate {
      rename => { "[cg][id]" => "[event][id]" }
      rename => { "[cg][oracle][ingestedtime]" => "[event][ingested]" }
      rename => { "[cg][oracle][loggroupid]" => "[file][gid]" }
      rename => { "[cg][data][message]" => "[rule][description]" }
      rename => { "[cg][data][ruleid]" => "[rule][id]" }
      rename => { "[cg][time]" => "[event][start]" }
      rename => { "[cg][type]" => "[event][type]" }
    }
  }
  mutate {
    remove_field => [ "[cg]", "[tmp]" ]
  }
  date {
    match => ["[event][start]" , "ISO8601" ]
    timezone => "GMT"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }
  if "_dateparsefailure_es" in [tags]  {
    mutate {
     remove_field => ["[event][start]"]
    }
  }
  date {
    match => ["[event][end]" , "ISO8601" ]
    timezone => "GMT"
    target => "[event][end]"
    tag_on_failure => "_dateparsefailure_ee"
  }
  if "_dateparsefailure_ee" in [tags]  {
    mutate {
     remove_field => ["[event][end]"]
    }
  }
  date {
    match => ["[event][ingested]" , "ISO8601" ]
    timezone => "GMT"
    target => "[event][ingested]"
    tag_on_failure => "_dateparsefailure_ei"
  }
  if "_dateparsefailure_ei" in [tags]  {
    mutate {
     remove_field => ["[event][ingested]"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}