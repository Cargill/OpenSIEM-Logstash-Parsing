# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "hp.network.node.manager" }
    add_field => { "event.dataset" => "hp network manager" }
    add_field => { "observer.vendor" => "hp" }
    add_field => { "observer.product" => "hp network node manager" }
    add_field => { "observer.type" => "network_management" }
  }
  dissect {
    mapping => {
      "message" => "%{event.created->} %{+event.created} %{?log.level} [%{?data}] %{rest_msg}"
    }
    tag_on_failure => ["dissect_1"]
  }
  # Hadling logs of: Successful Sign In, Successful Sign Out and Failed Login Attempts
  dissect {
    mapping => {
      # logs has new line and tabs. With dissect /n/t translates as literal, you have to actually add new line and a tab character.
      "rest_msg" => "(tomcat-exec-%{?data}) %{event.action}
	%{rest_msg2}"
    }
    tag_on_failure => ["dissect_2"]
  }
  kv {
    source => "rest_msg2"
    target => "parsed_kv"
    field_split_pattern => "\n\t"
    value_split_pattern => ":"
    trim_value => "\t"
  }
  mutate {
    rename => { "[parsed_kv][User Account]" => "client.user.name" }
    rename => { "[parsed_kv][NNMi Role]" => "client.user.roles" }
    rename => { "[parsed_kv][Client Host]" => "client.address" }
    rename => { "[parsed_kv][Client Port]" => "client.port" }
  }
  date {
    match => ["event.created", "ISO8601"]
    target => "event.created"
  }
  
  mutate {
   rename => {"observerip" => "log.source.hostname"}
   remove_field => ["rest_msg", "rest_msg2", "parsed_kv" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
