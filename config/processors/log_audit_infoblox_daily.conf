input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    strip => ["message"]
    gsub => ["message",'\"',"'"]
  }
  if[message]=="" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 1 (dropped)" }
    }
    drop {}
  }
  else {
    dissect {
      mapping => {
        "message" => "%{log.date_time} {%{?data}} <%{?data}>%{event.created->} %{+event.created} %{+event.created} %{source_ip} %{rest_message}"
      }
    }
    if[message] =~ "named\[" and [message] =~ "\]: zone" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 2" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: zone %{network.name}: %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Configuration"
        }
      }
    }
    else if[message] =~ "named\[" and [message] =~ "\]: client" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 2" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: client %{host.name} %{source_ip}#%{source.port}: %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "named\[" and [message] =~ "\]: checkhints" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 3" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: checkhints: %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "named\[" and [message] =~ ": GSS-TSIG authentication" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 4" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]:%{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Authentication Failure"
        }
      }
    }
    else if[message] =~ "named\[" and ([message] =~ "gss_accept_sec_context" or [message] =~ ": REFUSED"){
      mutate {
        add_field => { "parse_rule_name" => "RULE 5" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]:%{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "named\[" and [message] =~ ": Delete error:" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 6" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]:%{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Authentication Failure"
        }
      }
    }
    else if[message] =~ "named\[" and [message] =~ ": transfer of" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 7" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: transfer of '%{network.name}' from %{destination.ip}#%{destination.port}: %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Configuration"
        }
      }
    }
    else if[message] =~ "named\[" and [message] =~ "client" and [message] =~ "query" and [message] !~ ": Recursion"{
      mutate {
        add_field => { "parse_rule_name" => "RULE 8" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{event.start} %{+event.start} client %{source.ip}#%{source.port}: %{network.protocol}: %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "db_jnld:" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 9" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}: %{event.action} of %{dns.question.type} '%{?dns_record_name}' in zone %{network.name}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Configuration"
        }
      }
    }
    else if[message] =~ "dhcpd\["  and ( [message] =~ ": DHCPACK" or [message] =~ ": DHCPOFFER") {
      mutate {
        add_field => { "parse_rule_name" => "RULE 10" }
      }
      grok {
        match => {
          "rest_message" => ["%{DATA:process.name}\[(%{DATA:xyz})?\]: %{DATA:event.action} on %{IP:gateway.ip} to %{DATA:source.mac} (?:\(%{DATA:source.address}\) )?%{GREEDYDATA:rule.description}",
          "%{DATA:process.name}\[(%{DATA:xyz})?\]: %{DATA:event.action} to %{IP:destination.ip} \(%{DATA:source.mac}\) %{GREEDYDATA:rule.description}"]
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
        remove_field => ["xyz"]
      }
    }
    else if[message] =~ "dhcpd\[" and ([message] =~ ": DHCPDISCOVER" or [message] =~ ": BOOTREQUEST" or [message] =~ ": DHCPDECLINE"){
      mutate {
        add_field => { "parse_rule_name" => "RULE 11" }
      }
      grok {
        match => {
          "rest_message" => "%{DATA:process.name}\[(%{DATA:xyz})?\]: %{DATA:event.action} from %{DATA:source.mac} via %{IP:destination.ip}(:)? %{GREEDYDATA:rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "dhcpd\[" and [message] =~ ": DHCPINFORM" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 12" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{event.action} from %{gateway.ip} via %{destination.ip} TransID %{event.id}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "dhcpd\[" and [message] =~ ": DHCPREQUEST" and [message] =~ "from" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 12 (a)" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{event.action} %{?data} %{gateway.ip} %{?data}om %{source.mac} via %{destination.ip} TransID %{chk_data}"
        }
      }
      if [chk_data] =~ " " {
        dissect {
          mapping => {
            chk_data => "%{event.id} %{?uid}"
          }
        }
      }
      else {
        dissect {
          mapping => {
            chk_data => "%{event.id}"
          }
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
        remove_field => ["chk_data"]
      }
    }
    else if[message] =~ "dhcpd\[" and [message] =~ ": DHCPEXPIRE" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 13" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{event.action} on %{gateway.ip} to %{source.mac}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "dhcpd\[" and [message] =~ ": DHCPRELEASE" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 14" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{event.action} of %{gateway.ip} from %{source.mac} (%{source.address}) %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Configuration"
        }
      }
    }
    else if[message] =~ "dhcpd\[" and [message] =~ ": r-l-e:" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 15" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{?extra}:%{gateway.ip},%{event.action},%{source.address},%{source.mac},%{?extra}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] =~ "dhcpd\[" and ([message] =~ ": RELEASE" or [message] =~ ": DHCPNAK"){
      mutate {
        add_field => { "parse_rule_name" => "RULE 16" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{event.action} %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else if[message] !~ "dhcpd\[" and [message] !~ "named\[" and [message] !~ "db_jnld:"{
      mutate {
        add_field => { "parse_rule_name" => "RULE 17" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    else {
      mutate {
        add_field => { "parse_rule_name" => "RULE 18" }
      }
      dissect {
        mapping => {
          "rest_message" => "%{process.name}[%{source.port}]: %{rule.description}"
        }
      }
      mutate {
        add_field => {
          "rule.category" => "Audit/Information"
        }
      }
    }
    # source.ip appearing in array when mltple ip assign to source.ip field - corrected the field values in 3 places ,other 2 places no change
    # in RULE 17 - the gateway.ip field does not exist
    if [source.ip] {
      if [gateway.ip] {
        mutate {
          remove_field => ["gateway.ip"]
        }
      }
    }
    else {
      mutate {
        rename => {"source_ip" => "source.ip"}
      }
    }
    mutate {
      gsub => [ "log.date_time", "'", "" ]
      # add_field => {
      #   "ecs.version" => "1.4"
      # }
      # rename => {
      #   "host" => "agent"
      # }
    }
    date {
      match => ["event.created", "MMM dd HH:mm:ss", "MMM d HH:mm:ss"]
      timezone => "GMT"
      locale => "en"
      target => "event.created"
    }
    date {
      match => ["event.start", "dd-MMM-YYYY HH:mm:ss.SSS"]
      timezone => "GMT"
      locale => "en"
      target => "event.start"
    }
    mutate {
      remove_field => ["log.date_time","rest_message"]
    }
  }
  if [destination.ip] {
    if [destination.ip] =~ "eth" {
      mutate {
        remove_field => ["destination.ip"]
      }
    }
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}