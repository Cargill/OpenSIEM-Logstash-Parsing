# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "spectracom.ntp" }
    add_field => { "[event][dataset]" => "ntp.spectracom" }
    add_field => { "[observer][vendor]" => "spectracom" }
    add_field => { "[observer][product]" => "ntp.spectracom.ntp" }
    add_field => { "[observer][type]" => "ntp" }
  }
  mutate {
    strip => ["message"]
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  if [actual_msg] =~ "useradd" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 1" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data} '%{[[user][id]]}' %{?data} %{?data} '%{[[group][name]]}'"
      }
    }
  }
  else if [actual_msg] =~ "userdel" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 2" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data} '%{[[user][id]]}' %{?data} group '%{[[group][name]]}'"
      }
    }
  }
  else if [actual_msg] =~ "uthentication failure" {
    if [event][severity_name] =~ "NOTE" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 3" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data} %{[[rule][description]]}; %{rest_msg}"
        }
      }
      kv {
        source => "rest_msg"
        field_split => " "
        value_split => "="
      }
      mutate {
        rename => {"user" => "[user][name]"}
      }
    }
    else if [actual_msg] =~ "user=" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 12" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data}(%{[[event][type]]}): %{[[rule][description]]}; %{?data} uid=%{?data} euid=%{[[event][id]]} %{?data}rhost=%{[[source][ip]]} user=%{[[user][name]]}"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 4" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data} %{[[rule][description]]} for %{[[user][name]]} from %{[[source][ip]]}"
        }
      }
    }
  }
  else if [actual_msg] =~ "XO1" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 5" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[source][address]]}: [%{?data}] %{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{+[[event][created]]} XO1: %{[[rule][description]]}"
      }
    }
  }
  else if [actual_msg] =~ "Postponed keyboard-interactive" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 6" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data} %{[[rule][description]]} for %{[[user][name]]} from %{[[source][ip]]}"
      }
    }
  }
  else if [actual_msg] =~ "could not load host key" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 7" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{?data} %{[[rule][description]]}: %{?[[host][key]]}"
      }
    }
  }
  else if [event][severity_name] =~ "ERRR" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 8" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{[[rule][description]]}"
      }
    }
  }
  else if [event][severity_name] =~ "INFO" {
    if [actual_msg] =~ "xinetd" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 9" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{[[event][action]]}: %{?data} %{?data}=%{?[[vendor][message][id]]} %{?data}"
        }
      }
    }
  }
  else if [actual_msg] =~ "identification string" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 10" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{[[rule][description]]} from %{[[source][ip]]} %{?data} %{[[source][port]]}"
      }
    }
  }
  else if [actual_msg] =~ "GPS 0" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 11" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[source][address]]} %{?data} %{[[rule][description]]}"
      }
    }
  }
  else {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 12" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[process][name]]}[%{[[process][pid]]}]: %{[[rule][description]]}"
      }
    }
  }
  date {
    match => ["[event][created]" , "yyyy D HH:mm:ss SSS", "yyyy-mm-dd HH:mm:ss", "yyyy-mm-dd HH:mm:ss.SSS","MMM dd HH:mm:ss" ,"MMM dd HH:mm:ss.SSS"]
    target => "[event][created]"
  }
  mutate {
    remove_field => ["actual_msg","[log][date]","logname","rest_msg","euid","ruser","pri"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
