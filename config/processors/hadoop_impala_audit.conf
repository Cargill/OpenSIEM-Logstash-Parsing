# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
# Ansible alert web hook to logstash https listener
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "hadoop" }
    add_field => { "[event][dataset]" => "hadoop.impala_audit" }
  }

### https://stackoverflow.com/questions/2578194/what-are-ddl-and-dml

  grok {
    match => { "[event][original]" => "^{.*?:(?<tmp>(.|\n)*)}" }
    tag_on_failure => "_grokparsefailure_to_tmp"
  }
  mutate {
    gsub => [
      "tmp", '\"', '"'
      ]
  }
  json {
    source => "tmp"
    target => "tmp_json"
    tag_on_failure => "_jsonparsefailure_tmp_to_tmp_json"
  }
  grok {
        match => { "[tmp_json][network_address]" => "^(.*?::.*?:)?(?<[source][ip]>\d+\.\d+\.\d+\.\d+):(?<[source][port]>\d+)" }
        tag_on_failure => "_grokparsefailure_to_tmp_json"
      }
 
  mutate {
    rename => { "[tmp_json][query_id]" => "[event][id]" }
    rename => { "[tmp_json][start_time]" => "[event][created]" }
    rename => { "[tmp_json][user]" => "[user][name]" }
    rename => { "[tmp_json][sql_statement]" => "[database][query]" }
    rename => { "[tmp_json][status]" => "[event][action]" }
    rename => { "[tmp_json][statement_type]" => "[event][module]" } 
    rename => { "[tmp_json][catalog_objects][name]" => "[database][table]" }
    rename => { "[tmp_json][catalog_objects][name]" => "[event][kind]" }
    rename => { "[tmp_json][catalog_objects][object_type]" => "[event][type]" }
    rename => { "[fields][environment]" => "[database][instance]" }
  }
  if "[tmp_json][authorization_failure]" {    
    mutate {
      add_field => { "[event][outcome]" => "authorization_success" }
    }
  } else {
    mutate {
      add_field => { "[event][outcome]" => "authorization_failure" }
    }
  }

  # "[event][created]" = "2023-10-11 16:27:56.975557"
  
  date {
    match => ["[event][created]","yyyy-MM-dd HH:mm:ss.SSSSSS"  ]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
    mutate {
      remove_field => ["[event][created]"]
    }
  }

  mutate {
    rename => { "[fields][environment]" => "[service][name]" }
    remove_field => [ "input", "service", "destination", "program", "topic_name", "fields", "[event][original]", "tmp_json", "tmp" ]
    remove_tag => [ "impala-audit", "beats", "beats_input_codec_plain_applied", "siem-kafka" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
