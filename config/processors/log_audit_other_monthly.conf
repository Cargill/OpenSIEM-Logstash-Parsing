input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
   mutate {
    add_field => {
      "consistent_log" => "%{message}"
    }
  }
  mutate {
    strip => ["consistent_log"]
  }
  dissect {
    mapping => {
      "consistent_log" => "%{?log.dummy}>%{log.count} %{event.created} %{source.address} %{source.entity} %{message.id} - [%{rest_of_msg}"
    }
  }

  if [rest_of_msg] =~ "__policy_id_tag" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 1" }
    }
    dissect {
      mapping => {
        "rest_of_msg" => "%{start_of_msg}__policy_id_tag=%{policy_msg}];%{end_of_msg}"
      }
    }
    dissect {
      mapping => {
        "policy_msg" => "%{policy_id_tag}[%{rest_of_policy}"
      }
    }
    if [rest_of_policy]{
      mutate {
        add_field => { "parse_rule_name" => "RULE 2" }
      }
      kv {
        source => "rest_of_policy"
        field_split => ";"
        value_split => "="
      }
    }
    mutate {
      strip => ["start_of_msg"]
    }
    if [start_of_msg] != "" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 3" }
      }
      mutate {
        add_field => {
          "msg" => "%{start_of_msg};%{end_of_msg}"
        }
      }
    }
    else {
      mutate {
        add_field => { "parse_rule_name" => "RULE 4" }
      }
      mutate {
        add_field => {
          "msg"=> "%{end_of_msg}"
        }
      }
    }
  }
  else {
    mutate {
      add_field => { "parse_rule_name" => "RULE 5" }
    }
    mutate {
      add_field => {
        "msg"=> "%{rest_of_msg}"
      }
    }
  }
  kv {
    source => "msg"
    field_split => ";"
    value_split => "="
  }
  if [origin_sic_name]{
    mutate {
          add_field => { "parse_rule_name" => "RULE 6" }
        }
    kv {
      source => " origin_sic_name"
      field_split => ","
      value_split => "="
    }
  }
  if [originsicname]{
    mutate {
          add_field => { "parse_rule_name" => "RULE 7" }
        }
    kv {
      source => " originsicname"
      field_split => ","
      value_split => "="
    }
  }
  mutate {
    rename => {" dst" => "subnet.mask"}
    rename => {" flags" => "vendor.message.id"}
    rename => {" ifdir" => "object.name"}
    rename => {" proto" => "risk.Based.priority"}
    rename => {" service" => "TCP/UDP.Port"}
    rename => {" action" => "event.action"}
  }
  if [msg] =~ "alert" or [msg] =~ "Log In" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 8" }
    }
    mutate {
      add_field => {
        "rule.category" => "Ops/Information"
      }
    }
  }
  else if [event.action] =~ "Accept" or [event.action] =~ "Decrypt" or [event.action] =~ "Reject" or [event.action] =~ "Encrypt" or [event.action] =~ "Detect" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 9" }
    }
    mutate {
      add_field => {
        "rule.category" => "Ops/Network Allow"
      }
    }
  }
  else if [event.action] =~ "Drop"  {
    mutate {
      add_field => { "parse_rule_name" => "RULE 10" }
    }
    mutate {
      add_field => {
        "rule.category" => "Ops/Network Deny"
      }
    }
  }
  else {
    mutate {
      add_field => { "parse_rule_name" => "RULE 11" }
    }
    mutate {
      add_field => {
        "rule.category" => "others"
      }
    }
  }
  mutate {
    gsub => ["policy_name","[\\]", ""]
    remove_field => ["consistent_log","rest_of_policy","rest_of_msg","start_of_msg","end_of_msg"," origin_sic_name","policy_msg","msg"]
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}