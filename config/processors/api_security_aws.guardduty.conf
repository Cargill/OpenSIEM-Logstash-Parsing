# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[cloud][provider]" => "aws" }
    add_field => { "[log][source][hostname]" => "api_aws_guardduty" }
    add_field => { "[event][module]" => "aws" }
    add_field => { "[event][dataset]" => "aws.guardduty" }
  }
  json {
    source => "message"
    target => "guard"
  } 
  mutate {
    tag_on_failure => "mutate 1 failure"
    rename => { "[guard][severity]" => "[event][severity]" }
    rename => { "[guard][createdAt]" => "[event][created]" }
    rename => { "[guard][updatedAt]" => "[event][modified]" }
    rename => { "[guard][title]" => "[event][reason]" }
    rename => { "[guard][description]" => "[rule][description]" }
    rename => { "[guard][schemaVersion]" => "[service][version]" }
    rename => { "[guard][accountId]" => "[cloud][account][id]" }
    rename => { "[guard][region]" => "[cloud][region]" }
    rename => { "[guard][partition]" => "[cloud][provider]" }
    rename => { "[guard][id]" => "[event][id]" }
    rename => { "[guard][type]" => "[rule][name]" }
    rename => { "[guard][resource][instanceDetails][availabilityZone]" => "[cloud][availability_zone]" }
    rename => { "[guard][resource][instanceDetails][imageDescription]" => "[container][image][name]" }
    rename => { "[guard][resource][instanceDetails][instanceId]" => "[cloud][instance][id]" }
    rename => { "[guard][resource][instanceDetails][instanceState]" => "[service][state]" }
    rename => { "[guard][resource][instanceDetails][instanceType]" => "[cloud][machine][type]" }
    rename => { "[guard][resource][instanceDetails][networkInterfaces][subnetId]" => "[network][name]" }
    rename => { "[guard][resource][instanceDetails][networkInterfaces][securityGroups][groupName]" => "[user][group][name]" }
    rename => { "[guard][resource][instanceDetails][networkInterfaces][securityGroups][groupId]" => "[user][group][id]" }
    rename => { "[guard][resource][accessKeyDetails][userName]" => "[user][name]" }
    rename => { "[guard][service][action][awsApiCallAction][remoteIpDetails][organization][asn]" => "[source][as][number]" }
    rename => { "[guard][service][action][awsApiCallAction][remoteIpDetails][organization][asnOrg]" => "[source][as][organization][name]" }
    rename => { "[guard][service][action][awsApiCallAction][serviceName]" => "[service][name]" }  
    rename => { "[guard][service][action][networkConnectionAction][remoteIpDetails][ipAddressV4]" => "[source][ip]" } 
    rename => { "[guard][service][action][networkConnectionAction][localIpDetails][ipAddressV4]" => "[destination][ip]" } 
    rename => { "[guard][service][action][actionType]" => "[rule][category]" }
    rename => { "[guard][service][action][portProbeAction][portProbeDetails][localPortDetails][port]" => "[destination][port]"	}
    rename => { "[guard][service][detectorId]" => "[rule][id]" }
    rename => { "[guard][service][eventFirstSeen]" => "[event][start]" }
    rename => { "[guard][service][eventLastSeen]" => "[event][end]" }
  }
  if [guard][service][additionalinfo][sample] {  
    mutate {
      add_field => { "[log][syslog][priority]" => "0" }
    }
  }
  if ![source][ip] and [source][ip] == "" {
    mutate {
      update => { "[source][ip]" => "%{[tmp][resource][instanceDetails][networkInterfaces][0][ipv6Addresses]}" }
    }
  }
  mutate {
    remove_field => [ "[guard]" ]
  }
  date {
    match => ["[event][created]","yyyy-MM-dd HH:mm:ss.SSS", "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][created]"]
    }
  }
  date {
    match => ["[event][modified]","yyyy-MM-dd HH:mm:ss.SSS", "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "[event][modified]"
    tag_on_failure => "_dateparsefailure_em"
  }
  if "_dateparsefailure_em" in [tags]  {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][modified]"]
    }
  }
  date {
    match => ["[event][start]", "ISO8601", "yyyy-MM-dd HH:mm:ss.Z"]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }
  if "_dateparsefailure_es" in [tags]  {
    if ![log][original] {
      mutate {
        add_tag => [ "sample_alarm" ]
      }
    }
    mutate {
      remove_field => ["[event][start]"]
    }
  }
  date {
    match => ["[event][end]", "ISO8601", "yyyy-MM-dd HH:mm:ss.Z"]
    timezone => "GMT"
    locale => "en"
    target => "[event][end]"
    tag_on_failure => "_dateparsefailure_ee"
  }
  if "_dateparsefailure_ee" in [tags]  {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][end]"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}