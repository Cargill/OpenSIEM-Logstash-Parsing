# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => {"[log][source][hostname]" => "eventhub_azure_security"}
    add_field => { "[event][module]" => "eventhub azure security" }
    add_field => { "[event][dataset]" => "security logs" }
    add_field => { "[observer][vendor]" => "microsoft" }
    add_field => { "[observer][product]" => "security logs" }
    add_field => { "[observer][type]" => "eventhub" }
  }
  mutate {
    copy => { "message" => "[log][original]" }
  }
  mutate {
    gsub => ["message" ," ",""]
  }
  json {
    source => "message"
    target => "tmp"
  }
  if [tmp][records][0] {
    split {
      field => "[tmp][records]"
      target => "azsec"
    }
    json_encode {
      source => "azsec"
      target => "message"
    }
  }
  mutate {
    rename => {"[azsec][operationName]" => "[rule][name]"}

    rename => {"[azsec][properties][recommendationCategory]" => "[event][category]"}
    rename => {"[azsec][properties][recommendationImpact]" => "[event][severity_name]"}
    rename => {"[azsec][properties][recommendationName]" => "[event][recommendation]"}
    rename => {"[azsec][properties][recommendationSchemaVersion]" => "[rule][version]"}
    rename => {"[azsec][properties][recommendationResourceLink]" => "[event][reference]"}
    rename => {"[azsec][properties][recommendationType]" => "[event][type]"}

    rename => {"[azsec][resultSignature]" => "[error][code]"}
    rename => {"[azsec][resultType]" => "[event][action]"}
    rename => {"[azsec][level]" => "[log][level]"}
    rename => {"[azsec][resultDescription]" => "[rule][description]"}

    rename => {"[azsec][callerIpAddress]" => "[source][ip]"}
    rename => {"[azsec][category]" => "[rule][category]"}
    rename => {"[azsec][location]" => "[host][geo][name]"}
    rename => {"[azsec][time]" => "[event][start]"}

    rename => {"[azsec][operationVersion]" => "[host][os][version]"}
    rename => {"[azsec][durationMs]" => "[event][duration]"}

    remove_field => ["[tmp]", "[azure]", "[azsec]"]
  }
  date {
    match => ["[event][start]" , "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }

  if "_dateparsefailure_es" in [tags]  {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][start]"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
