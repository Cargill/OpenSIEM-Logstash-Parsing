# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => {"log.source.hostname" => "eventhub_azure_security"}
    add_field => { "event.module" => "eventhub azure security" }
    add_field => { "event.dataset" => "security logs" }
    add_field => { "observer.vendor" => "microsoft" }
    add_field => { "observer.product" => "security logs" }
    add_field => { "observer.type" => "eventhub" }
  }
  mutate {
    copy => { "message" => "log.original" }
  }
  mutate {
    gsub => ["message" ," ",""]
  }
  json {
    source => "message"
    target => "tmp"
  }

  split {
    field => "[tmp][records]"
    target => "tcs"
  }
  json_encode {
    source => "tcs"
    target => "message"
  }
  mutate {
    rename => {"[tcs][operationName]" => "rule.name"}

    rename => {"[tcs][properties][recommendationCategory]" => "event.category"}
    rename => {"[tcs][properties][recommendationImpact]" => "event.severity_name"}
    rename => {"[tcs][properties][recommendationName]" => "event.recommendation"}
    rename => {"[tcs][properties][recommendationSchemaVersion]" => "rule.version"}
    rename => {"[tcs][properties][recommendationResourceLink]" => "event.reference"}
    rename => {"[tcs][properties][recommendationType]" => "event.type"}

    rename => {"[tcs][resultSignature]" => "error.code"}
    rename => {"[tcs][resultType]" => "event.action"}
    rename => {"[tcs][level]" => "log.level"}
    rename => {"[tcs][resultDescription]" => "rule.description"}

    rename => {"[tcs][callerIpAddress]" => "source.ip"}
    rename => {"[tcs][category]" => "rule.category"}
    rename => {"[tcs][location]" => "host.geo.name"}
    rename => {"[tcs][time]" => "event.start"}

    rename => {"[tcs][operationVersion]" => "host.os.version"}
    rename => {"[tcs][durationMs]" => "event.duration"}

    remove_field => ["[tmp]", "[azure]", "[tcs]"]
  }
  date {
    match => ["event.start" , "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "event.start"
    tag_on_failure => "_dateparsefailure_es"
  }

  if "_dateparsefailure_es" in [tags]  {
    if ![log.original] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
      remove_field => ["event.start"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
