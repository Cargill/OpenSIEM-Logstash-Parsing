# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "mcafee" }
    add_field => { "[event][dataset]" => "mcafee.nsm" }
  }
  mutate {
    strip => ["message"]
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  if [actual_msg] == "" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 1 (dropped)" }
    }
    drop {}
  }
  if [message] =~ "{name=" {
    grok {
      tag_on_failure => "_parsefailure_header"
      match => { "message" => "^.*?{name=(?<[[observer][hostname]]>.*?)}.*?" }
      timeout_millis => 500
    }
    mutate {
      gsub => [ "[observer][hostname]", "^(.*?)\.(.*)$", "\1" ]
    }
  }
  if [actual_msg] =~ "SyslogACLLogForwarder" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 2" }
    }
    dissect {
      mapping => {
        "actual_msg" => '%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} SyslogACLLogForwarder: %{[[source][address]]} %{[[rule][name]]}) %{[[source][ip]]} -> %{[[destination][ip]]}:%{[[destination][port]]} (result = %{[[event][action]]})'
      }
    }
    mutate {
      gsub => ["[rule][name]","/#1","/#1)"]
      gsub => ["[rule][name]","/#2","/#2)"]
    }
    if [rule][name] =~ "Inbound ACL rule" or [rule][name] =~ "Outbound ACL rule" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 3" }
      }
      mutate {
        add_field => {
          "[rule][category]" => "Ops/Network Allow"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 4" }
      }
      mutate {
        add_field => {
          "[rule][category]" => "Ops/Information"
        }
      }
    }
  }
  else if [actual_msg] =~ "SyslogFaultForwarder" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 5" }
    }
    dissect {
      mapping => {
        "actual_msg" => '%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} SyslogFaultForwarder: %{[[log][forwarder]]} : %{rest_of_msg}'
      }
    }
    if [rest_of_msg] =~ "UpdateSensorScheduler" or [rest_of_msg] =~ "Mailer" or [rest_of_msg] =~ "DATServerScheduler" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 6" }
      }
      dissect {
        mapping =>{
          "rest_of_msg" => '%{[[manager][level]]}: %{[[manager][status]]}:%{[[scheduler][name]]}:%{[[scheduler][status]]}'
        }
      }
    }
    else if [rest_of_msg] =~ "Channel" {
      if [rest_of_msg] =~ "Alert Channel" or [rest_of_msg] =~ "Packet Capture" {
        mutate {
          add_field => { "[agent][parse_rule]" => "RULE 7" }
        }
        dissect {
          mapping =>{
            "rest_of_msg" => '%{[[observer][hostname]]}: %{[[rule][ruleset]]}:%{[[rule][name]]}:%{[[rule][description]]}'
          }
        }
      }
    }
    else if [rest_of_msg] =~ "ArchivingISMDb" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 8" }
      }
      dissect {
        mapping =>{
          "rest_of_msg" => '%{[[manager][level]]}: %{[[manager][status]]}:%{[[archiving][name]]}:%{[[archiving][status]]}'
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 9" }
      }
      dissect {
        mapping =>{
          "rest_of_msg" => '%{manager_tmp}: %{[[manager][status]]}'
        }
      }
    }
    if [rest_of_msg] =~ "downloaded by the Manager" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 10" }
      }
      mutate {
        add_field => {
          "[event][category]" => "Ops/Information"
        }
      }
    }else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 11" }
      }
      mutate {
        add_field => {
          "[event][category]" => "Ops/Error"
        }
      }
    }
  }
  else if [actual_msg] =~ "SyslogAuditLogForwarder" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 12" }
    }
    dissect {
      mapping => {
        "actual_msg" => '%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} SyslogAuditLogForwarder: %{syslog_forwarder}'
      }
    }
    if [syslog_forwarder] =~ "Login succeeded"{
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 13" }
      }
      mutate {
        add_field => {
          "[rule][category]" => "Audit/Authentication Success"
        }
      }
    }
    else if [syslog_forwarder] =~ "Generation succeeded" or [syslog_forwarder] =~ "Purge succeeded" or [syslog_forwarder] =~ "Purge is ongoing" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 14" }
      }
      mutate {
        add_field => {
          "[rule][category]" => "Audit/Access Success"
        }
      }
    }
    else if [syslog_forwarder] =~ "actions received" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 15" }
      }
      mutate {
        add_field => {
          "[rule][category]" => "Ops/Error"
        }
      }
    }
    else if [syslog_forwarder] =~ "Scheduled check of" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 16" }
      }
      mutate {
        add_field => {
          "[rule][category]" => "Ops/Information"
        }
      }
    }
  }
  else if [actual_msg] =~ "SyslogAlertForwarder" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 17" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} SyslogAlertForwarder: %{[[log][source][hostname]]} %{[[rule][name]]} %{+[[rule][name]]} %{+[[rule][name]]} %{rest_of_msg}"
      }
    }
    if [rest_of_msg] =~ "HTTP:" or  [rest_of_msg] =~ "TELNET:" or [rest_of_msg] =~ "SOCKS:" or [rest_of_msg] =~ "SSL:" or [rest_of_msg] =~ "TCP:" or [rest_of_msg] =~ "SCAN:" or [rest_of_msg] =~ "BOT:" or [rest_of_msg] =~ "SNMP:" or [rest_of_msg] =~ "IM:"
        or [rest_of_msg] =~ "NMAP:" or  [rest_of_msg] =~ "PKTSEARCH:" or [rest_of_msg] =~ "Malware:" or   [rest_of_msg] =~ "MALWARE:" or [rest_of_msg] =~ "RAT:"
          or [rest_of_msg] =~ "MODBUS:" or  [rest_of_msg] =~ "ICMP:" or  [rest_of_msg] =~ "DHCP:" or [rest_of_msg] =~ "ORACLE:" or [rest_of_msg] =~ "NETBIOS-SS:"
          or [rest_of_msg] =~ "RDP:" or [rest_of_msg] =~ "Kerberos:" or [rest_of_msg] =~ "P2P:" or [rest_of_msg] =~ "NETIS:" or [rest_of_msg] =~ "WORM:"
          or [rest_of_msg] =~ "RPC:" or [rest_of_msg] =~ "MSSQL:" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 18" }
      }
      dissect {
        mapping => {
          "rest_of_msg" => '%{[network][protocol]}: %{rule_description}. %{[[source][ip]]}:%{[[source][port]]} -> %{[[destination][ip]]}:%{[[destination][port]]} (result = %{[[event][action]]})'
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 19" }
      }
      dissect {
        mapping => {
          "rest_of_msg" => '%{rule_description}. %{[[source][ip]]}:%{[[source][port]]} -> %{[[destination][ip]]}:%{[[destination][port]]} (result = %{[[event][action]]})'
        }
      }
    }
    if [rule_description] =~ "severity" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 19(a)" }
      }
      dissect {
        mapping => {
          "rule_description" => "%{?data} = %{[event][severity_name]})"
        }
      }
    }
    mutate {
      add_field => {
        "[rule][category]" => "Security/Attack"
      }
    }
  }
  else {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 20" }
    }
    dissect {
      mapping => {
        "actual_msg" => '%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{rest_message}'
      }
    }
    mutate {
      add_field => {
        "[rule][category]" => "Audit/Other"
      }
    }
  }
  date {
    match => ["[event][created]","MMM dd HH:mm:ss"]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
  }
  if [rule_description] {
    if [rule_description] =~ "severity =" {
      dissect {
        mapping => {
          rule_description => "%{[[rule][description]]} (severity%{?data}"
        }
      }
      mutate { remove_field => ["rule_description"]}
    }
    else {
      mutate {rename => {"rule_description" => "[rule][description]"}}
    }
  }
  mutate{
    remove_field => ["actual_msg", "rest_of_msg", "[manager]", "[archiving]", "[scheduler]", "manager_tmp", "[host][hostname]"]
  }
  if [destination][port] =~ "N" or [destination][port] =~ "A" {
    mutate {
      remove_field => ["[destination][port]"]
    }
  }
  if [source][port] =~ "N" or [source][port] =~ "A"{
    mutate {
      remove_field => ["[source][port]"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
