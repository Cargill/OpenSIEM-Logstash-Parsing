# Copyright [2021] [Cargill, Incorporated.]
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  dissect {
    mapping => {
      'message' => '{"host":"%{host.ip}","@version":"%{log.syslog.priority}","@timestamp":"%{event.created}","message":"%{tmp}","port":%{source.port}}'
    }
  }
  mutate { gsub => ['tmp','[\\]','']}
  mutate { gsub => ['source.port','[}]','']}
  json {
    source => "tmp"
    target => "json_tmp"
  }
  mutate{
    rename => { "[json_tmp][tags]" => "host.os.type" }
    rename => { "[json_tmp][syslog_hostname]" => "host.name" }
    rename => { "[json_tmp][syslog_facility]" => "log.syslog.facility.name" }
    rename => { "[json_tmp][type]" => "event.dataset" }
    rename => { "[json_tmp][syslog_message]" => "event.action" }
    rename => { "[json_tmp][received_at]" => "event.ingested" }
    rename => { "[json_tmp][syslog_program]" => "event.provider" }
    rename => { "[json_tmp][syslog_timestamp]" => "event.created" }
    rename => { "[json_tmp][@timestamp]" => "event.start" }
    rename => { "[json_tmp][@version]" => "observer.version" }
    rename => { "[json_tmp][message]" => "event.original" }
    rename => { "[json_tmp][syslog_facility_code]" => "log.syslog.facility.code" }
    rename => { "[json_tmp][syslog_pid]" => "process.pid" }
    rename => { "[json_tmp][syslog_severity]" => "log.syslog.priority" }
    rename => { "[json_tmp][received_from]" => "log.source.ip" }
    rename => { "[json_tmp][syslog_severity_code]" => "log.syslog.severity.code" }
    rename => { "[json_tmp][host]" => "host.ip" }
  }
  date {
    match => [ "event.created", "MMM dd HH:mm:ss",
    "MMM  d yyyy HH:mm:ss", "ISO8601"]
  }
  date {
    match => [ "event.start","ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "event.start"
  }
  date {
    match => [ "event.ingested","ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "event.ingested"
  }
  # remove non ecs fields
  mutate {
    remove_field => ["tmp","json_tmp"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}