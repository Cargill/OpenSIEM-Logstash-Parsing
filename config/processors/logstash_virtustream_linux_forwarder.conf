# Copyright [2021] [Cargill, Incorporated.]
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "virtustream" }
    add_field => { "[event][dataset]" => "virtustream.linux" }
  }
  json {
    source => "message"
    target => "tmp"
  }
  mutate {
    rename => { "[port]" => "[source][port]" }
    rename => { "[host]" => "[host][ip]" }
    rename => { "[tmp][tags]" => "[host][os][type]" }
    rename => { "[tmp][syslog_hostname]" => "[log][source][hostname]" }
    rename => { "[tmp][syslog_facility]" => "[log][syslog][facility][name]" }
    rename => { "[tmp][type]" => "[event][type]" }
    rename => { "[tmp][syslog_program]" => "[event][kind]" }
    rename => { "[tmp][@version]" => "[observer][version]" }
    rename => { "[tmp][message]" => "[event][original]" }
    rename => { "[tmp][syslog_facility_code]" => "[log][syslog][facility][code]" }
    rename => { "[tmp][syslog_pid]" => "[process][pid]" }
    rename => { "[tmp][syslog_severity]" => "[log][syslog][priority]" }
    rename => { "[tmp][received_from]" => "[log][source][ip]" }
    rename => { "[tmp][syslog_severity_code]" => "[log][syslog][severity][code]" }
  }
  if [event][kind] =~ "logstash" {
    if [tmp][syslog_message] =~ "^\[.*?\]\[.*$" {
      grok {
        match => { "[tmp][syslog_message]" => '^.*?\].*?\]\[(?<[process][parent][name]>.*?)(\s+)?\](\s+)?(\[(?<[process][name]>.*?)(\s+)?\])?(\s+)?(\[(?<[process][id]>.*?)\])?(\s+)?(?<[event][action]>.*?)( \{\:message\=\>(?<[error][message]>.*?)\, \:exception\=\>(?<[error][type]>.*?)\,.*)?$' }
        tag_on_failure => "_grokparsefailure_header"
        timeout_millis => 500
      }
    }
    else {
      mutate {
        rename => { "[tmp][syslog_message]" => "[error][message]" }
      }
    }
  }
  date {
    match => [ "[tmp][syslog_timestamp]", "MMM dd HH:mm:ss", "MMM  dd HH:mm:ss", "MMM d yyyy HH:mm:ss", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
  }
  date {
    match => [ "[tmp][@timestamp]", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
  }
  date {
    match => [ "[tmp][received_at]", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][ingested]"
  }
  # remove non ecs fields
  mutate {
    remove_field => [ "tmp" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
}