# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    lowercase => [ "message" ]
  }
  if [message] =~ '^{"records": \[' {
    json {
      source => "message"
      target => "tmp"
      skip_on_invalid_json => true
    }
    split {
      field => "[tmp][records]"
      target => "az"
    }
    mutate {
      replace => { "message" => "%{az}" }
    }
  } else {
    json {
      source => "message"
      target => "az"
      skip_on_invalid_json => true
    }
  }
  mutate{
    add_field => { "[event][module]" => "azure" }
    add_field => { "[event][dataset]" => "azure.officeactivity" }
    add_field => { "[log][source][hostname]" => "%{[az][tenantid]}" }
  }
  mutate {
    rename => { "[az][timegenerated]" => "[event][ingested]" }
    rename => { "[az][site_]" => "[server][user][group][id]" }
    rename => { "[az][organizationid]" => "[organization][id]" }
    rename => { "[az][site_url]" => "[event][url]" }
    rename => { "[az][type]" => "[event][type]" }
    rename => { "[az][userid]" => "[user][id]" }
    rename => { "[az][clientip]" => "[client][ip]"}
    rename => { "[az][sourcefileextension]" => "[file][extension]" }
    rename => { "[az][tenantid]" => "[cloud][account][id]" }
    rename => { "[az][eventsource]" => "[source][name]" }
    rename => { "[az][sourcefilename]" => "[file][name]" }
    rename => { "[az][start_time]" => "[event][start]" }
    rename => { "[az][useragent]" => "[user_agent][original]" }
    rename => { "[az][itemtype]" => "[file][type]" }
    rename => { "[az][officeobjectid]" => "[url][full]" }
    rename => { "[az][sourcerelativeurl]" => "[url][path]" }
    rename => { "[az][displayname]" => "[host][hostname]" }
  }
  mutate {
    remove_field => [ "az", "tmp" ]
  }
  mutate {
    gsub => [
      "[event][start]", "^(.*?)T(.*?\.\d\d\d).*?$", "\1 \2" ,
      "[event][ingested]", "^(.*?)T(.*?\.\d\d\d).*?$", "\1 \2"
    ]
  }
  date {
    match => [ "[event][start]" , "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }
  date {
    match => [ "[event][ingested]" , "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][ingested]"
    tag_on_failure => "_dateparsefailure_ei"
  }
}
output {
  pipeline { send_to => [enrichments] }
}
 
