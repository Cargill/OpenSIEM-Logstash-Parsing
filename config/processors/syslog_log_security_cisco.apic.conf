# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    copy => { "message" => "log.original" }
  }

  mutate {
    add_field => { "event.module" => "cisco" }
    add_field => { "event.dataset" => "cisco.apic" }
    add_field => { "observer.vendor" => "cisco" }
    add_field => { "observer.product" => "cisco.apic" }
    add_field => { "observer.type" => "network_management" }
  }
  mutate {
    strip => ["message"]
    gsub => [
      "message", "  ", " "
    ]
  }

  mutate {
    add_field => { "agent.parse_rule" => "syslog header" }
  }

  dissect {
    tag_on_failure => "_dissect_failure_1"
    mapping => {
      message => "%{event.created} {name=%{agent.name}} <%{pri}>%{?data} %{?data} %{?data} %{?data} %{rest_msg}"
    }
  }
  if [rest_msg] =~ "authentication failure" {
    mutate {
      add_field => { "agent.parse_rule" => "rule 1" }
    }
    dissect {
      tag_on_failure => "_dissect_failure_3"
      mapping => {
        rest_msg => "%{service.type}: %{event.action}; logname=%{user.name} uid=%{user.id} %{?data} rhost=%{source.ip}"
      }
    }
  } else if [rest_msg] =~ "packet flags are incorrect" {
    mutate {
      add_field => { "agent.parse_rule" => "rule 2" }
    }
    dissect {
      tag_on_failure => "_dissect_failure_4"
      mapping => {
        rest_msg => "%{source.ip}:%{source.port} - %{destination.ip}:%{destination.port} - %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~ "client-type-ssh-Failure" or [rest_msg] =~ "client-type-REST-Failure" {
    mutate {
      add_field => { "agent.parse_rule" => "rule 3" }
    }
    dissect {
      tag_on_failure => "_dissect_failure_6"
      mapping => {
        # rest_msg => "%{before} From-%{source.ip}-%{rule.description}"
        rest_msg => "%{?data}subj-[%{user.tmp}]/%{event.id}] From-%{source.ip}-%{rule.description}"
      }
    }
    if [user.tmp] =~ "-" {
      mutate {
        split => { "user.tmp" => "-" }
      }
      if [user.tmp][1] {
        mutate {
          rename => {"[user.tmp][1]" => "user.name"}
        }
      }
    }
  }
  else  {
    mutate {
      add_field => { "agent.parse_rule" => "other" }
    }
    dissect {
      tag_on_failure => "_dissect_failure_5"
      mapping => {
        rest_msg => "%{source.ip}:%{source.port} - %{destination.ip}:%{destination.port} - %{rule.description}"
      }
    }
  }
    date {
      match => ["event.created","ISO8601"]
      timezone => "GMT"
      locale => "en"
      target => "event.created"
      tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
      if ![log.original] {
    mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
      remove_field => ["event.created"]
    }
  }
  mutate {
    remove_field => ["rest_msg", "user.tmp"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
