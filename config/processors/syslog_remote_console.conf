input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "dell" }
    add_field => { "[event][dataset]" => "dell.drac" }
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500 
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  dissect {
    mapping => {
      "actual_msg" => "%{[event][created]} %{+[event][created]} %{+[event][created]} %{?data} %{?data}: %{[event][action]}"
    }
  }
  if [event][action] =~ "sshd:auth" {
    dissect {
      mapping => {
        "[event][action]" => "%{?data}: %{[event][action]}"
      }
    }
  }
  if [event][action] =~ "host=" {
    dissect {
      mapping => {
        "[event][action]" => "%{?data} host=%{[host][ip]}"
      }
    }
  }
  if [event][action] =~ "ip:" {
    dissect {
      mapping => {
        "[event][action]" => "%{?data} (ip:%{[source][ip]}, service:%{[service][name]})"
      }
    }
  }
  date {
    match => [ "[event][created]", "MMM dd HH:mm:ss" ] 
    timezone => "GMT"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
    mutate {
      remove_field => [ "[event][created]" ]
    }
  }
  mutate {
    remove_field => [ "actual_msg" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
}