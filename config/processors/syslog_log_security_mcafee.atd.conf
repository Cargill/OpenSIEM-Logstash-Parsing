# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "mcafee" }
    add_field => { "[event][dataset]" => "mcafee.atd" }
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  } 
  dissect { 
    tag_on_failure => "_dissectfailure"
    mapping => {
      "actual_msg" => "%{[[event][start]]->} %{+[[event][start]]} %{+[[event][start]]} %{[[source][address]]} %{[[process][name]]}[%{[[process][pid]]}]: %{log_message}"
    }
  }
  json {
    source => "log_message"
    target => "atd"
  }
  mutate {
	  rename => {
      "[atd][Summary][Client]" => "[source][ip]"
      "[atd][Summary][User]" => "[user][name]"
      "[atd][Summary][Src IP]" => "[source][ip]"
      "[atd][Summary][Dst IP]" => "[destination][ip]"
      "[atd][Summary][TaskId]" => "[process][thread][id]"
      "[atd][Summary][port]" => "[destination][port]"
      "[atd][Summary][Subject][Name]" => "[file][name]"
      "[atd][Summary][Subject][Type]" => "[file][type]"
      "[atd][Summary][Subject][md5]" => "[file][hash][md5]"
      "[atd][Summary][Subject][sha-1]" => "[file][hash][sha1]"
      "[atd][Summary][Subject][sha-256]" => "[file][hash][sha256]"
      "[atd][Summary][Subject][sha-512]" => "[file][hash][sha512]"
      "[atd][Summary][Subject][size]" => "[file][size]"
      "[atd][Summary][Verdict][Severity]" => "[event][severity]"
      "[atd][Summary][Verdict][Description]" => "[event][severity_name]"
      "syslog_facility_code" => "[log][syslog][facility][code]"
      "syslog_facility" => "[log][syslog][facility][name]"
      "syslog_severity_code" => "[log][syslog][severity][code]"
      "syslog_severity" => "[log][syslog][severity][name]"
	    "[atd][Client]" => "[source][ip]"
      "[atd][Action]" => "[event][action]"
      "[atd][User]" => "[user][name]"
      "[atd][Src IP]" => "[source][ip]"
      "[atd][Dst IP]" => "[destination][ip]"
      "[atd][TaskId]" => "[process][thread][id]"
      "[atd][port]" => "[destination][port]"
      "[atd][Url]" => "[url][full]"
      "[atd][name]" => "[file][name]"
      "[atd][Type]" => "[file][type]"
      "[atd][md5]" => "[hash][md5]"
      "[atd][sha-1]" => "[hash][sha1]"
      "[atd][sha-256]" => "[hash][sha256]"
      "[atd][sha-512]" => "[hash][sha512]"
      "[atd][size]" => "[file][size]"
      "[atd][Techniques]" => "[threat][technique][name]"
      "[atd][Tactics]" => "[threat][tactic][name]"
      "[atd][Description]" => "[rule][description]"
      "[atd][Analysis]" => "[event][action]"
      "[atd][Severity]" => "[event][severity_name]"
    }
  }
  if ![event][action] {
	  if [atd][Summary][SubmitterType] and [atd][Summary][SubmitterType] == "MWG" {
      mutate {
        add_field => { "[event][action]" => "permitted" }
      }
	  } else {
      mutate {
        add_field => { "[event][action]" => "animalized" }
      }
    }
  }
  date {
    match => ["[event][start]", "MMM dd HH:mm:ss", "MMM dd HH:mm:ss ZZZ"]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }
  if "_dateparsefailure_es" in [tags] {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][start]"]
    }
  }
  mutate {
	  remove_field => ["[atd]", "actual_msg", "log_message"]
  }  
}
output {
  pipeline { send_to => [enrichments] }
}