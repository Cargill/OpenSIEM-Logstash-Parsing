input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "azure_graph.identity_protection_api" }
    add_field => { "event.dataset" => "azure_graph.identity_protection" }
    add_field => { "observer.vendor" => "azure" }
    add_field => { "observer.product" => "azure_graph" }
    add_field => { "observer.type" => "identity_risk_detection" }
  }
   json {
     source => "message"
     target => "az"
     tag_on_failure => "_json_failure_azure_graph"
   }
   mutate {
     tag_on_failure => "mutate 1 failure"
     rename => { "[az][riskState]" => "event.outcome" }
     rename => { "[az][detectionTimingType]" => "rule.category" }
     rename => { "[az][id]" => "event.id" }
     rename => { "[az][riskDetail]" => "rule.description" }
     rename => { "[az][activityDateTime]" => "event.created" }
     rename => { "[az][riskEventType]" => "event.kind" }
     rename => { "[az][riskLevel]" => "event.severity_name" }
     rename => { "[az][tokenIssuerType]" => "source.as.organization.name" }
     rename => { "[az][ipAddress]" => "client.ip" }
     rename => { "[az][location][city]" => "source.geo.city_name" }
     rename => { "[az][location][state]" => "source.geo.name" }
     rename => { "[az][location][countryOrRegion]" => "source.geo.region_name" }
     rename => { "[az][userPrincipalName]" => "user.email" }
     rename => { "[az][userDisplayName]" => "user.name" }
     rename => { "[az][source]" => "event.module" }
   }

   if [az][activity][riskEventTypes] {
     mutate {
       rename => { "[az][activity][riskEventTypes]" => "event.type" }
     }
   }
   else {
      mutate {
        rename => { "[az][activity]" => "event.type" }
      }
   }

   date {
     #"2020-11-06t15:17:00.177z"
     match => [ "event.created","ISO8601" ]
     timezone => "GMT"
     locale => "en"
     target => "event.created"
     tag_on_failure => "_dateparsefailure_ec"
   }
   if "_dateparsefailure" in [tags]  {
     if ![log.original] {
       mutate {
         copy => { "message" => "log.original" }
       }
     }
     mutate {
       remove_field => ["event.created"]
     }
   }
   mutate {
     remove_field => ["az"]
   }
}
output {
  pipeline { send_to => [enrichments] }
}