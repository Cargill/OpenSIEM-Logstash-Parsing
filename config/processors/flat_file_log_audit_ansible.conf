# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "ansible" }
    add_field => { "[event][dataset]" => "ansible.audit" }
  }

  # copy file path to a temporary field
  mutate {
    copy => { "[log][file][path]" => "[tmp][full_filename]"}
  }
 
  # extract additional fields from the temporary field
  grok {
    match => { "[log][file][path]" => ["%{GREEDYDATA:[[tmp][path]]}/%{WORD:[[tmp][app]]}-CNetOps-%{NOTSPACE:[[tmp][repository]]}-%{POSINT:[[tmp][build]]}-%{NOTSPACE:[[tmp][ansible_node]]}-%{NOTSPACE:[[tmp][server]]}-%{NOTSPACE:[[tmp][rem_filename]]}", 
    "%{GREEDYDATA:[[tmp][path]]}/%{WORD:[[tmp][app]]}-CNetOps-Dev-%{NOTSPACE:[[tmp][repository]]}-%{POSINT:[[tmp][build]]}-%{NOTSPACE:[[tmp][ansible_node]]}-%{NOTSPACE:[[tmp][server]]}-%{NOTSPACE:[[tmp][rem_filename]]}"]
    }
    timeout_millis => 500
  }

  # split the file name into path and name, assign name to [file][name]
  grok {
    match => { "[tmp][full_filename]" => "%{GREEDYDATA}/%{GREEDYDATA:[[file][name]]}"}
    timeout_millis => 500
  }

  # rename fields to ECS
  mutate {
    rename => {"[tmp][path]" => "[file][directory]"}
    rename => {"[tmp][repository]" => "[package][name]"}
    rename => {"[tmp][build]" => "[package][version]"}
    rename => {"[tmp][ansible_node]" => "[event][provider]"}
    rename => {"[tmp][rem_filename]" => "[file][group]"}
  }

  # pick environment and put in build_version
  if "CNetOps-Dev" in "[log][file][path]" {
    mutate {
      add_field => { "[package][build_version]" => "CNetOps-Dev" }
    }
  }
  else {
    mutate {
      add_field => { "[package][build_version]" => "CNetOps" }
    }
  }

  # remove temporary fields
  mutate {
    remove_field => ["[tmp]"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
