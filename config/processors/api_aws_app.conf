# Copyright [2023] [Cargill, Incorporated.]
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    remove_field => ["event", "host"]
  }
  json {
    source => "message"
    target => "tmp"
  }
  mutate {
    add_field => { 
      "[event][module]" => "aws"
      "[event][dataset]" => "aws.app" 
      "[log][source][hostname]" => "aws_app" 
    }
  }
      # cmd 
      # "[tmp][__monotonic_timestamp]" => "1289776813424"
      # "[tmp][__realtime_timestamp]" => "1704485287095345"
      # "[tmp][_source_monotonic_timestamp]" => "1989560529012"
      # "[tmp][_cap_effective]" => "1ffffffffff"
  mutate {
    rename => {
      "[tmp][_source_realtime_timestamp]" => "[event][created]"
      "[tmp][_exe]" => "[process][executable]"
      "[tmp][_comm]" => "[process][name]" 
      "[tmp][_boot_id]" => "[process][entity_id]"
      "[tmp][unit]" => "[process][parent][command_line]"
      "[tmp][code_file]" => "[process][parent][name]"
      "[tmp][service]" => "[service][name]"
      "[tmp][_gid]" => "[process][pgid]"
      "[tmp][_pid]" => "[process][pid]"    
      "[tmp][_cmdline]" => "[process][command_line]"
      "[tmp][_uid]" => "[file][uid]"
      "[tmp][_systemd_cgroup]" => "[group][name]"
      "[tmp][_transport]" => "[network][transport]"
      "[tmp][_machine_id]" => "[host][id]"
      "[tmp][code_function]" => "[log][origin][function]"
      "[tmp][code_line]" => "[log][origin][file][line]"
      "[tmp][host]" => "[host][hostname]"
      "[tmp][syslog_identifier]" => "[log][syslog][facility][name]"
      "[tmp][priority]" => "[log][syslog][priority]"
      "[tmp][syslog_facility]" => "[log][syslog][facility][code]"
    }
  }
   # k8s
  mutate {
   rename => {
      "[tmp][cluster_name]" => "[cloud][instance][name]"
      "[tmp][container_id]" => "[container][id]"
      "[tmp][ddsource]" => "[container][runtime]"
      "[tmp][ddtags]" => "[container][image][tag]"
      "[tmp][hostname]" => "[host][hostname]"
      "[tmp][kubernetes][container_image]" => "[container][image][name]"
      "[tmp][kubernetes][container_name]" => "[container][name]"
      "[tmp][kubernetes][pod_ip]" => "[cloud][instance][id]"
      "[tmp][kubernetes][namespace_name]" => "[cloud][project][id]"
      "[tmp][kubernetes][pod_name]" => "[cloud][project][name]"
      "[tmp][kubernetes][pod_owner]" => "[cloud][account][name]"
      "[tmp][service]" => "[cloud][service][name]"
      "[tmp][source]" => "[cloud][machine][type]"
      "[tmp][source_type]" => "[event][kind]"
      "[tmp][stream]" => "[event][provider]"
      "[tmp][timestamp]" => "[event][ingested]"
    }
  }
  # k8s or json message
  if [tmp][message] =~ "^{.*?}$" {
    json {
      source => "[tmp][message]"
      target => "jtmp"
      skip_on_invalid_json => true 
    }
    mutate {
      rename => {
        "[jtmp][class]" => "com.cargill.fps.server.service.impl.pricingserviceimpl"
        "[jtmp][method]" => "[http][request][mime_type]"
        "[jtmp][@severity]" => "[log][syslog][severity][name]"
        "[jtmp][level]" => "[log][level]"
        "[jtmp][level_value]" => "[log][syslog][severity][code]"
        "[jtmp][logger_name]" => "[log][logger]"
        "[jtmp][thread_name]" => "[process][thread][name]"
        "[jtmp][@timestamp]" => "[event][created]"
        "[jtmp][@message]" => "[error][message]"
        "[jtmp][dd.trace_id]" => "[trace][id]"
        "[jtmp][dd.service]" => "[service][name]"
        "[jtmp][dd.span_id]" => "[span][id]"
        "[jtmp][file][originalname]" => "[file][name]"
        "[jtmp][file][encoding]" => "[file][type]"
        "[jtmp][file][mimetype]" => "[file][mime_type]"
        "[jtmp][line]" => "[log][origin][file][line]"
      }
    }

  } else {
    mutate {
      rename => {
        "[tmp][message]" => "[error][message]"
      }
    }
  }
  # [event][created] "1704485287095345"
  # "[event][created]" "2024-01-04t17:45:30.921z"
  date {
    match => ["[event][created]", "yyyy-MM-dd'T'HH:mm:sss'Z'","yyyy-MM-dd't'HH:mm:sss'z'", "ISO8601", "UNIX", "UNIX_MS" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
  }
  # "[event][ingested]" = "2024-01-04t17:45:30.921235225z"
  date {
    match => ["[event][ingested]", "yyyy-MM-dd'T'HH:mm:sssssssss'Z'","yyyy-MM-dd't'HH:mm:sssssssss'z'", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][ingested]"
  }

  mutate {
     remove_field => ["tmp", "jtmp" ]
  } 
}
output {
  pipeline { send_to => [enrichments] }
}