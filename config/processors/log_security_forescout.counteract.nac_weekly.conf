input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "forescout.counteract.nac" }
    add_field => { "event.dataset" => "forescout.counteract.nac" }
    add_field => { "observer.vendor" => "forescout" }
    add_field => { "observer.product" => "forescout.counteract.nac" }
    add_field => { "observer.type" => "nac" }
  }
  ### Header
  ### Logstash tcp or udp in
  if [agent.type] == "logstash" {
    dissect {
      tag_on_failure => "_dateparsefailure_header"
      mapping => {
        message => "<%{pri}> %{rest_msg}"
      }
    }
  } else {
  ### Filebeats udp or tcp in
    dissect {
      tag_on_failure => "_dateparsefailure_header"
      mapping => {
        message => "%{?data} {%{?data}} <%{pri}> %{rest_msg}"
      }
    }
  }
  syslog_pri {
    syslog_pri_field_name => "pri"
  }
  mutate{
    remove_field => ["pri"]
  }
  if [message] =~ ": NAC Policy Log:" or [message] =~ "Application status" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 1" }
    }
    mutate {
      gsub => ["message", "\r",""]
      gsub => ["message", '[\"]',""]
    }
    dissect {
      mapping => {
        message => "%{log.date} {%{?data}} <%{log.level}>%{event.start->} %{+event.start} %{+event.start} %{rest_msg}"
      }
    }
    if [message] =~ ": Log:" {
      if [message] =~ " CounterAct - " {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 2" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} CounterAct - %{host.hostname}[%{source.port}]: %{?check.del}. %{?del}: %{?del1}: %{rule.ruleset} %{?del} %{somedata}"
          }
        }
      }
      else {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 3" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} Counteract - %{host.hostname->} %{?check.del}. %{?del}: %{?del1}: %{rule.ruleset} %{?del} %{somedata}"
          }
        }
      }
      kv {
        source => "somedata"
        field_split => " ,"
        value_split => ":"
        target => "cact"
      }
      mutate {
        rename => {"[cact][Type]" => "service.type"}
        rename => {"[cact][Source]" => "source.ip"}
        rename => {"[cact][Target]" => "destination.ip"}
        rename => {"[cact][Vendor]" => "host.type"}
        rename => {"[cact][Severity]" => "event.severity_name"}

      }
    }
    else if [message] =~ "Application status" and [message] =~ "EM connection status:" and [message] =~ "Assigned hosts:" and [message] =~ "Engine status:" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 4" }
      }
      dissect {
        mapping => {
          rest_msg => "%{?data} %{chk_data} %{?data}"
        }
      }
      if [chk_data] == "-" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 4 (1)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} - %{host.hostname}[%{source.port}]: Application status: %{service.state};Connected clients: %{source.address};EM connection status: %{event.action};Assigned hosts: %{?hosts.assigned};Engine status: %{rule.name};Installed Plugins: %{?installed_plugins}"
          }
        }
      }
      else if [rest_msg] =~ "Recovery EM:"{
        mutate {
          add_field => { "agent.parse_rule" => "RULE 4 (2)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} %{?data} -%{host.hostname} %{?data}: Application status: %{service.state};Connected clients: %{source.address};Recovery EM: %{source.ip};EM connection status: %{event.action};Assigned hosts: %{?hosts.assigned};Engine status: %{rule.name};Installed Plugins: %{?installed_plugins}"
          }
        }
      }
      else {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 4 (3)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} %{host.hostname}[%{process.pid}]: Application status: %{service.state};Connected clients: %{source.address};EM connection status: %{event.action};Assigned hosts: %{?hosts.assigned};Engine status: %{rule.name};Installed Plugins: %{?installed_plugins}"
          }
        }
      }
    }
    else if [message] =~ "Application status" and [message] =~ "Attacked Services:" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 4 (a)" }
      }
      dissect {
        mapping => {
          rest_msg => "%{source.address} - %{host.hostname}[%{source.port}]: Application status: %{service.state};%{kv_msg}"
        }
      }
      kv {
        source => "kv_msg"
        field_split => ";"
        value_split => ":"
        target => "fsnac"
      }
    }
    else if [message] =~ ": NAC Policy " {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 5" }
      }
      dissect {
        mapping => {
          rest_msg => "%{?data} %{?data} %{chk_data} %{?data}"
        }
      }
      if [chk_data] == "-" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 5 (a)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} %{?data} - %{host.hostname}[%{source.port}]: NAC Policy Log: Source: %{source.ip}, Rule: %{?rule.details} , Match: %{?rule.description}, Category: %{?category}, %{rest_msg1}"
          }
        }
      }
      else if [rest_msg] =~ "MAC Address-" and [chk_data] !~ "^-"{
        mutate {
          add_field => { "agent.parse_rule" => "RULE 5 (b)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} %{host.hostname}[%{source.port}]: NAC Policy Log: Source: MAC Address-%{source.mac}, Rule: %{?rule.details} , Match: %{?rule.description}, Category: %{?category}, %{rest_msg1}"
          }
        }
      }
      else if [rest_msg] =~ "MAC Address-" and [chk_data] =~ "^-"{
        mutate {
          add_field => { "agent.parse_rule" => "RULE 5 (c)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{source.address} %{?data} -%{host.hostname} %{?data}: NAC Policy Log: Source: MAC Address-%{source.mac}, Rule: %{?rule.details} , Match: %{?rule.description}, Category: %{?category}, %{rest_msg1}"
          }
        }
      }
      if [rest_msg1] =~ "Duration :" or [rest_msg1] =~ "Duration:"{
        mutate {
          add_field => { "agent.parse_rule" => "RULE 6" }
        }
        dissect {
          mapping => {
            rest_msg1 => "%{msg} Duration: %{event.duration}"
          }
        }
      }
      if [rest_msg1] =~ "MAC Address changed from" and [rest_msg1] =~ "Duration:"  {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 7" }
        }
        dissect {
          mapping => {
            rest_msg1 => "%{msg} MAC Address changed from %{source.mac} to %{destination.mac}. %{?data}"
          }
        }
      }
      if [rest_msg1] =~ "MAC Address changed from" and [rest_msg1] !~ "Duration:"  {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 7" }
        }
        dissect {
          mapping => {
            rest_msg1 => "%{msg} MAC Address changed from %{source.mac} to %{destination.mac}"
          }
        }
      }
      mutate {
        strip => ["event.duration"]
      }
    }
    else {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 8 " }
      }
      dissect {
        mapping => {
          rest_msg => "%{source.address} CounterAct - %{host.hostname}[%{source.port}]: %{log.message}"
        }
      }
    }
  }
  else if [message] =~ ":" and [message] =~ "Log:" and [message] =~ "CounterAct -" and [message] =~ "Source:" and [message] =~ "Target:" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 9" }
    }
    dissect {
      mapping => {
        message => "%{log.date} {%{?data}} <%{log.level}>%{event.start->} %{+event.start} %{+event.start} %{source.address} CounterAct - %{host.hostname}[%{source.port}]: %{?check.del}. %{?del}: %{?del1}: %{rule.ruleset} %{?del} %{somedata}"
      }
    }
    kv {
      source => "somedata"
      field_split => " ,"
      value_split => ":"
      target => "cact"
    }
    mutate {
      rename => {"[cact][Type]" => "service.type"}
      rename => {"[cact][Source]" => "source.ip"}
      rename => {"[cact][Target]" => "destination.ip"}
      rename => {"[cact][Vendor]" => "host.type"}
      rename => {"[cact][Severity]" => "event.severity_name"}
    }
  }
  else if [message] =~ ":" and [message] =~ "Log:" and [message] =~ "CounterAct -" and [message] =~ "Source:" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 10" }
    }
    dissect {
      mapping => {
        message => "%{log.date} {%{?data}} <%{log.level}>%{event.start->} %{+event.start} %{+event.start} %{source.address} CounterAct - %{host.hostname}[%{source.port}]: %{?check.del} Source: %{source.ip}, %{?data}"
      }
    }
  }
  if [source.ip] and [source.ip] =~ "MAC Address" {
    mutate {
      add_field => { "agent.parse_rule" => "Invalid IP value" }
      remove_field => ["source.ip"]
    }
  }
  date {
    match => ["event.start" , "MMM dd HH:mm:ss","MMM dd HH:mm:ss.SSS ZZZ","MMM dd HH:mm:ss.SSS"]
    timezone => "GMT"
    locale => "en"
    target => "event.start"
  }
  mutate {
    remove_field => ["log.date","server.host","rest_msg1","msg","rest_msg","kv_msg","chk_data", "event.duration", "cact","somedata", "fsnac"]
    # rename => {"host" => "agent"}
  }
    ## classification part ########
    #   - INFO
    # 6 ,3     - ERROR
    #      - Warning
  translate {
    field => "[event.severity_name]"
    destination => "[rule.category]"
    dictionary => {
      "ERRR" => "Security/Failed Activity"
      "INFO" => "Security/Activity"
      "WARN" => "Security/Other"
      "Lost" => "Security/Failed Activity"
      "Failed" => "Security/Failed Activity"
      "6" => "Security/Failed Activity"
      "3" => "Security/Failed Activity"
    }
    fallback => "Others"
  }
  # Do not remove this, due to internal need.
  mutate {
    copy => { "host.hostname" => "host.name" }
  }

}
output {
  pipeline { send_to => [enrichments] }
}