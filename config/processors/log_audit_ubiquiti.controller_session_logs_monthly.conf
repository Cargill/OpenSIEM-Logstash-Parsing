input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
   json {
    source => "message"
    target => "ubiq"
  }
  mutate {
    rename => {"[ubiq][log][offset]" => "log.offset"}
    rename => {"[ubiq][log][file][path]" => "log.file.path"}
    rename => {"[ubiq][message]" => "message"}
    rename => {"[ubiq][fields][observer][product]" => "observer.product"}
    rename => {"[ubiq][fields][observer][type]" => "observer.type"}
    rename => {"[ubiq][fields][observer][vendor]" => "observer.vendor"}
    rename => {"[ubiq][fields][organization][name]" => "organization.name"}
    rename => {"[ubiq][fields][event][module]" => "event.module"}
    rename => {"[ubiq][fields][event][dataset]" => "event.dataset"}
    rename => {"[ubiq][host][name]" => "host.name"}
    rename => {"[ubiq][ecs][version]" => "ecs.version"}
  }

 dissect {
   tag_on_failure => "_dissectfailure"
   mapping => {
     message => "%{event.created} [%{service.name}] %{event.type}: %{rule.description}"
   }
  }
 if [rule.description] =~ "unsuccessful login attempts" {
   mutate {
     copy => { "rule.description" => "tmp" }
   }
   dissect {
     tag_on_failure => "_dissectfailure"
     mapping => {
       #penalizing admin for 9 unsuccessful login attempts
       tmp => "penalizing %{user.name} %{?data}"
     }
   }
 }
  mutate {
    remove_field => ["ubiq", "tmp"]
  }
date {
    match => ["event.created","yyy.MM.dd-HH:mm:ss.SSS"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
    tag_on_failure => "_dateparsefailure_ec"
  }
}
output {
  pipeline { send_to => [enrichments] }
}