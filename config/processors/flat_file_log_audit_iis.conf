# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "iis server" }
    add_field => { "event.dataset" => "iis" }
    add_field => { "observer.vendor" => "microsoft" }
    add_field => { "observer.product" => "iis" }
    add_field => { "observer.type" => "weblogs" }
  }
  csv {
    columns => [
      "date",
      "time",
      "s-sitename",
      "s-computername",
      "source.ip",
      "cs-method",
      "cs-uri-stem",
      "cs-uri-query",
      "source.port",
      "cs-username",
      "client.ip",
      "cs-version",
      "cs(User-Agent)",
      "cs(Cookie)",
      "cs(Referer)",
      "cs-host",
      "sc-status",
      "sc-substatus",
      "sc-win32-status",
      "sc-bytes",
      "cs-bytes",
      "time-taken",
      "X-Forwarded-For"]
    source => "message"
    separator => " "
    target => "iis"
  }
  mutate {
     rename => {"[iis][date]" => "date"}
     rename => {"[iis][time]" => "time"}
     # rename => {"[iis][s-sitename]" => "s-sitename"}
     rename => {"[iis][s-computername]" => "destination.address"}
     rename => {"[iis][source.ip]" => "destination.ip"}
     rename => {"[iis][cs-method]" => "http.request.method"}
     rename => {"[iis][cs-uri-stem]" => "url.path"}
     rename => {"[iis][cs-uri-query]" => "url.query"}
     rename => {"[iis][source.port]" => "destination.port"}
     rename => {"[iis][cs-username]" => "user.name"}
     rename => {"[iis][client.ip]" => "source.ip"}
     rename => {"[iis][cs-version]" => "tls.next_protocol"}
     rename => {"[iis][cs(User-Agent)]" => "user_agent.version"}
     # rename => {"[iis][cs(Cookie)]" => "cs(Cookie)"}
     rename => {"[iis][cs(Referer)]" => "http.request.referrer"}
     # rename => {"[iis][cs-host]" => "cs-host"}
     rename => {"[iis][sc-status]" => "http.response.status_code"}
     # rename => {"[iis][sc-substatus]" => "sc-substatus"}
     # rename => {"[iis][sc-win32-status]" => "sc-win32-status"}
     rename => {"[iis][sc-bytes]" => "http.response.bytes"}
     rename => {"[iis][cs-bytes]" => "http.request.bytes"}
     rename => {"[iis][time-taken]" => "event.duration"}
  }
  # if there is an [iis][X-Forwarded-For], then we want to map [iis][X-Forwarded-For] to source.ip, and then map the source.ip to observer.ip
  if [iis][X-Forwarded-For] {
    mutate {
      copy => { "source.ip" => "observer.ip" }
      copy => { "[iis][X-Forwarded-For]" => "source.ip" }
    }
  }
  mutate {
	 add_field => {"event.created" => "%{date} %{time}" }
	 remove_field => ["date", "time", "[iis]"]
  }

  date {
		match => ["event.created", "yyyy-MM-dd HH:mm:ss"]
		timezone => "GMT"
		locale => "en"
		target => "event.created"
  }
}
output {
  pipeline { send_to => [enrichments] }
}
