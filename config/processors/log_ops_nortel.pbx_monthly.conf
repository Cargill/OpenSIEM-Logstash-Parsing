input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "nortel" }
    add_field => { "event.dataset" => "nortel.pbx" }
    add_field => { "observer.vendor" => "nortel" }
    add_field => { "observer.product" => "nortel.pbx" }
    add_field => { "observer.type" => "pbx" }
  }
### Header
  ### Logstash tcp or udp in
  if [agent.type] == "logstash" { 
    grok {
      tag_on_failure => "_parsefailure_header"
      match => { "message" => "(\<(?<pri>\d+)\>( )?)?(?<rest_msg>.*?)$" }
    }

  } else {
  ### Filebeats udp or tcp in
    grok {
      tag_on_failure => "_parsefailure_header"
      match => { "message" => ".*?\{name=.*?\} (\<(?<pri>\d+)\>( )?)?(?<rest_msg>.*?)$" }
    }
  }

  syslog_pri {
    syslog_pri_field_name => "pri"
  }
  mutate{
    remove_field => ["pri","rest_msg"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}