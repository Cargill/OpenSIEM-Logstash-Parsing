# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  json {
    source => "message"
    target => "aws"
  }
  grok {
    match => { "[aws][userIdentity][principalId]" => "(?<service.id>.*?):(?<service.name>.*?)$" }
  }
  grok {
    match => { "[aws][userIdentity][arn]" => "^.*?:.*?:.*?:.*?:(?<cloud.instance.id>.*?):(?<cloud.instance.name>.*?)$" }
  }

  mutate {
    remove_field => ["[aws][userIdentity][principalId]", "[aws][userIdentity][arn]"]
  }
  mutate {
    add_field => {"log.source.hostname" => "api_aws_cloudtrail"}
  }
  mutate {
    add_field => { "cloud.provider" => "aws" }
    add_field => { "event.module" => "aws.cloudtrail" }
    add_field => { "observer.vendor" => "aws" }
    add_field => { "observer.product" => "aws.cloudtrail" }
    add_field => { "observer.type" => "cloud logs" }
    add_field => { "log.source.hostname" => "aws" }
    # base/common fields
    rename => { "[aws][eventVersion]" => "service.version" }
    rename => { "[aws][eventTime]" => "event.created" }
    rename => { "[aws][eventSource]" => "event.dataset" }    
    rename => { "[aws][eventName]" => "event.action" }
    rename => { "[aws][awsRegion]" => "cloud.region" }
    rename => { "[aws][recipientAccountId]" => "cloud.account.id" }
    rename => { "[aws][sourceIPAddress]" => "source.ip" }   
    rename => { "[aws][userAgent]" => "user_agent.name" }  
    rename => { "[aws][requestID]" => "service.id" }
    rename => { "[aws][eventID]" => "event.id" }
    rename => { "[aws][eventType]" => "event.type" }
    rename => { "[aws][errorCode]" => "error.code" }
    rename => { "[aws][errorMessage]" => "error.message" }
    # userIdentity
    rename => { "[aws][userIdentity][type]" => "service.type" }
    rename => { "[aws][userIdentity][accessKeyId]" => "transaction.id" }
    # requestParameters
    rename => { "[aws][requestParameters][bucketName]" => "file.directory" }
    rename => { "[aws][requestParameters][key]" => "file.name" }
    rename => { "[aws][requestParameters][username]" => "source.user.name" }
    rename => { "[aws][requestParameters][policyName]" => "source.user.roles" }


    # Insights Field to ECS 1.6
    rename => { "[aws][insightDetails][eventCategory]" => "event.category" }
    rename => { "[aws][insightDetails][state]" => "service.state" }
    rename => { "[aws][insightDetails][insightType]" => "event.type" }
    rename => { "[aws][insightDetails][statistics]" => "error.message" }
    rename => { "[aws][insightDetails][baseline]" => "rule.name" }
    rename => { "[aws][insightDetails][insight]" => "rule.description" }
    rename => { "[aws][insightDetails][insightDuration]" => "event.duration" }
  }
  mutate {
    remove_field => ["aws"]
  }
  if [source.ip] !~ "^(\d+\.\d+\.\d+\.\d+|[0-9a-zA-Z]+:.*?:.*?:.*?:.*?:.*?:.*?:[0-9a-zA-Z]+)$" {
    mutate {
      rename => { "source.ip" => "source.address" }
    }
  }
  translate {
    field => "event.category"
    destination => "event.category"
    dictionary => {
      "management" => "configuration"
      "Data" => "database"
      "Insight" => "intrusion_detection"
    }
      fallback => "database"
  }
    
  # event.created = "2020-12-15T15:23:30Z",
  mutate { 
    gsub => [
      "event.created", "T", " ",
      "event.created", "Z", ""
    ]
  }
  date {
    match => ["event.created" , "yyyy-mm-dd HH:mm:ss"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
    tag_on_failure => "_dateparsefailure_ec"
   }
  
  if "_dateparsefailure_ec" in [tags]  {
    if ![log.original] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.created"]
    }
  }
  
  
}
output {
  pipeline { send_to => [enrichments] }
}

