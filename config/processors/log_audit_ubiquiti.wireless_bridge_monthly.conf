input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "ubiquiti" }
    add_field => { "event.dataset" => "ubiquiti.bridge.session" }
    add_field => { "observer.vendor" => "ubiquiti" }
    add_field => { "observer.product" => "ubiquiti.bridge" }
    add_field => { "observer.type" => "wireless_bridge" }
  }
  dissect {
    tag_on_failure => "_dissectfailure"
    mapping => {
      "message" => "%{event.created} {name=%{agent.name}} <%{pri}>%{data}  %{data} %{data} %{observer.type}[%{event.id}]: %{rest_message}"
    }
  }
  mutate {
    rename => {"rest_message" => "rule.description"}
  }
  mutate {
     remove_field => ["data","pri", "tmp"]
  }
  date {
    match => ["event.created", "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
    tag_on_failure => "_dateparsefailure_ec"
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}