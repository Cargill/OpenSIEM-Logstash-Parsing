# Copyright [2023] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => {
      "[event][module]" => "sap"
      "[event][dataset]" => "sap.security_bridge"
      "[log][source][hostname]" => "api_ois_sap_security_bridge"
    }
  }
  json{
    source=>"message"
    target=>"tmp"
  }
  mutate{
    rename=>{
      "[tmp][IPv4Address]" => "[source][ip]"
      "[tmp][severity]" => "[event][severity]"
      "[tmp][eventUserType]" => "[user][roles]"
      "[tmp][eventUserGroup]" => "[user][group][name]"
      "[tmp][systemType]" => "[observer][type]"
      "[tmp][eventMsg]" => "[event][reason]"
      "[tmp][program]" => "[package][type]"
      "[tmp][account]" => "[user][name]"
      "[tmp][action]" => "[event][action]"
      "[tmp][guid]" => "[event][id]"
      "[tmp][transactionCode]" => "[transaction][id]"
      "[tmp][terminal]" => "[group][name]"
      "[tmp][object]" => "[event][code]"
      "[tmp][sid]" => "[group][id]"
      "[tmp][client]" => "[service][id]"
      "[tmp][qSid]" => "[cloud][instance][name]"
    }
  }
  if [tmp][eventAttr1] {
    mutate{
      add_field => {
        "[event][type]" => "%{[tmp][eventAttr1]}"
      }
    }
  }
  if [tmp][eventAttr2] {
    mutate{
      add_field => {
        "[event][type]" => "%{[tmp][eventAttr2]}"
      }
    }
  }
  if [tmp][eventAttr3] {
    mutate{
      add_field => {
        "[event][type]" => "%{[tmp][eventAttr3]}"
      }
    }
  }
  if [tmp][eventAttr4] {
    mutate{
      add_field => {
        "[event][type]" => "%{[tmp][eventAttr4]}"
      }
    }
  }
  if [tmp][eventAttr5] {
    mutate{
      add_field => {
        "[event][type]" => "%{[tmp][eventAttr5]}"
      }
    }
  }
  grok {
      match => { "[tmp][timestamp]" => "^(\/Date\()(?<[event][created]>.*?)(\)\/)$" }
      match => { "[tmp][recTimestamp]" => "^(\/Date\()(?<[event][modified]>.*?)(\)\/)$" }
  }
  date {
    match => [ "[event][created]", "UNIX_MS" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_es"
  }
  date {
    match => [ "[event][modified]", "UNIX_MS" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][modified]"
    tag_on_failure => "_dateparsefailure_es"
  }
  if [tmp][retroactive] {       
    mutate {
      add_tag => [ "retroactive" ]
    }
  }
  mutate {
    remove_field => ["tmp" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
}