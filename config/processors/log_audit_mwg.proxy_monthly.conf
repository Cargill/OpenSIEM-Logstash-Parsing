input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {

  mutate {
    copy => { "message" => "tmp_msg" }
    tag_on_failure => "failed mutate 1"
  }
  mutate {
    gsub => [
      "tmp_msg", "[_]{2,}", "",
      "tmp_msg", "[\n]", ", ",
      "tmp_msg", "[\r]", "",
      "tmp_msg", "\s+", " ",
      "tmp_msg", "^\s+", ""
    ]
    tag_on_failure => "failed mutate 2"
  }
    

  kv {
    source => "tmp_msg"
    target => "mwg"
    field_split => ","
    value_split => ":"
    trim_key => " "
    transform_key => "lowercase"
  }
  mutate {
    rename => { "[mwg][user]" => "source.user.name" }
    rename => { "[mwg][action]" => "event.action" }
    rename => { "[mwg][type]" => "process.name" }
    rename => { "[mwg][source type]" => "event.category" }
    rename => { "[mwg][source id]" => "source.ip" }
    rename => { "[mwg][timestamp]" => "event.created"  }   
    rename => { "[mwg][role]" => "source.user.group.name"  }
    rename => { "[mwg][user-agent]" => "user_agent.original" }
    rename => { "[mwg][source name]" => "source.address" }
    rename => { "[mwg][source path]" => "file.path" }
    rename => { "[mwg][entry]" => "source.ip" }
    rename => { "[mwg][description]" => "event.original" }
    rename => { "[mwg][appliance]" => "observer.hostname" }
    add_field => { "observer.vendor" => "mcafee" }
    add_field => { "observer.product" => "mcafee web gateway" }
    add_field => { "observer.type" => "proxy" }
    tag_on_failure => "failed mutate 4"
    
  }
  
  
  mutate {remove_field => [ "mwg", "tmp_msg"] } 
  
  
  date {
    # "26/aug/2020:19:35:09.533 +0000"
    # 26/aug/2020:19:35:09.533
    match => ["event.created","dd/MMM/yyyy:HH:mm:ss.SSS Z", "dd/MMM/yyyy:HH:mm:ss.SSS"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
    tag_on_failure => "_dateparsefailure_ec"
  }
  
  if "_dateparsefailure_ec" in [tags]  {
    if ![log.orignal] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.created"]
    }    
  }
  # VAR_ENRICHMENTS
}
output {
# VAR_OUTPUT
}