input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}

filter {
  dissect {
    mapping => {
      "message" => '{"type":"%{[[event][dataset]]}","@timestamp":"%{[[event][created]]}","host":"%{[[host][name]]}","severity":"%{[[log][syslog][priority]]}","facility":"%{[[log][syslog][facility][code]]}","syslog-tag":"%{?syslog-tag}","source":"%{[[event][kind]]}","message":"%{actual_msg}'
    }
  }
  date {
    match => ["[event][created]" , "ISO8601"]
    timezone => "GMT"
    locale => "ec"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if [event][kind] == "apache-access" {
    dissect {
      mapping => { 'actual_msg' => '[%{[[event][ingested]]}] [%{[[host][user][name]]}] [%{[[log][logger]]}] [%{[[log][source][hostname]]}] [%{[[client][nat][ip]]}] [%{[[server][port]]}] %{[[http][request][method]]} %{[[url][full]]} "%{[[url][query]]}" %{[[network][protocol]]} %{[[http][response][status_code]]} %{[[host][network][ingress][bytes]]} %{[[client][bytes]]} %{[[process][uptime]]} "%{[[dns][header_flags]]}" "%{[[user_agent][name]]}" %{[[network][forwarded_ip]]}' }
      tag_on_failure => "access_dissect_failure"
    }
    mutate {
      gsub => [
        '[network][forwarded_ip]', '("}\r)', ''
      ]
    }
    if [client][nat][ip] == "::1" {
      mutate {
        replace => [ "[client][nat][ip]", "127.0.0.1" ]
      }
    }
    if [network][forwarded_ip] == "-" {
      mutate {
        remove_field => [ "[network][forwarded_ip]" ]
      }
    }
  }
  else if [event][kind] == "apache-error" {
    dissect {
      mapping => { "actual_msg" => "[%{[[event][ingested]]}] [%{[[host][user][name]]}] [%{[[log][level]]}] [%{[[log][logger]]}] [%{[[log][source][hostname]]}] [%{[[process][pid]]}] [%{[[log][origin][file][name]]}: %{[[http][response][status_code]]}] [client %{[[client][nat][ip]]}] %{rest_msg}" }
      tag_on_failure => "error_dissect_failure"
    }
    if "::1" in [client][nat][ip] {
        mutate {
          gsub => [
            '[client][nat][ip]', '(::1)', '127.0.0.1'
          ]
        }
    }
    mutate {
      gsub => [
        'rest_msg', '("})', ''
      ]
    }
    if "access" in [rest_msg] {
        dissect {
          mapping => {
            "rest_msg" => "%{[[event][id]]}: access to /%{[[file][name]]} denied (filesystem path '%{[[file][path]]}') %{[[event][reason]]}"
          }
          tag_on_failure => "error_dissect_failure_rest"
        }
    }
    mutate {
      remove_field => [ "rest_msg" ]
    }
  }
  mutate {
    remove_field => [ "actual_msg" ]
  }
}

output {
  pipeline {
    send_to => [enrichments]
  }
}