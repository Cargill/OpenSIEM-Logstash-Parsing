input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  if [message] =~ "last message repeated" {
    drop {}
  }
  mutate {
    strip => ["message"]
    gsub => ["message" , '[\"]' , ""]
    gsub => ["message" , '[\"\"]' , ""]
  }
  dissect {
    mapping => {
      "message" => "%{log.date_time} {%{?data}} <%{log.level}>%{rest_msg}"
    }
  }
  if [message] =~ "httpd:" {
    if [message] !~ "Web" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 1" }
      }
      dissect {
        mapping => {
          rest_msg => "%{process.name}: [%{source.port}]: (%{source.ip}) (User:%{source.user.email}) %{event.action}"
        }
      }
    }
    else {
      mutate {
        add_field => { "parse_rule_name" => "RULE 2" }
      }
      dissect {
        mapping => {
          rest_msg => "%{process.name}: [%{source.port}]: (%{source.ip}) (User:%{source.user.email}) [%{?email.type}] %{rest_msg}}"
        }
      }
    }
  }
  else if [message] =~ "Download:" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 3" }
    }    
    dissect {
      mapping => {
        rest_msg => "%{event.action}: [%{source.port}]: (%{source.ip}) %{?email.description} downloaded by %{source.user.email} (%{source.bytes} %{?data}, %{?download.time}) (Type: %{?download.type}, Location: %{?location}"
      }
    }
  }
  else if [message] =~ "sendmail" {
    if [message] =~ " to=" {
      if [message] =~ "ctladdr=" {
        if [message] !~ "relay=" {
          mutate {
            add_field => { "parse_rule_name" => "RULE 4" }
          }
          dissect {
            mapping => {
              rest_msg => "%{event.action}[%{source.port}]: %{source}: to=%{destination.user.email}, ctladdr=%{server.domain}, delay=%{delay}, xdelay=%{xdelay}, mailer=%{?mailer}, pri=%{pri}, dsn=%{?dsn.id}, stat=%{event.action}"
            }
          }
        }
        else {
          mutate {
            add_field => { "parse_rule_name" => "RULE 5" }
          }
          dissect {
            mapping => {
              rest_msg => "%{event.action}[%{source.port}]: %{source}: to=%{destination.user.email}, ctladdr=%{server.domain}, delay=%{delay}, xdelay=%{xdelay}, mailer=%{?mailer}, pri=%{pri}, relay=%{observer.hostname}, dsn=%{?dsn.id}, stat=%{event.action}"
            }
          }
        }
      }
      else {
        mutate {
          add_field => { "parse_rule_name" => "RULE 6" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.action}[%{source.port}]: %{source}: to=<%{destination.user.email}>, delay=%{delay}, xdelay=%{xdelay}, mailer=%{?mailer}, pri=%{pri}, relay=%{observer.hostname} [%{source.ip}], dsn=%{?dsn.id}, stat=%{event.action} (<%{?id}> [InternalId=%{event.id}]%{rule.description})"
          }
        }
      }
    }
    if [message] =~ "STARTTLS=client" {
      mutate {
        add_field => { "parse_rule_name" => "RULE 7" }
      }
      dissect {
        mapping => {
          rest_msg => "%{event.action}[%{source.port}]: STARTTLS=%{?startls}, relay=%{observer.hostname}, version=%{?email.version}, verify=%{?version}, cipher=%{tls.client.hash.sha256}, bits=%{source.bytes}/%{destination.bytes}"
        }
      }
    }
    if [message] =~ "from=" {
      if [message] !~ " proto=" {
        mutate {
          add_field => { "parse_rule_name" => "RULE 8" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.action}[%{source.port}]: %{source.name}: from=%{source.user.email}, size=%{source.bytes}, class=%{class}, nrcpts=%{nrcpts}, msgid=<%{message.id}>, relay=%{observer.ip}"
          }
        }
      }
      else { 
        mutate {
          add_field => { "parse_rule_name" => "RULE 9" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.action}[%{source.port}]: %{source.name}: from=%{source.user.email}, size=%{source.bytes}, class=%{class}, nrcpts=%{nrcpts}, msgid=<%{message.id}>, proto=%{network.protocol}, daemon=%{daemon}, relay=%{observer.ip}"
          }
        }
      }
    }
  }
  mutate {
    gsub => ["source.user.email" , "<",""]
    gsub => ["source.user.email" , ">",""]
    remove_field => ["source","delay","xdelay","pri","nrcpts","log.date_time","rest_msg"]
   # add_field => { "ecs.version" => "1.4" }
   # rename => {"host" => "agent"}
  }
  translate {
    field => "[log.level]"
    destination => "[rule.category]"
    dictionary => {
      "ERRR" => "Security Failed Activity"
      "INFO" => "Security Activity"
      "NOTE" => "Security Other" 
      "WARN" => "Security Other"
    }
    fallback => "Others"
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}