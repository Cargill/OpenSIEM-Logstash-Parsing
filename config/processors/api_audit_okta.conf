# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  # use plain codec with json filter to retain message field
  # message field is a json array with 1000(limit) events
  json {
    source => "message"
    target => "okta"
  }
  mutate {
    add_field => { 
      "[cloud][provider]" => "okta"
      "[log][source][hostname]" => "api_okta_audit"
      "[event][module]" => "okta"
      "[event][dataset]" => "okta.audit" 
    }
  }
  # if okta is an array, split
  if [okta][0] {
    split {
      field => "okta"
    }
  }
  mutate {
    copy => { "message" => "[event][original]" }
    rename => { "[okta][outcome][result]" => "[event][outcome]"
      "[okta][request][ipChain][0][ip]" => "[source][ip]"
      "[okta][eventType]" => "[event][type]"
      "[okta][displayMessage]" => "[event][category]"
      "[okta][severity]" => "[log][level]"
      
      "[okta][client][userAgent][os]" => "[user_agent][os][name]"
      "[okta][client][userAgent][rawUserAgent]" => "[user_agent][original]"
      "[okta][client][userAgent][browser]" => "[user_agent][name]"
      
      "[okta][securityContext][domain]" => "[source][domain]"
      "[okta][transaction][type]" => "[user][type]"
      "[okta][actor][alternateId]" => "[source][user][email]"
      
      "[okta][target][id]" => "[destination][user][id]"
      "[okta][target][alternateId]" => "[destination][user][email]"
      "[okta][target][displayName]" => "[destination][user][full_name]"
      
      "[okta][target][0][id]" => "[destination][user][id]"
      "[okta][target][0][alternateId]" => "[destination][user][email]"
      "[okta][target][0][displayName]" => "[destination][user][full_name]"

      "[okta][actor][id]" => "[user][effective][id]"
      "[okta][actor][displayName]" => "[user][full_name]"
      "[okta][client][ipAddress]" => "[host][ip]"
      "[okta][client][geographicalContext][city]" => "[host][geo][city_name]"
      "[okta][client][geographicalContext][state]" => "[host][geo][region_name]"
      "[okta][client][geographicalContext][country]" => "[host][geo][country_name]"
      "[okta][client][geographicalContext][postalcode]" => "[host][geo][postal_code]"
      "[okta][client][geographicalContext][geolocation]" => "[host][geo][location]"
      "[okta][authenticationContext][externalSessionId]" => "[transaction][id]"
      "[okta][outcome][reason]" => "[event][reason]"
      "[okta][published]" => "[event][created]"
      "[okta][debugContext][debugData][url]" => "[url][path]" 
    }

  }
  if [event][action] == "user.account.update_password" {
    # password change event 
    mutate {
      rename => { "[okta][target][0][alternateId]" => "[destination][user][email]" }
    }
  }
    # "2022-03-22T12:20:30.498Z"
  date {
    match => ["[event][created]", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"]
    timezone => "GMT"
    locale => "ec"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags] {
    mutate {
      remove_field => ["[event][created]"]
    }
  }
  mutate {
    remove_field => [ "okta" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
