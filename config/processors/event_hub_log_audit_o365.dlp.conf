# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  json {
    source => "message"
    target => "az"
  }
  mutate {
    add_field => { 
      "event.module" => "microsoft o365 dlp logs"
      }
  }
  mutate {
    rename => {"[az][category]" => "rule.category"}
    rename => {"[az][id]" => "event.id"}
#   rename => {"[az][incidentId]" => ""}
    rename => {"[az][investigationId]" => "group.id"}
#   rename => {"[az][assignedTo]" => ""}
    rename => {"[az][severity]" => "event.severity_name"}
    rename => {"[az][status]" => "event.outcome"}
#   rename => {"[az][classification]" => ""}
    rename => {"[az][determination]" => "event.type"}
#   rename => {"[az][investigationState]" => ""}
    rename => {"[az][detectionSource]" => "observer.product"}
#   rename => {"[az][detectorId]" => ""}
#   rename => {"[az][threatFamilyName]" => ""}
    rename => {"[az][title]" => "event.kind"}
    rename => {"[az][description]" => "rule.description"}
    rename => {"[az][alertCreationTime]" => "event.created"}
    rename => {"[az][firstEventTime]" => "event.start"}
    rename => {"[az][lastEventTime]" => "event.end"}
    rename => {"[az][lastUpdateTime]" => "event.modified"}
#   rename => {"[az][resolvedtime]" => ""}
    rename => {"[az][machineId]" => "host.id"}
    rename => {"[az][computerDnsName]" => "host.hostname"}
#   rename => {"[az][rbacgroupname]" => ""}
#   rename => {"[az][aadtenantid]" => ""}
#   rename => {"[az][threatname]" => ""}
#   rename => {"[az][mitretechniques]" => ""}
    rename => {"[az][relatedUser]" => "user.name"}
#   rename => {"[az][comments]" => ""}
#   rename => {"[az][evidence]" => ""}
  }
  mutate {
    remove_field => ["az"]
  }
  date {
    match => ["event.created" , "ISO8601" ]
    timezone => "GMT"
    target => "event.created"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
    if ![log.original] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.created"]
    }
  }

  date {
    match => ["event.start" , "ISO8601" ]
    timezone => "GMT"
    target => "event.start"
    tag_on_failure => "_dateparsefailure_es"
  }
  if "_dateparsefailure_es" in [tags]  {
    if ![log.original] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.start"]
    }
  }

  date {
    match => ["event.end" , "ISO8601" ]
    timezone => "GMT"
    target => "event.end"
    tag_on_failure => "_dateparsefailure_ee"
  }
  if "_dateparsefailure_es" in [tags]  {
    if ![log.original] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.end"]
    }
  }
  date {
    match => ["event.modified" , "ISO8601" ]
    timezone => "GMT"
    target => "event.modified"
    tag_on_failure => "_dateparsefailure_em"
  }
  if "_dateparsefailure_es" in [tags]  {
    if ![log.original] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.modified", "az"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
