# Copyright [2022] [Cargill, Incorporated.]
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => {
      "[event][module]" => "snowflake"
      "[event][dataset]" => "snowflake.query_history"
      "[log][source][hostname]" => "sql_snowflake_query_history"
    }
    lowercase => [ "message" ]
  }
  json {
    source => "message"
    target => "tmp"
  }
  mutate {
    rename => {
      "[tmp][query_id]" => "[rule][id]"
      "[tmp][query_text]" => "[rule][description]"
      "[tmp][database_name]" => "[database][name]"
      "[tmp][session_id]" => "[event][id]"
      "[tmp][user_name]" => "[user][name]"
      "[tmp][role_name]" => "[user][roles]"
      "[tmp][warehouse_name]" => "[rule][name]"
      "[tmp][query_type]" => "[rule][category]"
      "[tmp][error_code]" => "[error][id]"
      "[tmp][error_message]" => "[error][message]"
      "[tmp][execution_status]" => "[event][outcome]"
      "[tmp][start_time]" => "[event][start]"
      "[tmp][end_time]" => "[event][end]"
      "[tmp][execution_time]" => "[event][duration]"
      "[tmp][bytes_scanned]" => "[host][disk][read][bytes]"
    }
  }
  if [event][duration] {
    mutate {
      convert => { "[event][duration]" => "float" }
    }
    ruby {
      code => "event.set('[event][duration]',event.get('[event][duration]')* 10e6)"
    }
  }
  date {
    match => [ "[event][start]", "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }
  date {
    match => [ "[event][end]", "ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "[event][end]"
    tag_on_failure => "_dateparsefailure_ee"
  }
  mutate {
    remove_field => [ "tmp" ]
  }
}
output {
  pipeline { send_to => [enrichments] }
} 