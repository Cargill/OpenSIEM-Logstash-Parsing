# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "accellion.sft" }
    add_field => { "[observer][vendor]" => "accellion" }
    add_field => { "[observer][product]" => "secure file transfer" }
    add_field => { "[observer][type]" => "sft" }
  }
  if [message] =~ "last message repeated" {
    drop {}
  }
  mutate {
    strip => ["message"]
    gsub => ["message" , '[\"]' , ""]
    gsub => ["message" , '[\"\"]' , ""]
  }
  mutate {
    add_field => { "[event][module]" => "accellion.sft" }
    add_field => { "[event][dataset]" => "accellion.sft" }
    add_field => { "[observer][vendor]" => "accellion" }
    add_field => { "[observer][product]" => "sft" }
    add_field => { "[observer][type]" => "secure file transfer" }
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => ["pri"]
  }
  if [actual_msg] =~ "httpd:" {
    if [actual_msg] !~ "Web" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 1" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[process][name]]}: [%{[[source][port]]}]: (%{[[source][ip]]}) (User:%{[[source][user][email]]}) %{[[event][action]]}"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 2" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[process][name]]}: [%{[[source][port]]}]: (%{[[source][ip]]}) (User:%{[[source][user][email]]}) [%{?[[email][type]]}] %{rest_msg}}"
        }
      }
    }
  }
  else if [actual_msg] =~ "Download:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 3" }
    }
    dissect {
      mapping => {
        actual_msg => "%{[[event][action]]}: [%{[[source][port]]}]: (%{[[source][ip]]}) %{?[[email][description]]} downloaded by %{[[source][user][email]]} (%{[[source][bytes]]} %{?data}, %{?[[download][time]]}) (Type: %{?[[download][type]]}, Location: %{?location}"
      }
    }
  }
  else if [actual_msg] =~ "sendmail" {
    if [actual_msg] =~ " to=" {
      if [actual_msg] =~ "ctladdr=" {
        if [actual_msg] !~ "relay=" {
          mutate {
            add_field => { "[agent][parse_rule]" => "RULE 4" }
          }
          dissect {
            mapping => {
              actual_msg => "%{[[event][action]]}[%{[[source][port]]}]: %{source}: to=%{[[destination][user][email]]}, ctladdr=%{[[server][domain]]}, delay=%{delay}, xdelay=%{xdelay}, mailer=%{?mailer}, pri=%{pri}, dsn=%{?[[dsn][id]]}, stat=%{[[event][action]]}"
            }
          }
        }
        else {
          mutate {
            add_field => { "[agent][parse_rule]" => "RULE 5" }
          }
          dissect {
            mapping => {
              actual_msg => "%{[[event][action]]}[%{[[source][port]]}]: %{source}: to=%{[[destination][user][email]]}, ctladdr=%{[[server][domain]]}, delay=%{delay}, xdelay=%{xdelay}, mailer=%{?mailer}, pri=%{pri}, relay=%{[[observer][hostname]]}, dsn=%{?[[dsn][id]]}, stat=%{[[event][action]]}"
            }
          }
        }
      }
      else {
        mutate {
          add_field => { "[agent][parse_rule]" => "RULE 6" }
        }
        dissect {
          mapping => {
            actual_msg => "%{[[event][action]]}[%{[[source][port]]}]: %{source}: to=<%{[[destination][user][email]]}>, delay=%{delay}, xdelay=%{xdelay}, mailer=%{?mailer}, pri=%{pri}, relay=%{[[observer][hostname]]} [%{[[source][ip]]}], dsn=%{?[[dsn][id]]}, stat=%{[[event][action]]} (<%{?id}> [InternalId=%{[[event][id]]}]%{[[rule][description]]})"
          }
        }
      }
    }
    if [actual_msg] =~ "STARTTLS=client" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 7" }
      }
      dissect {
        mapping => {
          actual_msg => "%{[[event][action]]}[%{[[source][port]]}]: STARTTLS=%{?startls}, relay=%{[[observer][hostname]]}, version=%{?[[email][version]]}, verify=%{?version}, cipher=%{[[tls][client][hash][sha256]]}, bits=%{[[source][bytes]]}/%{[[destination][bytes]]}"
        }
      }
    }
    if [actual_msg] =~ "from=" {
      if [actual_msg] !~ " proto=" {
        mutate {
          add_field => { "[agent][parse_rule]" => "RULE 8" }
        }
        dissect {
          mapping => {
            actual_msg => "%{[[event][action]]}[%{[[source][port]]}]: %{[[source][name]]}: from=%{[[source][user][email]]}, size=%{[[source][bytes]]}, class=%{class}, nrcpts=%{nrcpts}, msgid=<%{[[message][id]]}>, relay=%{[[observer][ip]]}"
          }
        }
      }
      else {
        mutate {
          add_field => { "[agent][parse_rule]" => "RULE 9" }
        }
        dissect {
          mapping => {
            actual_msg => "%{[[event][action]]}[%{[[source][port]]}]: %{[[source][name]]}: from=%{[[source][user][email]]}, size=%{[[source][bytes]]}, class=%{class}, nrcpts=%{nrcpts}, msgid=<%{[[message][id]]}>, proto=%{[network][protocol]}, daemon=%{daemon}, relay=%{[[observer][ip]]}"
          }
        }
      }
    }
  }
  mutate {
    gsub => ["[source][user][email]" , "<",""]
    gsub => ["[source][user][email]" , ">",""]
    remove_field => ["source","delay","xdelay","nrcpts","[log][date_time]","actual_msg","rest_msg"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
