# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "cisco" }
    add_field => { "[event][dataset]" => "cisco.mso" }
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  dissect {
    tag_on_failure => "_dissect_failure_1"
    mapping => {
      actual_msg => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} msc-logging-service fluentd: message:%{mso}"
    }
  }
  date {
    match => [ "[event][created]", "MMM dd HH:mm:ss"]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
  }
  # failed logins via user
  if [mso] =~ "failed attempt" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 1"}
    }
    dissect {
      tag_on_failure => "_dissect_failure_2"
      mapping => {
        mso => "%{?date} %{?date} [%{?somedata}] %{?somedata} - User : %{[[user][name]]} %{[[rule][description]]}:%{?repeated_msg}"
      }
    }
  }
  else if [mso] !~ "hostname:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 2"}
    }
    dissect {
      tag_on_failure => "_dissect_failure_3"
      mapping => {
        mso => "%{?date} %{?date} [%{?somedata}] %{?somedata} - %{[[rule][description]]}: %{+[[rule][description]]}: %{+[[rule][description]]}event:%{?repeated_msg}"
      }
    }
  }
  mutate {
    remove_field => ["rest_msg", "mso", "actual_msg"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
