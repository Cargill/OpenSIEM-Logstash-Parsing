input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    strip => ["message"]
  }
  dissect {
    mapping => {
      message => "%{log.date} {%{?data}} <%{event.severity_name}>%{rest_msg}"
    }
  }
  if [message] =~ "DBUG" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 1 (dropped)" }
    }
    drop {}
  }
  if [rest_msg] =~ "httpd" and [rest_msg] =~ "auth token request" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 2" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{?data} [%{?data} %{source.ip}] %{rule.description}"
      }
    }
  }
    # escape forward slash else it would be considered as delimeter
  else if [rest_msg] =~ "I\/O error occurred while writing" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 3" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~ "No members available for pool" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 4" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~ "ICMP error limit reached" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 5" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~ "httpd" and [rest_msg] =~ "AUDIT" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 6" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{?data} - %{?data} %{user.id} %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~  "mcpd" and [rest_msg] =~ "AUDIT" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 7" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{?data}, %{?data} %{user.id} %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~  "monitor status down" or [rest_msg] =~ "monitor status up" or [rest_msg] =~ "SNMP_TRAP" or [rest_msg] =~ " tmm" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 8" }
  }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{?session.id}: %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~  "monitor status up" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 9" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data} %{process.name}[%{process.pid}]: %{?session.id}: %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~ "notice run-parts" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 10" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{destination.address} %{?data}-%{process.name}[%{process.pid}]: %{rule.description}"
      }
    }
  }
  else if [rest_msg] =~ "info logger:" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 11" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.created->} %{+event.created} %{+event.created} %{source.address} %{?data} %{process.name}: [%{?data}] %{source.ip} %{?data} %{?data} %{url.path} %{event.id}"
      }
    }
  }
  date {
    match => ["event.created" , "MMM dd HH:mm:ss"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
  }
  # date {
  #   match => ["event.start" , "MMM dd HH:mm:ss.SSS"]
  # }
  mutate {
    remove_field => ["rest_msg","log.date"]
    # add_field => { "ecs.version" => "1.4" }
    # rename => {"host" => "agent"}
  }
  translate {
    field => "[event.severity_name]"
    destination => "[rule.category]"
    dictionary => {
      "ERRR" => "Security/Failed Activity"
      "INFO" => "Security/Activity"
      "NOTE" => "Security/Activity"
      "WARN" => "Security/Warning"
    }
      fallback => "Others"
  }
}
output {
  pipeline { send_to => [enrichments] }
}