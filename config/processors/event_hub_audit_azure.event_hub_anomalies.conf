# Copyright [2022] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    lowercase => ["message"]
  }
  json{
    source=>"message"
    target=>"tmp"
  }
  
  split{
    field => "[tmp][records]"
  }
  json_encode{
    source=>"tmp"
    target => "message"
  }
  mutate {
    add_field => { "[event][module]" => "azure" }
    add_field => { "[event][dataset]" => "azure.anomalies" }
    add_field => { "[log][source][hostname]" => "%{[tmp][records][tenantid]}" }
  }
  mutate{
    rename => {
      "[tmp][records][username]" => "[user][name]"
      "[tmp][records][userprincipalname]" => "[user][email]"
      "[tmp][records][userinsights][accountdisplayname]" => "[user][full_name]"
      "[tmp][records][userinsights][accountdomain]" => "[user][domain]"
      "[tmp][records][userinsights][accountobjectid]" => "[user][id]"
      "[tmp][records][timegenerated]" => "[event][created]"
      "[tmp][records][starttime]" => "[event][start]"
      "[tmp][records][endtime]" => "[event][end]"
      "[tmp][records][rulename]" => "[rule][name]"
      "[tmp][records][ruleid]" => "[rule][id]"
      "[tmp][records][extendedlinks][label]" => "[event][kind]"
      "[tmp][records][deviceinsights][useragentfamily]" => "[user_agent][device][name]"
      "[tmp][records][entities][address]" => "[source][ip]"
      "[tmp][records][anomalydetails][score]" => "[event][risk_score]"
    }
  }
  if [tmp][records][activityinsights][actionuncommonlyperformedbyuser] {
    mutate{
      add_tag => [ "actionuncommonlyperformedbyuser" ]
    }
  }
  if [tmp][records][activityinsights][unusualnumberofaadconditionalaccessfailures] {
    mutate{
      add_tag => [ "unusualnumberofaadconditionalaccessfailures" ]
    }
  }
  if [tmp][records][activityinsights][unusualnumberoffailedsigninofthisuser] {
    mutate{
      add_tag => [ "unusualnumberoffailedsigninofthisuser" ]
    }
  }
  if [tmp][records][tactics][0] != '' {
    mutate{
      rename =>{
        "[tmp][records][tactics]" => "[threat][tactic][name]"
      }
    }
  }
  if [tmp][records][techniques][0] != '' {
    mutate{
      rename =>{
        "[tmp][records][techniques]" => "[threat][technique][id]"
      }
    }
  }
  date {
    match => [ "[event][created]", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_es"
  }
  date {
    match => [ "[event][start]", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][start]"
    tag_on_failure => "_dateparsefailure_es"
  }
  date {
    match => [ "[event][end]", "ISO8601" ]
    timezone => "GMT"
    locale => "en"
    target => "[event][end]"
    tag_on_failure => "_dateparsefailure_ee"
  }
  mutate{
    remove_field => ["tmp"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}