# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "cisco.waas" }
    add_field => { "[event][dataset]" => "cisco.waas" }
    add_field => { "[observer][vendor]" => "cisco" }
    add_field => { "[observer][product]" => "cisco.waas" }
    add_field => { "[observer][type]" => "wan_accelerator" }
  }
  mutate {
    strip => ["message"]
    gsub => [ "message", "  ", " " ]
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  dissect {
    tag_on_failure => "_dissectfailure"
    mapping => {
      actual_msg => "%{[[event][created]]} %{+[[event][created]]} %{+[[event][created]]} %{+[[event][created]]} %{[[service][type]]}: %{[[event][code]]}: %{rest_msg}"
    }
  }
  mutate {
    lowercase => [ "rest_msg" ]
  }
  if [rest_msg] =~ "authentication failure" {
    mutate {
      add_field => { "[agent][parse_rule]" => "rule 1" }
    }
    dissect {
      tag_on_failure => "_dissectfailure_rule_1"
      mapping => {
        rest_msg => "%{[[service][type]]}: %{[[event][action]]}; logname=%{[[user][name]]} uid=%{[[user][id]]} %{?data} rhost=%{[[source][ip]]}"
      }
    }
  } else if [rest_msg] =~ "packet flags are incorrect" {
    mutate {
      add_field => { "[agent][parse_rule]" => "rule 2" }
    }
    dissect {
      tag_on_failure => "_dissectfailure_rule_2"
      mapping => {
        rest_msg => "%{[[source][ip]]}:%{[[source][port]]} - %{[[destination][ip]]}:%{[[destination][port]]} - %{[[rule][description]]}"
      }
    }
  }
  else  {
    mutate {
      add_field => { "[agent][parse_rule]" => "other" }
    }
    dissect {
      tag_on_failure => "_dissectfailure_other"
      mapping => {
        rest_msg => "%{[[source][ip]]}:%{[[source][port]]} - %{[[destination][ip]]}:%{[[destination][port]]} - %{[[rule][description]]}"
      }
    }
  }
  # [event][created] = "2021 jan 5 15:33:28"
    date {
      match => ["[event][created]","yyyy MMM d HH:mm:ss"]
      timezone => "GMT"
      locale => "en"
      target => "[event][created]"
      tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
      if ![log][original] {
    mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][created]"]
    }    
  }
  mutate {
    remove_field => ["rest_msg", "actual_msg"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
