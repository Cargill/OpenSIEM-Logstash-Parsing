# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "symantec.endpoint" }
    add_field => { "[event][dataset]" => "symantec" }
    add_field => { "[observer][vendor]" => "symantec" }
    add_field => { "[observer][product]" => "symantec.endpoint" }
    add_field => { "[observer][type]" => "endpoint protection" }
  }
  mutate {
    strip => ["message"]
    gsub => ["message" ,'[\"]',""]
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  # tcp logs
  if [actual_msg] =~ "Site: Prod_DMZ" {
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[host][hostname]]},%{?data}: %{desc},%{rest_msg}"
      }
    }
    kv {
      source => "rest_msg"
      value_split => ":"
      field_split => ","
      target => "tcp-sepm"
    }
    mutate {
      rename => {"[tcp-sepm][Event Description]" => "[rule][description]"}
      rename => {"[tcp-sepm][Server Name]" => "[observer][name]"}
      rename => {"[tcp-sepm][Admin]" => "[user][name]"}
      rename => {"[tcp-sepm][Domain Name]" => "[host][domain]"}
      remove_field => ["[tcp-sepm]","rest_msg"]
    }
  }
  # Agent Activity logs
  else if [actual_msg] =~ "Site:" and [actual_msg] !~ "Admin:" and [actual_msg] =~ ",Domain:" and [actual_msg] !~ "CIDS Signature ID:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent Activity" }
    }
  }
  # System logs
  else if [actual_msg] =~ "Site:" and [actual_msg] !~ "Admin:" and [actual_msg] !~ ",Domain:" and [actual_msg] !~ "CIDS Signature ID:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "System" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{?data}: %{[[rule][ruleset]]},%{?data}: %{[[host][hostname]]},%{?data}: %{[[event][action]]}"
      }
    }
    if "[" in [event][action] and "]" in [event][action] {
      dissect {
        mapping => {
          "[event][action]" => "%{?data} [%{[[destination][user][email]]}]"
        }
      }
    }
  }
  # Administrative logs
  else if [actual_msg] =~ "Site:" and [actual_msg] =~ "Admin:" and [actual_msg] !~ "CIDS Signature ID:" and [actual_msg] !~ "Administrator log on succeeded" {
      mutate {
        add_field => { "[agent][parse_rule]" => "Administrative" }
      }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{?data}: %{[[rule][ruleset]]},%{?data}: %{[[host][hostname]]},%{?data}: %{[[host][domain]]},Admin: %{[[user][name]]},%{[[rule][description]]}"
      }
    }
    mutate {
      add_field => {
        "[rule][category]" => "Audit/Information"
      }
    }
  }
  # Admin
  else if [actual_msg] =~ "Site:" and [actual_msg] =~ "Admin:" and [actual_msg] !~ "CIDS Signature ID:" and [actual_msg] =~ "Administrator log on succeeded" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Admin" }
    }
  }
  # Agent Behavior logs
  else if [actual_msg] =~ "Device ID:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent Behavior" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[host][hostname]]},%{[[source][ip]]},%{[[event][action]]},%{desc_temp},%{[[event][name]]},Begin: %{[[event][start]]},%{?data}: %{[[event][end]]},Rule: %{[[rule][name]]},%{[[process][pid]]},%{[[process][name]]},%{[[process][thread][id]]},%{[[process][thread][name]]},%{[[file][path]]},%{?data}: %{[[user][name]]},%{?data}: %{[[host][domain]]},Action Type: %{[[event][code]]},File size (bytes): %{[[file][size]]},%{[[file][device]]}"
      }
    }
    if [desc_temp] =~ "MD5" {
      grok {
        match => { "desc_temp" => ".*?MD5=(?<md5>.*?)$" }
        timeout_millis => 500
      }
      mutate {
        rename => {"md5" => "process_hash_md5"}
        rename => {"desc_temp" => "[rule][description]"}
      }
      if [process_hash_md5] {
        if [process_hash_md5] =~ " - " and [process_hash_md5] =~ "=" {
          dissect  {
            mapping => {
              process_hash_md5 => "%{[[process][hash][md5]]} - %{?data}"
            }
          }
          mutate {
            remove_field => ["process_hash_md5"]
          }
        }
        else {
          mutate {
            rename => {"process_hash_md5" => "[process][hash][md5]"}
          }
        }
      }
    } else if [desc_temp] =~ "SHA256" {
      grok {
        match => { "desc_temp" => ".*?SHA256=(?<md5>.*?)$" }
        timeout_millis => 500
      }
      mutate {
        rename => {"md5" => "[process][hash][sha256]"}
        rename => {"desc_temp" => "[rule][description]"}
      }
    }
  }
  # Agent Scan logs
  else if [actual_msg] =~ "Scan ID:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent Scan" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]} %{?data}: Scan ID: %{[[[event][id]]},Begin: %{[[event][start]]},%{?data}: %{[[event][end]]},%{[[event][action]]},Duration (seconds): %{[[event][duration]]},User1: %{[[source][user][name]]},User2: %{[[destination][user][name]]},%{[[event][name]]},%{[[event][code]]},Command: %{[[rule][name]]},Threats: %{?no_of_threats},Infected: %{?data},Total files: %{?total_files},Omitted: %{?omitted_files},Computer: %{[[host][hostname]]},IP Address: %{[[host][ip]]},%{?data}: %{[[host][domain]]},%{?data}: %{[[rule][ruleset]]},%{?data}: %{?[[server][address]]}"
      }
    }
  }
  # Agent Security logs
  else if [actual_msg] =~ "CIDS Signature ID:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent Security" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[host][hostname]]},%{?data}: %{desc},%{somedata}"
      }
    }
    kv {
      source => "somedata"
      value_split => ":"
      field_split => ","
      target => "sepm"
    }
    if [desc] =~ "Requirement:" {
      grok {
        match => { "desc" => "(?<[[event][name]]>.*?) Requirement: '(?<[rule][name]>.*?)' (?<[event][action]>.*?) "}
        timeout_millis => 500
      }
    }
    else {
      mutate {
        rename => {"desc" => "[[event][name]]" }
      }
    }
  }
  # Agent System logs
  else if [actual_msg] =~ "Event time:" and [actual_msg] !~ ",Certificate serial number:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent System" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[source][address]]},Category: %{[[rule][uuid]]},%{[[event][provider]]},%{[[rule][description]]},Event time: %{[[event][start]]},Group Name: %{[[rule][ruleset]]}"

      }
    }
    if [source][address] {
      mutate {
        copy => {"[source][address]" => "[host][hostname]"}
      }
    }
  }
  # Agent Risk logs
  else if [actual_msg] =~ "Signing timestamp:" and [actual_msg] !~ ",Detection type:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent Risk" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[event][name]]},%{somedata}"
      }
    }
    kv {
      source => "somedata"
      value_split => ":"
      field_split => ","
      target => "sepm"
    }
  }
  # Agent Proactive detection logs(SONAR)
  else if [actual_msg] =~ ",Detection type:" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Agent Proactive detection logs(SONAR)" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[event][action]]},%{somedata}Detection Submissions %{?date},%{+somedata},Occurrences: %{?data},%{[[file][path]]},,%{+somedata}"
      }
    }
    kv {
      source => "somedata"
      value_split => ":"
      field_split => ","
      target => "sepm"
    }

    mutate {
      rename => {"[sepm][Risk Level]" => "[event][severity_name]"}
      rename => {"[sepm][Detection type]" => "[rule][name]"}
      rename => {"[sepm][Certificate issuer]" => "[tls][server][issuer]"}
      rename => {"[sepm][Certificate signer]" => "[tls][server][certificate_chain]"}
      rename => {"[sepm][Application name]" => "[tls][server][subject]"}
      rename => {"[sepm][Certificate thumbprint]" => "[tls][server][hash][md5]"}
    }
  }
  else if [actual_msg] =~ "konspol" {
  # konspol joint venture has different format
    mutate {
      add_field => { "[agent][parse_rule]" => "konspol jv" }
    }
    dissect {
      mapping => {
        "actual_msg" => "%{[[event][created]]->} %{+[[event][created]]} %{+[[event][created]]} %{[[observer][name]]} %{?data}: %{[[host][hostname]]},%{?data},%{[[rule][name]]},event description: %{[[rule][description]]},event time: %{[[event][start]]},group name: %{[[rule][ruleset]]}"
      }
    }
    if [rule][description] =~ ".*?:" {
      grok {
        match => { "[rule][description]" => ".*?'(?<[file][path]>[a-zA-Z]:.*?)'"}
        timeout_millis => 500
      }
    }
   } else {
    mutate {
      add_field => { "[agent][parse_rule]" => "other" }
    }
  }
  if [sepm][Hash type] == "MD-5" or [sepm][Hash type] == "MD5" {
    mutate {rename => {"[sepm][Application hash]" => "[file][hash][md5]"}}
  } else if [sepm][Hash type] == "SHA-1" or [sepm][Hash type] == "SHA1" {
    mutate {rename => {"[sepm][Application hash]" => "[file][hash][sha1]"}}
  } else if [sepm][Hash type] == "SHA-256" or [sepm][Hash type] == "SHA256" or [sepm][Hash type] == "SHA2" {
    mutate {rename => {"[sepm][Application hash]" => "[file][hash][sha256]"}}
  } else if [sepm][Hash type] == "SHA-512" {
    mutate {rename => {"[sepm][Application hash]" => "[file][hash][sha512]"}}
  }

  ## For Agent Risk remove null fields ####
  if [url][full] == "null" {
    mutate { remove_field => ["[url][full]"] }
  }
  if [user][name] == "null" {
    mutate { remove_field => ["[user][name]"] }
  }
  if [url][domain] == "null" {
    mutate { remove_field => ["[url][domain]"] }
  }

  ## For Agent Security
  if [sepm][Application] =~ "\w+" {
    mutate {rename => {"[sepm][Application]" => "[process][name]"}}
  } else {
    mutate { rename => {"[sepm][Application]" => "[process][path]"}}
  }

  if [sepm][Begin] {
    mutate {
      rename => {"[sepm][Begin]" => "[event][start]"}
    }
  }
  if [sepm][End Time] {
    mutate {
      rename => {"[sepm][End Time]" => "[event][end]"}
    }
  }
  if [somedata] and [somedata] =~ "Remote Host MAC:" {
    dissect {
      mapping => {
        somedata => "%{?data}Remote Host MAC:%{?data},%{[[network][direction]]},%{?data}"
      }
    }
  }
  mutate {
    rename => {"[sepm][Location]" => "[rule][ruleset]"}
    rename => {"[sepm][Local Host IP]" => "[destination][ip]"}
    rename => {"[sepm][Local Host MAC]" => "[destination][mac]"}
    rename => {"[sepm][Remote Host MAC]" => "[source][mac]"}
    rename => {"[sepm][Remote Port]" => "[source][port]"}
    rename => {"[sepm][Domain Name]" => "[host][domain]"}
    rename => {"[sepm][Local Port]" => "[destination][port]"}
    rename => {"[sepm][User Name]" => "[host][user][name]"}
    rename => {"[sepm][Remote Host IP]" => "[source][ip]"}
    # Might need a if for hash i.e. Process or file like if [file][path]
    rename => {"[sepm][SHA-256]" => "[file][hash][sha256]"}
    rename => {"[sepm][Intrusion URL]" => "[url][full]"}
    rename => {"[sepm][CIDS Signature SubID]" => "[rule][uuid]"}
    rename => {"[sepm][CIDS Signature ID]" => "[rule][id]"}
    rename => {"[sepm][Server Name]" => "[observer][name]"}
    rename => {"[sepm][Computer name]" => "[host][hostname]"}
    rename => {"[sepm][File path]" => "[file][path]"}
    rename => {"[sepm][IP Address]" => "[host][ip]"}
    rename => {"[sepm][Actual action]" => "[event][action]"}
    rename => {"[sepm][Web domain]" => "[url][domain]"}
    rename => {"[sepm][Download site]" => "[url][full]"}
    rename => {"[sepm][Downloaded by]" => "[process][name]"}
    rename => {"[sepm][File size (bytes)]" => "[file][size]"}
    rename => {"[sepm][Source Computer Name]" => "[source][address]"}
    rename => {"[sepm][Source Computer IP]" => "[source][ip]"}
    rename => {"[sepm][Group Name]" => "[event][dataset]"}
    rename => {"[sepm][Source]" => "[log][logger]"}
    rename => {"[sepm][Disposition]" => "[error][type]"}
    remove_field => ["[log][date_time]", "[event][created]", "[received][date_time]", "actual_msg"]
  }

  if [sepm][MD-5] and [sepm][MD5] {
    mutate {
      rename => {"[sepm][MD-5]" => "[file][hash][md5]"}
      update => {"[file][hash][md5]" => "%{[[sepm][MD5]]}"}
    }
  }
  else {
    mutate {
      rename => {"[sepm][MD-5]" => "[file][hash][md5]"}
      rename => {"[sepm][MD5]" => "[file][hash][md5]"}
    }
  }

  if [sepm][Category type] and [sepm][Category set] {
    mutate {
      rename => {"[sepm][Category type]" => "[rule][category]"}
      update => {"[rule][category]" => "%{[[sepm][Category set]]}"}
    }
  }
  else {
    mutate {
      rename => {"[sepm][Category type]" => "[rule][category]"}
      rename => {"[sepm][Category set]" => "[rule][category]"}
    }
  }

  if [sepm][CIDS Signature string] and [sepm][Risk name] {
    mutate {
      rename => {"[sepm][CIDS Signature string]" => "[rule][name]"}
      update => {"[rule][name]" => "%{[[sepm][Risk name]]}"}
    }
  }
  else {
    mutate {
      rename => {"[sepm][CIDS Signature string]" => "[rule][name]"}
      rename => {"[sepm][Risk name]" => "[rule][name]"}
    }
  }

  mutate {
    remove_field => ["somedata", "desc", "Hash type", "Risk type", "[sepm]", "desc_temp", "md5"]
  }

  if [event][start] {
    date {
      match => ["[event][start]" , "yyyy-MM-dd HH:mm:ss"]
      timezone => "GMT"
      locale => "en"
      target => "[event][start]"
      tag_on_failure => "_dateparsefailure_es"
    }
  }
  if [_dateparsefailure_es] in [tags] {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][start]"]
    }
  }
  if [event][end] {
    date {
      match => ["[event][end]" , "yyyy-MM-dd HH:mm:ss"]
      timezone => "GMT"
      locale => "en"
      target => "[event][end]"
      tag_on_failure => "_dateparsefailure_ee"
    }
  }
  if [_dateparsefailure_ee] in [tags] {
    if ![log][original] {
      mutate {
        copy => { "message" => "[log][original]" }
      }
    }
    mutate {
      remove_field => ["[event][end]"]
    }
  }
  if [event][name] {
    mutate {
      rename => {"[event][name]" => "[rule][description]"}
    }
  }
  mutate {
    lowercase => [ "[rule][name]", "[event][action]", "[file][path]", "[process][path]" ]
	}
  if [user][name] == "Removable Files Portal" {
	  mutate {remove_field => ["[user][name]"]}
  }
  # Do not remove this, due to internal need.
  if [host][hostname] and ([host][hostname] != "" or [host][hostname][0] != "" ){
    mutate {
      copy => { "[host][hostname]" => "[host][name]" }
    }
  }
  if [rule][description] =~ "^.*?SID:.*?Audit:.*?" {
    mutate {
      add_field => { "[rule][category]" => "ntp" }
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
