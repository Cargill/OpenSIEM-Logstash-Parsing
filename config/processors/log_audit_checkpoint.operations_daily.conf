input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "event.module" => "checkpoint" }
    add_field => { "event.dataset" => "checkpoint.audit_logs" }
    add_field => { "observer.vendor" => "checkpoint" }
    add_field => { "observer.product" => "checkpoint.firewall" }
    add_field => { "observer.type" => "firewall" }
  } 
  
  if [agent.type] == "logstash" { 
    grok {
      tag_on_failure => "_parsefailure_header"
      match => { "message" => "(\<(?<pri>\d+)\>( )?)?(?<rest_msg>.*?)$" }
    }

  } else {
  ### Filebeats udp or tcp in
    grok {
      tag_on_failure => "_parsefailure_header"
      match => { "message" => ".*?\{name=.*?} (\<(?<pri>\d+)\>( )?)?(?<rest_msg>.*?)$" }
    }
  }
  syslog_pri {
    syslog_pri_field_name => "pri"
  }
  
  if [rest_msg] =~ "authentication failure" {
    
    grok {
      tag_on_failure => "_parsefailure_auth"
        # "rest_msg" => "2021 feb  8 20:51:56 owatonnacan4-sfw authpriv.notice dropbear[5100]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=  user=admin",
        match => { "rest_msg" => "(?<event.created>.*?\d+:\d+:\d+) (?<observer.name>.*?) .*?\): (?<rule.description>.*?);.*?uid=(?<user.id>\d+).*?tty=(?<network.protocol>.*?) .*?user=(?<user.name>.*?)" }
        # %{observer.type}[%{event.id}]: %{pam_unix}(%{?data}): %{rule.description}; %{?data}tty=%{network.protocol} %{?data} user=%{user.name}          
    }
  }
  mutate {
     gsub => [
      "event.created", "  ", " "
    ]
  }
  # 2021 feb  8 20:51:56
  date {
    match => ["event.created" , "yyyy MMM d HH:mm:ss" ]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
    if ![log.orignal] {
      mutate {
        copy => { "message" => "log.original" }
      }
    }
    mutate {
     remove_field => ["event.created"]
    }
  }

  mutate {
    remove_field => ["rest_msg","pri"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}