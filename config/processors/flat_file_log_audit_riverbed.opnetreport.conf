# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "observer.vendor" => "cisco" }
    add_field => { "observer.product" => "cisco riverbed" }
    add_field => { "observer.type" => "flatfile" }
    add_field => { "event.module" => "cisco riverbed opnetreport" }
  }
  if [message] =~ "^2019" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 1" }
    }
    dissect {
      mapping => {
        "message" => "%{date} %{time} %{log.message}"
      }
    }
    mutate {
      add_field => {
        "log.date" => "%{date} %{time}"
      }
    }
    mutate {
      remove_field => ["date" , "time"]
    }
  }
  else if [message] =~ "2019" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 2" }
    }
    mutate {
      gsub => ["message" , "[\r]" , ""]
    }
    dissect {
      mapping => {
        "message" => "%{log.level} [%{network.log},%{event.occured} %{timemsg}: %{day} %{month} %{date} %{time} %{timezone} %{year}]"
      }
    }
    mutate {
      add_field => {
        "log.date" => "%{month}-%{date}-%{year} %{time}"
      }
    }
    date {
      match => ["log.date" , "MMM-dd-yyyy HH:mm:ss"]
      target => "@timestamp"
    }
    mutate {
      remove_field => ["day" , "month" , "year" , "time" , "timemsg" , "date" , "log.date" , "host" ]
    }
  }
  else if [message] =~ "Maintenance" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 3" }
    }
    mutate {
      gsub => ["message" , "[\r]" , ""]
      }
    dissect {
      mapping => {
      "message" => "%{log.level} [%{log.network},%{log.message}"
      }
    }
    mutate {
      remove_field => [ "host" ]
    }
  }
  else if [message] =~ "^log4j" {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 4" }
    }
    dissect {
      mapping => {
        "message" => "%{msg} %{log.message}"
      }
    }
    dissect {
      mapping => {
        "msg" => "%{msg1}:%{log.level}"
      }
    }
    mutate  {
      remove_field => [ "msg1" , "msg" ]

    }
  }
  else {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 5" }
    }
    mutate {
      gsub => ["message" , "[\r]" , ""]
    }
    dissect {
      mapping => {
      "message" => "%{log.level} [%{log.network},%{event.log}: %{file.path}]"
      }
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
