# Copyright [2021] [Cargill, Incorporated.]
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[log][source][hostname]" => "ftp_infoblox_api" }
    add_field => { "[event][module]" => "infoblox" }
    add_field => { "[event][dataset]" => "infoblox.dns" }
  }
  grok {
    match => {
      "message" => [
        "^(?<[event][created]>.*? .*?) client (?<[source][ip]>.*?)#(?<[source][port]>\d+)(:)?( ((?<[network][transport]>\w+):))? (?<[dns][op_code]>\w+): (?<[dns][question][name]>.*?) (?<[dns][question][class]>.*?) (?<[dns][question][type]>\w+) response: (?<[dns][response_code]>.*?) (?<[dns][header_flags]>.*?) (?<dns_tmp>.*?)$",
        "^(?<[event][created]>.*? .*?) client (?<[source][ip]>.*?)#(?<[source][port]>\d+)(:)?( ((?<[network][transport]>\w+):))? (?<[dns][op_code]>\w+): (?<[dns][question][name]>.*?) (?<[dns][question][class]>.*?)( (?<[dns][question][type]>\w+) response: (?<[dns][response_code]>.*?) (?<[dns][header_flags]>.*?)$)",
        "^(?<[event][created]>.*? .*?) client (?<[source][ip]>.*?)#(?<[source][port]>\d+)(:)?( ((?<[network][transport]>\w+):))? (?<[dns][op_code]>\w+): ((\<(?<[dns][question][name]>.*?)\> )|(?<[dns][question][name]>.*?) )(@.*? )?(response: (?<[dns][response_code]>.*?) |(?<[dns][question][class]>.*?) (?<[dns][question][type]>.*?) (?<[dns][header_flags]>.*?) \((?<[dns][resolved_ip]>.*?)\))"
      ]
    }
  }
  mutate {
    split => { "dns_tmp" => ";" }
  }
  mutate {
    strip => ["dns_tmp"]
  }
  grok {
    match => {
      "dns_tmp" => [
      "^(?<[dns][answers][data]>.*?) (?<[dns][id]>\d+) (?<[dns][answers][class]>.*?) (?<[dns][answers][type]>.*?) (?<[dns][answers][name]>.*)(\.|$)" 
      ]
    }
  }
  mutate {
    copy => { "[dns][question][name]" => "[url][full]" }
    remove_field => [ "response", "host", "path", "dns_tmp" ]
  }
  # "[event][created]" => "08-Jul-2022 13:11:32.893",
  date {
    match => ["[event][created]", "dd-MMM-yyyy HH:mm:ss.SSS"]
    timezone => "GMT"
    locale => "ec"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags] {
    mutate { 
     remove_field => ["[event][created]" ]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
