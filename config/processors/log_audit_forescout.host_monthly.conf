input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  dissect {
    mapping => {
      "message" => "%{?log.date} %{?data} %{somedata}"
    }
  }
  kv {
    source => "somedata"
    value_split => ": "
    field_split => ","
    target => "fsh"
  }
  ##
  mutate {
    rename => {"[fsh][connectivity]" => "event.action" }
    rename => {"[fsh][host_name]" => "host.hostname" }
    rename => {"[fsh][host_ip]" => "host.ip" }
    rename => {"[fsh][vendor_and_model]" => "host.type" }
    rename => {"[fsh][nic_vendor]" => "host.os.family" }
    rename => {"[fsh][operating_system]" => "host.os.platform" }
    rename => {"[fsh][mac_address]" => "host.mac" }
    rename => {"[fsh][segment]" => "network.name" }
    rename => {"[fsh][switch_ip_and_port_name]" => "observer.hostname" }
    rename => {"[fsh][wlan_ap_name]" => "observer.name" }
    rename => {"[fsh][function]" => "rule.description" }
  }
  # Do not remove this, due to internal need.
  mutate {
    copy => { "host.hostname" => "host.name" }
  }
  mutate {
    lowercase => ["host.hostname"]
  }

  if [host.ip] and [host.ip] == "Unknown" {
    mutate {
      remove_field => ["host.ip"]
    }
  }

  if [host.mac] and [host.mac] == "Unknown" {
    mutate {
      remove_field => ["host.mac"]
    }
  }

  mutate {
    remove_field => ["[fsh]", "log.date", "somedata"]
  }

  
}
output {
  pipeline { send_to => [enrichments] }
}