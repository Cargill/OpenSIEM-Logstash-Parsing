# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  ### McAfee MCP API, tested against API v1-v13
  mutate {
    add_field => { "[event][module]" => "skyhigh" }
    add_field => { "[event][dataset]" => "skyhigh.scp" }
    copy => { "message" => "[event][original]" }
    strip => ["message"]
  }
  if ![message] or [message] == "" {
    drop {}
  }
  if [message] !~ "^test message for.*?$" {
      csv {
        source => "message"
        columns => ["num","usr","[source][nat][ip]","[http][request][method]","[destination][bytes]","[source][bytes]","[url][domain]","[url][path]","[event][action]","[rule][name]","request_timestamp_epoch","[event][time]","[url][scheme]","[rule][category]","[http][request][body][content]","[service][name]","[event][severity_name]", "[rule][uuid]", "[http][response][status_code]", "[source][ip]", "[rule][description]", "[rule][ruleset]", "[user_agent][name]", "[user_agent][version]", "[user_agent][original]", "[process][name]", "[destination][ip]", "[destination][port]", "[observer][geo][country_iso_code]", "[http][request][referrer]", "[ssl_scanned]", "[av_scanned_up]", "[av_scanned_down]", "[rbi]", "[dlp]", "[source][address]", "[file][name]", "[observer][egress][ip]", "[observer][ingress][ip]", "[source][nat][port]", "[event][risk_score]", "discarded_host", "[tls][client][x509][version_number]", "[tls][version]", "[tmp][filed]", "[service][id]", "[tmp][duration_1]", "[tmp][duration_2]",  "[tmp][duration_3]",  "[tmp][duration_4]" ]
        convert => {
          "[destination][bytes]" => "integer"
          "[source][bytes]" => "integer"
        }
        skip_empty_columns => true
        skip_empty_rows => true
      }
      # row empty
      if "_csvskippedemptyfield" in [tags] {
          drop {}
      }

      mutate {
        split => { "[rule][category]" => ", " }
      }
      # Message is csv, this creates [event][original] to include fields names
      mutate {
        add_field => { "[event][original]" => "request_timestamp_epoch: %{[event][time]}, num: %{num}, usr: %{usr}, source.nat.ip: %{[source][ip]}, http.request.method: %{[http][request][method]}, destination.bytes: %{[destination][bytes]}, source.bytes: %{[source][bytes]}, url.domain: %{[url][domain]}, url.path: %{[url][path]}, event.action: %{[event][action]}, rule.name: %{[rule][name]}, request_timestamp_epoch: %{request_timestamp_epoch}, url.scheme: %{[url][scheme]}, rule.category: %{[rule][category]}, http.request.body.content: %{[http][request][body][content]}, service.name: %{[network][application]}, event.severity_name: %{[event][severity_name]}, last_rule: %{[rule][uuid]}, http_status_code: %{[http][response][status_code]}, client_ip: %{[source][nat][ip]}, location: %{[rule][description]}, block_reason: %{[rule][ruleset]}, user_agent_comment: %{[user_agent][version]}, user_agent_product: %{[user_agent][name]}, user_agent_version: %{[user_agent][original]}, process_name: %{[process][name]}, destination_ip: %{[destination][ip]}, destination_port: %{[destination][port]}, event.risk_score: %{[event][risk_score]}, discarded_host: %{discarded_host}, tls.client.x509.version_number: %{[tls][client][x509][version_number]}, tls.version: %{[tls][version]}" }
      }
      mutate {
        gsub => [ "[event][original]", "%\{.*?}(,)? ", "" ]
        gsub => [ "[event][original]", "%\{.*?}", "" ]
      }
      
      if [usr] and [usr] =~ ".*?\\.*?" {
        grok {
          match => { "usr" => "(?<[user][domain]>.*?)\\(?<[user][name]>.*?)$" }
          timeout_millis => 500
        }
      } else {
        mutate {
          rename => { "[usr]" => "[user][name]" }
        }
      }
      if [source][ip] and [source][ip] =~ "source_ip" {
        mutate {
          remove_field => ["[source][ip]"]
        }
      }
      # Create [url][full] 
      mutate {
        add_field => { "[url][full]" => "%{[[url][scheme]]}://%{[[url][domain]]}%{[[url][path]]}" }
      }
      date {
        match => [ "request_timestamp_epoch", "UNIX" ]
        timezone => "GMT"
        locale => "en"
        target => "[event][created]"
      }
      mutate {
        add_field => { "[cloud][provider]" => "mcafee" }
        #add_field => { "[event][module]" => "mcafee" }
        #add_field => { "[event][dataset]" => "mcafee.mcp" }
        add_field => { "[log][source][hostname]" => "api_mcp"}
      }
      mutate {
        lowercase => [ "[event][action]" ]
      }
      if [event][action] =~ "observed" {
        mutate {
          replace => { "[event][action]" => "allowed" }
        }
      }
      if [event][action] =~ "denied" {
        mutate {
          replace => { "[event][action]" => "denied" }
        }
      }
      mutate {
        add_field => { "[service][state]" => "ssl_scanned: %{ssl_scanned}" }
      }
      if [av_scanned_up] {
        mutate {
          add_field => { "[service][state]" => "av_scanned_up: %{av_scanned_up}" }
        }
      }
      if [av_scanned_down] {
        mutate {
          add_field => { "[service][state]" => "av_scanned_down: %{av_scanned_down}" }
        }
      }
      if [rbi] {
        mutate {
          add_field => { "[service][state]" => "rbi: %{rbi}" }
        }
      }
      if [dlp] {
        mutate {
          add_field => { "[service][state]" => "dlp: %{dlp}" }
        }
      }
      
  }
  mutate {
    add_field => { "[event][code]" => "%{[tmp][duration_1]}, %{[tmp][duration_2]}, %{[tmp][duration_3]}, %{[tmp][duration_4]}" }
  }
  translate {
    source => "[service][id]"
    target => "[tmp_j]"
    dictionary => {
      '122'  => '{ "[observer][geo][city_name]": "Montreal", "[observer][geo][country_name]": "Canada" }'
      '138'  => '{ "[observer][geo][city_name]": "n/a", "[observer][geo][country_name]": "n/a" }'
      '144'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '145'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '148'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '153'  => '{ "[observer][geo][city_name]": "Canada", "[observer][geo][country_name]": "Canada" }'
      '155'  => '{ "[observer][geo][city_name]": "Montreal", "[observer][geo][country_name]": "Canada" }'
      '156'  => '{ "[observer][geo][city_name]": "Toronto", "[observer][geo][country_name]": "Canada" }'
      '199'  => '{ "[observer][geo][city_name]": "Auckland", "[observer][geo][country_name]": "New Zealand" }'
      '200'  => '{ "[observer][geo][city_name]": "Auckland", "[observer][geo][country_name]": "New Zealand" }'
      '201'  => '{ "[observer][geo][city_name]": "Hong Kong", "[observer][geo][country_name]": "Hong Kong" }'
      '202'  => '{ "[observer][geo][city_name]": "Hong Kong", "[observer][geo][country_name]": "Hong Kong" }'
      '232'  => '{ "[observer][geo][city_name]": "Los Angeles", "[observer][geo][country_name]": "US" }'
      'XXX'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '233'  => '{ "[observer][geo][city_name]": "Santa Clara", "[observer][geo][country_name]": "US" }'
      '236'  => '{ "[observer][geo][city_name]": "Frankfurt", "[observer][geo][country_name]": "Germany" }'
      '237'  => '{ "[observer][geo][city_name]": "Frankfurt", "[observer][geo][country_name]": "Germany" }'
      '238'  => '{ "[observer][geo][city_name]": "Frankfurt", "[observer][geo][country_name]": "Germany" }'
      '240'  => '{ "[observer][geo][city_name]": "New York", "[observer][geo][country_name]": "US" }'
      '241'  => '{ "[observer][geo][city_name]": "New Jersey", "[observer][geo][country_name]": "US" }'
      '242'  => '{ "[observer][geo][city_name]": "Amsterdam", "[observer][geo][country_name]": "Netherlands" }'
      '243'  => '{ "[observer][geo][city_name]": "Manchester", "[observer][geo][country_name]": "UK" }'
      '244'  => '{ "[observer][geo][city_name]": "Dublin", "[observer][geo][country_name]": "Ireland" }'
      '251'  => '{ "[observer][geo][city_name]": "n/a", "[observer][geo][country_name]": "n/a" }'
      '256'  => '{ "[observer][geo][city_name]": "Miami", "[observer][geo][country_name]": "US" }'
      '257'  => '{ "[observer][geo][city_name]": "Miami", "[observer][geo][country_name]": "US" }'
      '258'  => '{ "[observer][geo][city_name]": "Dallas", "[observer][geo][country_name]": "US" }'
      '259'  => '{ "[observer][geo][city_name]": "Chicago", "[observer][geo][country_name]": "US" }'
      '266'  => '{ "[observer][geo][city_name]": "Bogota", "[observer][geo][country_name]": "Colombia" }'
      '275'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '276'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '277'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '281'  => '{ "[observer][geo][city_name]": "Tokyo", "[observer][geo][country_name]": "Japan" }'
      '282'  => '{ "[observer][geo][city_name]": "Osaka", "[observer][geo][country_name]": "Japan" }'
      '283'  => '{ "[observer][geo][city_name]": "Syndey", "[observer][geo][country_name]": "Australia" }'
      '284'  => '{ "[observer][geo][city_name]": "Singapore", "[observer][geo][country_name]": "Singapore" }'
      '285'  => '{ "[observer][geo][city_name]": "Singapore", "[observer][geo][country_name]": "Singapore" }'
      '286'  => '{ "[observer][geo][city_name]": "Hong Kong", "[observer][geo][country_name]": "Hong Kong" }'
      '287'  => '{ "[observer][geo][city_name]": "Tokyo", "[observer][geo][country_name]": "Japan" }'
      '293'  => '{ "[observer][geo][city_name]": "Ashburn", "[observer][geo][country_name]": "US" }'
      '294'  => '{ "[observer][geo][city_name]": "Los Angeles", "[observer][geo][country_name]": "US" }'
      '295'  => '{ "[observer][geo][city_name]": "New Jersey II", "[observer][geo][country_name]": "US" }'
      '310'  => '{ "[observer][geo][city_name]": "n/a", "[observer][geo][country_name]": "n/a" }'
      '400'  => '{ "[observer][geo][city_name]": "Oregon", "[observer][geo][country_name]": "US" }'
      '401'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '402'  => '{ "[observer][geo][city_name]": "Dubai", "[observer][geo][country_name]": "UAE" }'
      '403'  => '{ "[observer][geo][city_name]": "Singapore", "[observer][geo][country_name]": "Singapore" }'
      '404'  => '{ "[observer][geo][city_name]": "Seoul", "[observer][geo][country_name]": "Korea" }'
      '405'  => '{ "[observer][geo][city_name]": "Mumbai", "[observer][geo][country_name]": "India" }'
      '406'  => '{ "[observer][geo][city_name]": "Columbus", "[observer][geo][country_name]": "US" }'
      '407'  => '{ "[observer][geo][city_name]": "Stockholm", "[observer][geo][country_name]": "Sweden" }'
      '408'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '410'  => '{ "[observer][geo][city_name]": "Montreal", "[observer][geo][country_name]": "Canada" }'
      '411'  => '{ "[observer][geo][city_name]": "Hong Kong", "[observer][geo][country_name]": "Hong Kong" }'
      '412'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '413'  => '{ "[observer][geo][city_name]": "Canada", "[observer][geo][country_name]": "Canada" }'
      '414'  => '{ "[observer][geo][city_name]": "Hong Kong", "[observer][geo][country_name]": "Hong Kong" }'
      '415'  => '{ "[observer][geo][city_name]": "Singapore", "[observer][geo][country_name]": "Singapore" }'
      '416'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '417'  => '{ "[observer][geo][city_name]": "Paris", "[observer][geo][country_name]": "France" }'
      '418'  => '{ "[observer][geo][city_name]": "London", "[observer][geo][country_name]": "UK" }'
      '419'  => '{ "[observer][geo][city_name]": "Columbus", "[observer][geo][country_name]": "US" }'
      '420'  => '{ "[observer][geo][city_name]": "Paris", "[observer][geo][country_name]": "France" }'
      '421'  => '{ "[observer][geo][city_name]": "Milan", "[observer][geo][country_name]": "Italy" }'
      '422'  => '{ "[observer][geo][city_name]": "Stockholm", "[observer][geo][country_name]": "Sweden" }'
      '423'  => '{ "[observer][geo][city_name]": "Mumbai", "[observer][geo][country_name]": "India" }'
      '424'  => '{ "[observer][geo][city_name]": "N. Virginia", "[observer][geo][country_name]": "US" }'
      '425'  => '{ "[observer][geo][city_name]": "N. Virginia", "[observer][geo][country_name]": "US" }'
      '426'  => '{ "[observer][geo][city_name]": "N. California", "[observer][geo][country_name]": "US" }'
      '427'  => '{ "[obser+H23ver][geo][city_name]": "Columbus", "[observer][geo][country_name]": "US" }'
      '432'  => '{ "[observer][geo][city_name]": "Frankfurt", "[observer][geo][country_name]": "Germany" }'
      '433'  => '{ "[observer][geo][city_name]": "Hong Kong", "[observer][geo][country_name]": "Hong Kong" }'
      '434'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '436'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '437'  => '{ "[observer][geo][city_name]": "Saudi Arabia", "[observer][geo][country_name]": "Saudi Arabia" }'
      '441'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '442'  => '{ "[observer][geo][city_name]": "Mumbai", "[observer][geo][country_name]": "India" }'
      '443'  => '{ "[observer][geo][city_name]": "Manchester", "[observer][geo][country_name]": "UK" }'
      '444'  => '{ "[observer][geo][city_name]": "Sao Paulo", "[observer][geo][country_name]": "Brazil" }'
      '445'  => '{ "[observer][geo][city_name]": "Saudi Arabia", "[observer][geo][country_name]": "Saudi Arabia" }'
      '446'  => '{ "[observer][geo][city_name]": "Syndey", "[observer][geo][country_name]": "Australia" }'
      '447'  => '{ "[observer][geo][city_name]": "Melbourne", "[observer][geo][country_name]": "Australia" }'
      '448'  => '{ "[observer][geo][city_name]": "Melbourne", "[observer][geo][country_name]": "Australia" }'
    }
  }
    json {
      source => "tmp_j"
      target => ""
      tag_on_failure => "_jsonparsefailure_init"
      remove_field => [ "tmp_j" ]
    }  
  mutate {
    # host field is added by file input plugin
    remove_field => [ "tmp", "request_timestamp_epoch", "usr", "num", "[event][time]", "path", "ssl_scanned", "av_scanned_up", "av_scanned_down", "rbi", "dlp", "discarded_host", "[event][original]" ]
    split => { "[event][code]" => "," }
  }
}
output {
  pipeline { send_to => [enrichments] }
}