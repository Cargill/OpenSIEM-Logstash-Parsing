# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[observer][vendor]" => "cisco" }
    add_field => { "[observer][product]" => "cisco riverbed" }
    add_field => { "[observer][type]" => "flatfile" }
    add_field => { "[event][module]" => "cisco riverbed scportal" }
  }
  if [message] =~ "{'" and [message] =~ "appmodel|workflow|environment|monitoring|data_sources" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 1 (to be dropped)" }
    }
    drop {}
  }
  if [message] =~ "{'" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 2" }
    }
    dissect {
      mapping => {
        "message" => "%{hostname} %{[[host][hostname]]},%{?model}: %{?[[model][name]]},%{?objtype}: %{?[[obj][typename]]},%{?product}: %{?[[product][name]]},%{?runtime}: %{?[[runtime][id]]},%{?schema}: %{?[[schema][hash]]},%{?serial}: %{?[[serial][id]]},%{[[source][address]]}: %{?[[source][name]]},%{?systemtime}: %{?[[system][time]]},%{?version}: %{?[[version][id]]}"
      }
    }
  }
  else if [message] =~ "^Start" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 3" }
    }
    dissect {
      mapping => {
        "message" => "%{[[event][action]]} at  %{time} %{?msg4} %{?msg5} %{date}"
      }
    }
    mutate {
      gsub => ["date", "\r" , ""]
      add_field => {
        "[event][start]" => "%{date} %{time}"
      }
    }
  }
  else {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 4" }
    }
    dissect {
      mapping => {
        "message" => "%{[[log][date]]},%{[[process][pid]]} [%{[[rule][category]]}] %{[[log][level]]}  %{[[rule][description]]} "
      }
    }
  }
  date {
    match => [ "[event][start]", "MM/dd/yyyy HH:mm:ss.SS"]
    target => "[event][start]"
  }
  date {
    match => ["[log][date]" , "yyyy-MM-dd HH:mm:ss"]
    target => "@timestamp"
  }
  mutate {
    remove_field => ["[log][date]", "time", "date"]
  }
  
  mutate {
    rename => { "fields.organization.name" => "[organization][name]" }
    rename => { "fields.temp.observerip" => "[observer][name]" }
  }
  # Do not remove this, due to internal need.
  if [host][hostname] and ([host][hostname] != "" or [host][hostname][0] != "" ) {
    mutate {
      copy => { "[host][hostname]" => "[host][name]" }
    }
  }
  mutate {
    rename => {"observerip" => "[log][source][hostname]"}
  }
}
output {
  pipeline { send_to => [enrichments] }
}
