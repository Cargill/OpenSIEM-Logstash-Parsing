# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    gsub => ["message",'[\"]',""]
  }
  syslog_pri {}
  dissect {
    mapping => {
      message => "%{log_time} {%{?data}} %{event.created},%{rest_msg}"
    }
  }
  csv {
    source => "rest_msg"
    target => "exch" 
    columns => ['client_ip', 'client_hostname',  'server_ip', 'server_hostname', 'source_context', 'connector_id', 'source', 'event_id', 'internal_message_id', 'message_id', 'network_message_id', 'recipient_address', 'recipient_status', 'total_bytes', 'recipient_count', 'related_recipient_address', 'reference', 'message_subject', 'sender_address', 'return_path', 'message_info', 'directionality', 'tenant_id', 'original_client_ip', 'original_server_ip', 'custom_data']
    remove_field => [ "logdate" ]
  }
  if [exch][original_client_ip] {
    if [exch][original_client_ip] !~ "[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}" {
      mutate {
        add_field => {"parse rule" => "RULE 2"}
      }
      csv {
        source => "rest_msg"
        target => "exch" 
        columns => ['client_ip', 'client_hostname',  'server_ip', 'server_hostname', 'source_context', 'connector_id','col1','col2','col3','col4' ,'col5','col6','col7' ,'recipient_address', 'recipient_status', 'total_bytes', 'recipient_count', 'related_recipient_address', 'reference', 'message_subject', 'sender_address', 'return_path', 'message_info', 'directionality', 'tenant_id', 'original_client_ip', 'original_server_ip', 'custom_data']
      }
      mutate {
        remove_field =>["[exch][original_client_ip]"]
      }
    }
  }
  mutate {
    gsub => [
      "[exch][custom_data]", "S:", ""
      ]
  }
  if [exch][source_context] =~ "^;" {
    mutate {
      gsub => ["[exch][source_context]",";250",""]
    }
  }
  if [exch][source_context] =~ ";" and [exch][source_context] =~ "=" {
    mutate {
      add_field => {"parse rule" => "RULE 1"}
    }
    kv {
      source => "[exch][source_context]"
      target => "context"
      field_split => ";"
      value_split => "="
    }
  }
  kv {
    source => "[exch][custom_data]"
    target => "custom"
    field_split => ";"
    value_split => "="
  }
  mutate {
    convert => [ "total_bytes", "integer" ]
    convert => [ "recipient_count", "integer" ]
    split => ["[exch][related_recipient_address]", ";"]
    split => ["[exch][recipient_address]", ";"]
  }
  mutate {
    rename => {"syslog_facility_code" => "log.syslog.facility.code"}
    rename => {"syslog_facility" => "log.syslog.facility.name"}
    rename => {"syslog_severity_code" => "log.syslog.severity.code"}
    rename => {"syslog_severity" => "log.syslog.severity.name"}
    rename => {"[custom][AccountForest]" => "user.domain"}
    rename => {"[custom][OriginalFromAddress]" => "source.user.email"}
    rename => {"[exch][event_id]" => "rule.name"}
    rename => {"[exch][recipient_status]" => "event.action"}
    rename => {"[exch][directionality]" => "network.direction"}
    rename => {"[exch][network_message_id]" => "event.code"}
    rename => {"[exch][message_subject]" => "email.subject"}
    rename => {"[exch][total_bytes]" => "source.bytes"}
    rename => {"[exch][original_client_ip]" => "source.ip"}
    rename => {"[exch][sender_address]" => "source.user.email"}
    rename => {"[exch][client_hostname]" => "client.address"}
    rename => {"[exch][client_ip]" => "client.ip"}
    rename => {"[exch][server_hostname]" => "server.address"}
    # rename => {"[exch][return_path]" => "this is email or.."}
    rename => {"[exch][server_ip]" => "server.ip"}
    rename => {"[exch][message_id]" => "event.id"}
    rename => {"[custom][AccountForest]" => "user.domain"}
    rename => {"[custom][OriginalFromAddress]" => "source.user.email"}
  }
  if [exch][recipient_address] and [exch][recipient_address] != "nil" {
    mutate {
        rename => {"[exch][recipient_address]" => "destination.user.email"}
    }
  }
  if [exch][related_recipient_address] and [exch][related_recipient_address]!= "nil" {
    mutate {
        rename => {"[exch][related_recipient_address]" => "destination.user.email"}
    }
  }
  if [log_time] {
    date {
      match => ["log_time" , "ISO8601" ]
      timezone => "GMT"
      target => "event.created"
    }
  }
  mutate {
    remove_field => ["log.date","rest_msg", "[exch][custom_data]","log_time","[custom]","[context]","[exch]"]
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}
