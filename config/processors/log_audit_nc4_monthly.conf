input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { 
      "event.module" => "nc4"
      }
  }
  mutate {
    strip => ["message"]
  }
  xml {
    source => "message"
    target => "nc4"
  }
  mutate {
    rename => {"[nc4][info][0][description][0]" => "rule.description"}
    rename => {"[nc4][info][0][severity][0]" => "event.severity_name"}
    rename => {"[nc4][info][0][category][0]" => "event.category"}
    rename => {"[nc4][info][0][event][0]" => "event.action"}
    rename => {"[nc4][info][0][eventCode][0]" => "event.code"}
    rename => {"[nc4][sender][0]" => "source.user.email"}
    rename => {"[nc4][sent][0]" => "event.created"}
    rename => {"[nc4][xmlns:ns1]" => "url.full"}
    copy => {"[nc4][info][0][area][0][geocode]" => "geo_details" }
    remove_field => ["[nc4]"]
  }
  # what we want in elastic
  # "geo": {
  #   "latitude": 51.80252838,
  #   "longitude": -0.262388915,
  #   "continent_code": "EU",
  #   "country_code3": "GB",
  #   "country_name": "United Kingdom",
  #   "city_name": "Welwyn Garden City",
  #   "ip": "10.129.254.55",
  #   "country_code2": "GB",
  #   "location": {
  #     "lon": -0.262388915,
  #     "lat": 51.80252838
  #   }
  # }
  # what we get from nc4
  # "geo_details" => [
  #     [ 0] "street=25th Ave S & Viking Circle S",
  #     [ 1] "crossstreet=",
  #     [ 2] "city=Fargo",
  #     [ 3] "county=Cass",
  #     [ 4] "district=",
  #     [ 5] "state=ND",
  #     [ 6] "country=United States",
  #     [ 7] "region=North America",
  #     [ 8] "postal=58103",
  #     [ 9] "latitude=46.84335",
  #     [10] "longitude=-96.80673"
  # ],
  dissect {
    mapping => {
      "[geo_details][2]" => "city=%{[geo][city_name]}"
    }
  }
  dissect {
    mapping => {
      "[geo_details][6]" => "country=%{[geo][country_name]}"
    }
  }
  dissect {
    mapping => {
      "[geo_details][9]" => "latitude=%{[geo][latitude]}"
    }
    convert_datatype => {
      "[geo][latitude]" => "float"
    }
  }
  dissect {
    mapping => {
      "[geo_details][10]" => "longitude=%{[geo][longitude]}"
    }
    convert_datatype => {
      "[geo][longitude]" => "float"
    }
  }
  dissect {
    mapping => {
      "[geo_details][7]" => "region=%{[geo][continent_name]}"
    }
  }
  mutate {
    copy =>{"[geo][latitude]" => "[geo][location][lat]"}
    copy =>{"[geo][longitude]" => "[geo][location][lon]"}
    remove_field =>["geo_details"]
  }
  date {
    # 2020-05-12T12:34:45.000-04:00
    match => ["event.created","ISO8601"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}