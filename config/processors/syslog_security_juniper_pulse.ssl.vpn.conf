# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    add_field => { "[event][module]" => "pulse_secure" }
    add_field => { "[event][dataset]" => "pulse_secure.vpn" }
  }
  mutate {
    strip => ["message"]
    gsub => ["message",'\"',"'"]
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }  
  dissect {
    mapping => {
      "actual_msg" => "%{?data} %{[[event][created]]} %{[[source][address]]} PulseSecure: %{?data} %{?data} %{?data} %{?data} %{?data} %{?data} %{?data} %{?data} [%{[[source][ip]]}] %{[[source][user][name]]}(%{group.domain})[%{event_info}] - %{event_description}"
    }
  }
  if [event_description] =~ "System\(\)\[\]" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 1" }
    }
    mutate{
      gsub => [ "event_description", "[\]](?=[^\]]*$)", "x_x;" ]
    }
    if [event_description] =~ "Sending logMessageTrap" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 2" }
      }
      dissect {
        mapping => {
          "event_description" => "Sending logMessageTrap [ logID='%{[[event][id]]}' logType='%{[[event][type]]}' logDescription='%{[[rule][description]]}' x_x;%{?data}"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 3" }
      }
      dissect {
        mapping => {
          "event_description" => "hello%{msg}"
        }
      }
    }
  }
  else if [event_description] =~ "Host Checker policy" and [event_description] =~ "passed on" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 4" }
    }
    if [event_description] =~ "address" and [event_description] =~ "session" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 4 (a)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{[[event][type]]} '%{[[event][action]]}' %{[[event][outcome]]} on host '%{?data}' address '%{[[source][mac]]}'  for user '%{[[server][user][id]]}'  session '%{[[trace][id]]}'%{?data}"
        }
      }
    }
    else if [event_description] =~ "address" and [event_description] != "session" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 4 (a)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{[[event][type]]} '%{[[event][action]]}' %{[[event][outcome]]} on host '%{?data}' address '%{[[source][mac]]}'  for user '%{[[server][user][id]]}'%{?data}"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 4 (b)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{[[event][type]]} '%{[[event][action]]}' %{[[event][outcome]]} on host %{[[destination][ip]]}  for user '%{[[server][user][id]]}'%{?data}"
        }
      }
    }
  }
  else if [event_description] =~ "Host Checker policy" and [event_description] =~ "failed on" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 5" }
    }
    if [event_description] =~ " address " and [event_description] =~ "reason" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 5 (a)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{[[event][type]]} '%{[[event][action]]}' %{[[event][outcome]]} on host '%{?data}' address '%{[[source][mac]]}'  for user '%{[[server][user][id]]}' %{?data} reason '%{[[rule][description]]}' session '%{[[trace][id]]}'%{?data}"
        }
      }
    }
    else if [event_description] =~ "Reason" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 5 (b)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{[[event][type]]} '%{[[event][action]]}' %{[[event][outcome]]} on host %{?data} Reason: '%{[[rule][description]]}'%{?data}"
        }
      }
    }
  }
  else if [event_description] =~ "Received OCSP response" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 6" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{+[[event][code]]} %{?data} '%{[[destination][ip]]}' with url '%{[[url][full]]}', user: '%{?data}'; serial number: '%{?[[device][serial_number]]}'%{?data}"
      }
    }
  }
  else if [event_description] =~ "Sending OCSP request" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 7" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{+[[event][code]]} %{?data} '%{[[source][ip]]}' with url '%{[[url][full]]}'; user: '%{?data}'; serial number: '%{?[[device][serial_number]]}'%{?data}"
      }
    }
  }
  else if [event_description] =~ "OCSP checking successfully passed" or [event_description] =~ "OCSP checking started" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 8" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[event][code]]} %{+[[event][code]]} %{+[[event][code]]} %{+[[event][code]]} %{?data}: '%{?[source][user][name]]} having %{?certificate version} certificate '%{[[tls][client][subject]]}' with serial number: '%{?[[device][serial_number]]}' issued by '%{?issued_by}'%{?data}"
      }
    }
  }
  else if [event_description] =~ "Primary authentication successful" or [event_description] =~ "Primary authentication failed" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 9" }
    }
    mutate {
      add_field => {
        "[rule][description]" => "%{event_description}"
      }
    }
  }
  else if [event_description] =~ "Key Exchange number" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 10" }
    }
    dissect {
      mapping => {
        "event_description" => "Key Exchange number %{?key_exchange_number} occurred for user with NCIP %{[[destination][ip]]}"
      }
    }
  }
  else if [event_description] =~ "VPN Tunneling: User" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 11" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[event][code]]}: User with IP %{[[source][nat][ip]]} connected with %{[[event][action]]}"
      }
    }
  }
  else if [event_description] =~ "VPN Tunneling: Session ended" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 12" }
    }
    if [event_description] == "VPN Tunneling: Session ended for user with IPv4 address" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 12 (a)" }
      }
      dissect {
        mapping => {
          event_description => "%{[[event][code]]}: %{[[event][type]]} with %{[[rule][description]]}"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 12 (b)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]}: %{[[event][type]]}  (session: %{[[trace][id]]}) with IPv4 address %{[[source][nat][ip]]}"
        }
      }
    }
  }
  else if [event_description] =~ "VPN Tunneling: Session started" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 13" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[event][code]]}: %{[[event][type]]}  (session: %{[[trace][id]]}) with IPv4 address %{[[source][nat][ip]]}, hostname %{[[host][name]]}"
      }
    }
  }
  else if [event_description] =~ "User Accounts modified" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 14" }
    }
    if [event_description] !~ "Removed username" and [event_description] =~ "^User" and [event_description] =~ "username" {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 14 (a)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{?data} username %{[[user][id]]} %{?data}"
        }
      }
    }
    else {
      mutate {
        add_field => { "[agent][parse_rule]" => "RULE 14 (b)" }
      }
      dissect {
        mapping => {
          "event_description" => "%{[[event][code]]}. Removed username %{[[source][user][name]]} %{?data}"
        }
      }
    }
  }
  else if [event_description] =~ "Session for user" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 15" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[event][code]]} for user %{[[source][user][name]]} on host %{?data} %{+[[event][code]]}"
      }
    }
  }
  else if [event_description] =~ "Host Checker time out" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE HC-timeout" }
    }
    dissect {
        mapping => {
          "event_description" => "System process detected a %{[[event][code]]} %{+[[event][code]]} %{[[event][type]]} %{+[[event][type]]} on host %{?data}  for user '%{[[server][user][id]]}'%{?data}."
        }
    }
  }
  else if [event_description] =~ "(?i)Login succeeded for" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE Login" }
    }
    if [event_description] =~ "Agent login" {
      dissect {
          mapping => {
            "event_description" => "%{[[event][type]]} %{[[event][code]]} %{[[event][action]]} for %{[[server][user][id]]}/%{?data} (session:%{[[trace][id]]}) from %{?data} with %{[[user_agent][name]]} (%{[[user_agent][os][version]]})%{?data}"
          }
      }
    }
    else if [event_description] =~ " with " and [event_description] != "Agent login" {
      dissect {
          mapping => {
            "event_description" => "%{[[event][code]]} %{[[event][action]]} for %{[[server][user][id]]}/%{?data} from %{?data} with %{[[user_agent][name]]} (%{[[user_agent][os][version]]})%{?data}"
          }
      }
    }
    else {
      mutate {
        rename => { "event_info" => "[source][user][roles]" }
        rename => { "group.domain" => "[group][name]" }
      }
      dissect {
          mapping => {
            "event_description" => "%{[[event][code]]} %{[[event][action]]} for %{[[server][user][id]]}/%{?data} from %{?data} via %{[[event][action]]}."
          }
      }
    }
  }
  else if [event_description] =~ "Session resumed"{
    mutate {
      add_field => { "[agent][parse_rule]" => "VPNT-Session" }
      add_field => { "[event][code]" => "VPN Tunneling" }
    }
    dissect {
        mapping => {
          "event_description" => "%{[[event][type]]} from user agent '%{[[user_agent][name]]} (%{[[user_agent][os][name]]}) %{?data}' (session:%{[[trace][id]]})."
        }
    }
  }
  else if [event_description] =~ "Closed connection to"{
    mutate {
      add_field => { "[agent][parse_rule]" => "VPNT-Closed" }
      add_field => { "[event][code]" => "VPN Tunneling" }
    }
    dissect {
        mapping => {
          "event_description" => "%{[[event][action]]} %{+[[event][action]]} to %{[[source][nat][ip]]} after %{[[event][duration]]} %{?data}, with %{[[source][bytes]]} bytes read and %{[[destination][bytes]]} bytes written"
        }
    }
  }
  else if [event_description] =~ "Logout from" {
    mutate {
      add_field => { "[agent][parse_rule]" => "Logout" }
    }
    dissect {
        mapping => {
          "event_description" => "%{[[event][code]]} from %{?data} (session:%{[[trace][id]]})"
        }
    }
  }
  else {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 16" }
    }
    dissect {
      mapping => {
        "event_description" => "%{[[rule][description]]}"
      }
    }
  }
  # classification
  if[event_description] =~ "Primary authentication failed" or [event_description] =~ "Login failed" {
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 17" }
      add_field => { "[event][code]" => "login" }
      add_field => { "[event][action]" => "failed" }
    }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Authentication Failure"
      }
    }
  }
  else if[event_description] =~ "Primary authentication successful" or [event_description] =~ "Logout from" or [event_description] =~ "login succeeded"{
    mutate {
      add_field => { "[agent][parse_rule]" => "RULE 18" }
    }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Authentication Success"
      }
    }
  }
  else if[event_description] =~ "User Accounts modified"{
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 19" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Account Modified"
      }
    }
  }
  else if[event_description] =~ "Remote address for"{
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 20" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Configuration"
      }
    }
  }
  else if[event_description] =~ "NTP server" and [event_description] =~ "unreachable" {
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 21" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Ops/Error"
      }
    }
  }
  else if[event_description] =~ "OCSP" or [event_description] =~ "Key Exchange number" or [event_description] =~ "Number of concurrent users" or [message] =~ "Sending logMessageTrap" or [event_description] =~ "Number of NCP connections"  or [event_description] =~ "Transport mode switched" {
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 22" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Information"
      }
    }
  }
  else if[event_description] =~ "Closed connection to" or ([event_description] =~ "VPN Tunneling" and [event_description] !~ "Session"){
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 23" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Ops/Network Traffic"
      }
    }
  }
  else if[event_description] =~ "Testing Password realm" or ([event_description] =~ "Host Checker policy" and [event_description] =~ "failed on") {
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 24" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Other Audit Failure"
      }
    }
  }
  else if([event_description] =~ "Host Checker policy" and [event_description] =~ "passed on") or ([event_description] =~ "Session" and [event_description] =~ "user" ){
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 25" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Audit/Other Audit Success"
      }
    }
  }
  else if[event_description] =~ "Host Checker time out" or [event_description] =~ "Max session timeout "{
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 26" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Ops/Warning"
      }
    }
  }
  else {
    mutate {
        add_field => { "[agent][parse_rule]" => "RULE 27" }
      }
    mutate {
      add_field => {
        "[rule][category]"=> "Others"
      }
    }
  }
  mutate {
    gsub => [ "[log][date_time]", "'", "" ]
  }
  date{
    match => ["[event][created]", "yyyy-MM-dd'T'HH:mm:ssZ","ISO8601","yyyy-MM-dd't'HH:mm:ss.SSSz"]
    timezone => "GMT"
    locale => "en"
    target => "[event][created]"
  }
  mutate{
    remove_field => ["[log][date_time]","event_description","actual_msg","msg","event_info"]
  }
}
output {
  pipeline { send_to => [enrichments] }
}
