# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  # formally bomgar
  mutate {
    add_field => { "[event][module]" => "beyondtrust" }
    add_field => { "[event][dataset]" => "beyondtrust.secure_remote_mngt" }
  }
  mutate {
    strip => ["message"]
  }
  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri" 
    remove_field => [ "pri" ]
  }
  dissect {
    mapping => {
      actual_msg => "%{?data} %{[[event][start]]} %{[[destination][address]]} %{[[host][geo][country_iso_code]]} %{[[event][id]]} - [meta sequenceId=%{?data}] 1427:01:01:%{rest_msg}"
    }
  }
  kv {
    source => "rest_msg"
    field_split => ";"
    value_split => "="
    target => "tmp"
  }
  mutate {
    rename => {"[tmp][event]" => "[event][action]"}
    rename => {"[tmp][reason]" => "[rule][ruleset]"}
    rename => {"[tmp][site]" => "[host][hostname]"}
    rename => {"[tmp][status]" => "[event][outcome]"}
    rename => {"[tmp][target]" => "[destination][address]"}
    rename => {"[tmp][when]" => "[event][created]"}
    rename => {"[tmp][who]" => "[user][name]"}
    rename => {"[tmp][who_ip]" => "[source][ip]"}

    remove_field => [ "rest_msg", "[log][date]", "actual_msg", "tmp" ]
    strip => [ "[source][ip]" ]
  }
  translate {
    source => "[event][action]"
    target => "[rule][category]"
    dictionary => {
      "logout" => "Audit/Access Revoked"
      "login" => "Audit/Authentication Success"
      "other" => "Audit/Other"
    }
    fallback => "Others"
  }
  mutate {
    copy => { "[host][hostname]" => "[log][source][hostname]" }
  }
  date {
    match => ["[event][created]" , "UNIX" ] 
    timezone => "GMT"
    target => "[event][created]"
    tag_on_failure => "_dateparsefailure_ec"
  }
  if "_dateparsefailure_ec" in [tags]  {
    mutate {
     remove_field => [ "[event][created]" ]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
