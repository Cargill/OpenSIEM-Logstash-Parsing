# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  # formally bomgar
  mutate {
    add_field => { "event.module" => "bomgar.beyondtrust" }
    add_field => { "observer.vendor" => "beyondtrust" }
    add_field => { "observer.product" => "beyondtrust.secure_remote_mngt" }
    add_field => { "observer.type" => "remote access" }
    }
  # Parsing the syslog pri header if present
  grok {
    match => { "message" => "^.*?<(?<pri>\d+)>(\s)?(?<rest_msg>.*?)%" }
  }
  syslog_pri {
  syslog_pri_field_name => "pri" 
  remove_field => [ "pri" ]
  }

  mutate {
    strip => ["message"]
  }
  dissect {
    mapping => {
      message => "%{log.date} {%{?data}} <%{pri}>%{event.count} %{event.start} %{destination.address} %{log.source.entity} %{event.id} - [meta sequenceId=%{meta.sequence.id}] 1427:01:01:%{rest_msg}"
    }
  }
  syslog_pri {
    syslog_pri_field_name => "pri"
  }
  kv {
    source => "rest_msg"
    field_split => ";"
    value_split => "="
  }
  mutate {
    rename => {"event" => "event.action"}
    rename => {"reason" => "rule.ruleset"}
    rename => {"site" => "host.hostname"}
    rename => {"status" => "event.outcome"}
    rename => {"target" => "destination.address"}
    rename => {"when" => "event.occured"}
    rename => {"who" => "user.name"}
    rename => {"who_ip" => "source.ip"}

    remove_field => ["rest_msg","log.date","meta.sequence.id", "pri"]
    strip => ["source.ip"]
  }
  translate {
    field => "[event.action]"
    destination => "[rule.category]"
    dictionary => {
      "logout" => "Audit/Access Revoked"
      "login" => "Audit/Authentication Success"
      "other" => "Audit/Other"
    }
    fallback => "Others"
  }
}
output {
  pipeline { send_to => [enrichments] }
}
