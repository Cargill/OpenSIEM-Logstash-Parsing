# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter
{
  if[message] ==""
  {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 1 (dropped)" }
    }
    drop {}
  }
  else {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 2" }
    }
    mutate {
      strip => ["message"]
      gsub => ["message",'\"',"'"]
    }
    if[message] =~ "sEventType='OpResult'" {
      # escape forward slash else it would be considered as delimeter
      if[message] =~ "<\/Event>" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 3" }
        }
        dissect {
          mapping => {
            "message" => "%{log.date_time} {%{?data}} <%{?data}>%{event.created->} %{+event.created} %{+event.created} %{?repeated} <Event CompactMode='%{compact_mode}' sEventType='%{service.type}' dwBasicEventType='%{rule.id}' dwAppSpecificEventID='%{event.id}' sEventID='%{event.action}' sOriginatingApplicationName='%{?source.user_agent.name}' sOriginatingApplicationComponent='%{agent.type}' sOriginatingApplicationVersion='%{agent.version}' sOriginatingSystem='%{source.address}' sOriginatingAccount='%{source.user.name}' dtPostTime='%{event.start}' sMessage='%{rule.description}'>%{map_context}</Event>"
          }
        }
      }
      else {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 4" }
        }
        dissect {
          mapping => {
            "message" => "%{log.date_time} {name=%{observer.hostname}} <%{?data}>%{event.created->} %{+event.created} %{+event.created} %{?repeated} <Event CompactMode='%{compact_mode}' sEventType='%{service.type}' dwBasicEventType='%{rule.id}' dwAppSpecificEventID='%{event.id}' sEventID='%{event.action}' sOriginatingApplicationName='%{?source.user_agent.name}' sOriginatingApplicationComponent='%{agent.type}' sOriginatingApplicationVersion='%{agent.version}' sOriginatingSystem='%{source.address}' sOriginatingAccount='%{source.user.name}' dtPostTime='%{event.start}' sMessage='%{rule.description}'/>"
          }
        }
      }
    }
    else{
      # escape forward slash else it would be considered as delimeter
      if[message] =~ "<\/Event>" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 5" }
        }
        dissect {
          mapping => {
            "message" => "%{log.date_time} {name=%{observer.hostname}} <%{?data}>%{event.created->} %{+event.created} %{+event.created} %{?repeated} <Event CompactMode='%{compact_mode}' sEventType='%{service.type}' dwBasicEventType='%{rule.id}' dwAppSpecificEventID='%{event.id}' sEventID='%{event.action}' sOriginatingApplicationName='%{?source.user_agent.name}' sOriginatingApplicationComponent='%{agent.type}' sOriginatingApplicationVersion='%{agent.version}' sOriginatingSystem='%{source.address}' sOriginatingAccount='%{source.user.name}' dtPostTime='%{event.start}' sMessage='%{rule.description}' sIpAddress='%{source.ip}' sLoginName='%{user.name}' sManagerName='%{manager_name}'>%{map_context}</Event>"
          }
        }
      }
      else
      {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 6" }
        }
        dissect {
          mapping => {
            "message" => "%{log.date_time} {name=%{observer.hostname}} <%{?data}>%{event.created->} %{+event.created} %{+event.created} %{?repeated} <Event CompactMode='%{compact_mode}' sEventType='%{service.type}' dwBasicEventType='%{rule.id}' dwAppSpecificEventID='%{event.id}' sEventID='%{event.action}' sOriginatingApplicationName='%{?source.user_agent.name}' sOriginatingApplicationComponent='%{agent.type}' sOriginatingApplicationVersion='%{agent.version}' sOriginatingSystem='%{source.address}' sOriginatingAccount='%{source.user.name}' dtPostTime='%{event.start}' sMessage='%{rule.description}' sIpAddress='%{source.ip}' sLoginName='%{user.name}' sManagerName='%{manager_name}'/>"
          }
        }
      }
    }
    # logic for map_context
    if[map_context] =~ "key='ExecutionContext_SystemName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 7" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='ExecutionContext_SystemName' value='%{?ec_system_name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='ExecutionContext_ProcessRunAsUsername'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 8" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='ExecutionContext_ProcessRunAsUsername' value='%{?ec_process_user_name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='ExecutionContext_AppSessionID'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 9" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='ExecutionContext_AppSessionID' value='%{?ec_app_session_id}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='ExecutionContext_AppLoginUsername'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 10" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='ExecutionContext_AppLoginUsername' value='%{?ec_app_login_user}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='JobComment'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 11" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='JobComment' value='%{rule.ruleset}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='JobID'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 12" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='JobID' value='%{?job_id}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='TargetSystem'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 13" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='TargetSystem' value='%{?target_system}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='AccountStoreTarget'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 14" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='AccountStoreTarget' value='%{destination.address}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='RawData_Namespace''" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 15" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='RawData_Namespace'' value='%{?raw_data_namespace}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='AccountStoreIdentifier'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 16" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='AccountStoreIdentifier' value='%{account_store_identifier}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='AccountTargetName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 17" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='AccountTargetName' value='%{process.name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='AccountStoreType'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 18" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='AccountStoreType' value='%{host.os.family}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='ConnectionTargetName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 19" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='ConnectionTargetName' value='%{destination.address}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='sNamespace'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 20" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='sNamespace' value='%{?source.host.name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='sSystemName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 21" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='sSystemName' value='%{?destination.host.group.name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='sAccountName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 22" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='sAccountName' value='%{?destination.host.group.domain}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='PropagationName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 23" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='PropagationName' value='%{propogation_name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='SharedCredentialAccountName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 24" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='SharedCredentialAccountName' value='%{user.name}'%{extra}"
        }
      }
    }
    if[map_context] =~ "key='SharedCredentialListName'" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 25" }
      }
      dissect {
        mapping => {
          "map_context" => "%{extra} key='SharedCredentialListName' value='%{group.name}'%{extra}"
        }
      }
    }
    mutate {
      gsub => [ "log.date_time", "'", "" ]
      
    }
    date {
      match => ["event.created", "MMM dd HH:mm:ss", "MMM d HH:mm:ss"]
      timezone => "GMT"
      locale => "en"
      target => "event.created"
    }
    date {
      match => ["event.start", "yyyy-dd-MM'T'HH:mm:ss"]
      timezone => "GMT"
      locale => "en"
      target => "event.start"
    }
    mutate {
      add_field => {
        "rule.category" => "Audit/Information"
      }
    }
    mutate{
      rename => {"sEventID"=> "event.action"}
      rename => {"sOriginatingApplicationName "=> "service.name"}
      rename => {"sIpAddress"=> "source.ip"}
      rename => {"sLoginName"=> "source.user.id"}
      rename => {"performed account operation on:"=> "group.name"}
      rename => {"sOriginatingAccount"=> "host.user.name"}
      rename => {"sOriginatingSystem"=> "observer.hostname"}
      rename => {"Description"=> "rule.description"}
      rename => {"sMessage"=> "rule.description"}
      remove_field => ["log.date_time","extra","map_context","compact_mode","manager_name","account_store_identifier","propogation_name"]
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
