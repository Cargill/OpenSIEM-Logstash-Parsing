# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  #### never touch @timestamp
  ### do not use rule.category
  ### Temp drop until we have more timeâ€¦.
  
  # Parsing the syslog pri header if present
  grok {
    match => { "message" => "^.*?<(?<pri>\d+)>(\s)?(?<rest_msg>.*?)%" }
  }
  syslog_pri {
  syslog_pri_field_name => "pri" 
  remove_field => [ "pri" ]
  }
  dissect {
    mapping => {
      "message" => "%{?log.date_time} {%{?data}} <%{?pri}>%{event.created->} %{+event.created} %{+event.created} %{observer.hostname} %{?data}|%{?data}|%{?data}|%{?data}|%{rule.ruleset}|%{rule.name}|%{?data}|%{somedata}"

    }
  }
  kv {
    source => "somedata"
    value_split => "="
    field_split => "\r\n"
    target => "dlp"
  }

  mutate {
    remove_field => ["REPORTED_ON", "USER_JUSTIFICATION", "SCAN", "STATUS", "ENDPOINT_LOCATION", "QUARANTINE_PARENT_PATH"]

    ### Just remove
    remove_field => ["INCIDENT_SNAPSHOT", "MATCH_COUNT"]

    ### This is a good exampleâ€¦
    rename => {"[dlp][MONITOR_NAME]"=> "rule.ruleset"}
    rename => {"[dlp][POLICY]"=> "rule.description"}
    rename => {"[dlp][RULES]"=> "rule.name"}

    ### ECS field "email.subject"
    rename => {"[dlp][SUBJECT]"=> "email.subject"}


    ### Are there any conflicts in logs?

    ### Probably correct:
    rename => {"[dlp][PATH]"=> "file.path"}
    rename => {"[dlp][PARENT_PATH]"=> "process.parent.executable"}
    rename => {"[dlp][SEVERITY]"=> "event.severity_name"}
    rename => {"[dlp][TARGET]"=> "file.target_path"}
    rename => {"[dlp][BLOCKED]"=> "event.action"}
    rename => {"[dlp][PROTOCOL]"=> "network.protocol"}
    rename => {"[dlp][INCIDENT_ID]"=> "event.id"}
    rename => {"[dlp][APPLICATION_NAME]"=> "network.application"}
    rename => {"[dlp][URL]"=> "url.full"}
    rename => {"[dlp][ENDPOINT_DEVICE_ID]"=> "host.id"}
    rename => {"[dlp][SENDER]"=> "source.user.email"}
    rename => {"[dlp][DATAOWNER_EMAIL]"=> "user.email"}
    rename => {"[dlp][RECIPIENT]"=> "destination.user.email"}
    rename => {"[dlp][DESTINATION_ADDRESS]"=> "destination.address"}
    rename => {"[dlp][MACHINE_IP]"=> "source.ip"}
    rename => {"[dlp][ENDPOINT_MACHINE]"=> "host.hostname"}
    rename => {"[dlp][APPLICATION_USER]"=> "source.user.name"}
    rename => {"[dlp][ENDPOINT_USERNAME]"=> "user.name"}
    rename => {"[dlp][DATAOWNER_NAME]"=> "file.owner"}
  }
  if [dlp][FNAME] and [dlp][FNAME] != "N\/A" {
    mutate {
      rename => {"[dlp][FNAME]"=> "file.name"}
    }
  }
  else if [dlp][FILE_NAME] and [dlp][FILE_NAME] != "N\/A" {
    mutate {
      rename => {"[dlp][FILE_NAME]"=> "file.name"}
    }
  }
  mutate {
    copy => { "url.full" => "rule.reference" }
  }
  if [source.ip] {
    if [source.ip] !~ "." or [source.ip] =~ "N" or [source.ip] =~ " " or [source.ip] =~ "A" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 1(no ip)" }
        remove_field => ["source.ip"]
      }
    }
  }
  if [destination.address] and [destination.address] =~ "null null" {
    mutate {
      remove_field => ["destination.address"]
    }
  }
  mutate {
    remove_field => ["[dlp]","somedata"]
  }
  date {
    match => ["event.created", "MMM dd HH:mm:ss", "MMM d HH:mm:ss"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
  }
  # Do not remove this, due to internal need.
  if [host.hostname] and ([host.hostname] != "" or [host.hostname][0] != "" ){
    mutate {
      copy => { "host.hostname" => "host.name" }
    }
  }
}
output {
  pipeline { send_to => [enrichments] }
}
