# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  mutate {
    strip => ["message"]
  }
  syslog_pri {}
  dissect {
    mapping => {
      message => "%{log.date} {%{?data}} <%{?code}>%{rest_msg}"
    }
  }
  if [message] =~ "<14>" {
    if [message] =~ "applicationId" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 1" }
      }
      dissect {
        mapping => {
          rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{rule.description}: %{+rule.description}: %{+rule.description}: Connection:%{rule.ruleset}, Content-Length:%{file.size}, Content-Type:%{file.extension}; charset=utf-8, Date:%{event.created}, %{+event.created} %{+event.created} %{+event.created} %{+event.created} %{time.zone}, Server:%{server}, X-Powered-By:%{process.name} %{+process.name}  REQUEST BODY: %{?request.body} <applicationId>%{?application.id}</a%{?data} <status>%{event.action}</s%{?data} <serviceId>%{service.id}</%{?data} <issuerId>%{?issuer.id}</%{?data} <issueDate>%{?issue.date}</%{?data} <rcvDate>%{?receive.date}</rcvDate> %{msg}"
          #  <prdcRsltDate>%{prod.result.date}</prdcRsltDate>
        }
      }
    }
    else {
      if [message] =~ ", , 200" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 2 (dropped)" }
        }
        drop {}
      }
      if [message] =~ " Message processed successfully" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 3" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{rule.description}"
          }
        }
      }
      else if [message] =~ "#####Client SSL Protocol" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 4" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{rule.description} - %{+rule.description} - %{network.protocol}_%{?key.exchange}_WITH_%{symmetric.encryption}_%{+symmetric.encryption}_%{+symmetric.encryption}_%{?sha}"
          }
        }
      }
      else if [message] =~ "service: A00" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 5" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.message}: %{+system.message}: %{rule.description}"
          }
        }
      }
      else if[message] =~ "Requestor address" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 6" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{source.port}: Requestor address %{source.address} %{event.action}"
          }
        }
      }
      else if [message] =~ "IntegrationId" and [message] =~ "URL:" and [message] =~ "authorization:" and [message] =~ "host:" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 7" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} IntegrationId: %{process.pid} %{?original.request} URL: %{url.path} %{msg.del} (Verb): %{http.request.method} %{msg.del} authorization:%{authorization} %{msg.del} host:%{host.hostname}:%{chk_data}"
            # sap-language:%{sap.language}, sap-passport:%{sap.passport}
          }
        }
        if [chk_data] =~ "," {
          mutate {
            add_field => { "agent.parse_rule" => "RULE 7 (a)" }
          }
          dissect {
            mapping => {
              chk_data => "%{source.port}, %{rule.description}"
            }
          }
        }
        else {
          mutate {
            add_field => { "agent.parse_rule" => "RULE 7 (b)" }
          }
          dissect {
            mapping => {
              chk_data => "%{source.port} %{rule.description}"
            }
          }
        }
      }
      else if [message] =~ "IntegrationId" and [message] =~ "URL:" and [message] =~ "authorization:" and [message] !~ "host:" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 8" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} IntegrationId: %{process.pid} %{?original.request} URL: %{url.path} %{msg.del} (Verb): %{http.request.method} %{msg.del} authorization:%{authorization}"
          }
        }
      }
      else if [message] =~ "IntegrationId" and [message] =~ "URL:" and [message] =~ "(Verb):" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 9" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} IntegrationId: %{process.pid} %{?original.request} URL: %{url.path} %{msg.del} (Verb): %{http.request.method}"
          }
        }
      }
      else if [message] =~ "IntegrationId" and [message] =~ "URL:" and [message] =~ "Original Request Query:" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 9(a)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} IntegrationId: %{process.pid} %{?original.request} URL: %{url.path} Original Request Query: %{url.query}"
          }
        }
      }
      else if [message] =~ "IntegrationId" and [message] =~ "URL:" and [message] !~ "Original Request Query:" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 9(b)" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} IntegrationId: %{process.pid} %{?original.request} URL: %{url.path}"
          }
        }
      }
      else if [message] =~ "IntegrationId:" and [message] !~ "URL" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 10" }
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} IntegrationId: %{process.pid} %{rule.description}"
          }
        }
      }
      else if [message] =~ "parsedIntUrl:" {
        mutate {
          add_field => { "agent.parse_rule" => "RULE 11" }
        }
        mutate {
          gsub => ["rest_msg","   "," "]
        }
        dissect {
          mapping => {
            rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{msg.del} parsedIntUrl: %{url.full}"
          }
        }
      }
    }
  }
   # if [message] =~ "USER:WARN" {
  else {
    mutate {
      add_field => { "agent.parse_rule" => "RULE 12" }
    }
    dissect {
      mapping => {
        rest_msg => "%{event.start->} %{+event.start} %{+event.start} %{source.address} %{?ssg}: %{event.severity_name} %{system.properties}: %{event.action}"
      }
    }
    if [message] =~ "<12>" and [message] =~ "Error" {
      mutate {
        add_field => { "agent.parse_rule" => "RULE 13" }
      }
      mutate {
        update => {"event.severity_name" => "Error" }
      }
    }
  }
  date {
    match => ["event.created" , "MMM dd HH:mm:ss","MMM dd HH:mm:ss.SSS"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
  }
  date {
    match => ["event.start" , "MMM dd HH:mm:ss","MMM dd HH:mm:ss.SSS"]
    timezone => "GMT"
    locale => "en"
    target => "event.start"
  }
  mutate {
    remove_field => ["msg","log.date","time.zone","rest_msg","sytem.properties","server","authorization","chk_data","msg.del"]
    
  }
  #### Classification part ####
  translate {
    field => "[event.severity_name]"
    destination => "[rule.category]"
    dictionary => {
      "WARNING" => "Ops Warning"
      "INFO" => "Ops Information"
      "Error" => "Ops Error"
    }
    fallback => "Others"
  }
}
output {
  pipeline { send_to => [enrichments] }
}
