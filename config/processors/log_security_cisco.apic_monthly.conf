input {
  pipeline {
    address => VAR_PIPELINE_NAME
  }
}
filter {
  if [message] == "" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 1" }
    }
    drop {}
  }
  mutate {
    strip => ["message"]
  }
  dissect {
    mapping => {
      "message" => "%{log.received_time} {%{?data}} <%{?log.level}>%{event.created->} %{+event.created} %{+event.created} %{source.address} %%{?log.sys_msg} %{rest_of_msg}"
    }
  }
  if [rest_of_msg] =~ "transition" and [rest_of_msg] =~ "IP:" and [rest_of_msg] =~ "EPG:"{
    mutate {
      add_field => { "parse_rule_name" => "RULE 4" }
    }
    dissect {
      mapping => {
        "rest_of_msg" => '[%{?log.code}][%{?log.lc}][%{event.action}][%{rule.description} EPG: %{network.name} IP: %{source.ip}'
      }
    }
  }
  else if [rest_of_msg] =~ "session]" and [rest_of_msg] =~ "From-" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 5" }
    }
    dissect {
      mapping => {
        "rest_of_msg" => '[%{event.action}]%{?data} From-%{source.ip}-%{rule.name}'
      }
    }
  }
  else if[rest_of_msg] =~ "cep-" and [rest_of_msg] =~ "ip-" and [rest_of_msg] =~ "epg-"{
    mutate {
      add_field => { "parse_rule_name" => "RULE 6" }
    }
    dissect {
      mapping => {
        "rest_of_msg" => '[%{?log.code}][%{?log.lc}][%{event.action}][%{log_rule}epg-%{network.name}cep-%{source.mac}/ip-[%{source.ip}]%{?data}] %{rule.description}'
      }
    }
    if [log_rule] =~ "\]\["
    {
      dissect {
        mapping => {
          "log_rule" => "%{event.severity_name}][%{?log.rule}"
        }
      }
    }
  }
  else if [rest_of_msg] =~ "major" or [rest_of_msg] =~ "minor" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 6 (a)" }
    }
    dissect {
      mapping => {
        "rest_of_msg" => '[%{?log.code}][%{?log.lc}][%{?log.cause}][%{log_rule}] %{rule.description}'
      }
    }
    if [log_rule] =~ "\]\["
    {
      dissect {
        mapping => {
          "log_rule" => "%{event.severity_name}][%{?log.rule}"
        }
      }
    }
  }
  if [rest_of_msg] =~ "major]" or [rest_of_msg] =~ "minor]" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 7" }
    }
    mutate {
      add_field => {
        "rule.category" => "Ops/Error"
      }
    }
  }
  else if [rest_of_msg] =~ "cleared" or [rest_of_msg] =~ "info" {
    mutate {
      add_field => { "parse_rule_name" => "RULE 8" }
    }
    mutate {
      add_field => {
        "rule.category" => "Ops/Information"
      }
    }
  }
  else {
    mutate {
      add_field => { "parse_rule_name" => "RULE 9" }
    }
    mutate {
      add_field => {
        "rule.category" => "Ops/Other"
      }
    }
  }
  date {
    match => [ "event.created", "MMM dd HH:mm:ss.SSS", "MMM dd HH:mm:ss"]
    timezone => "GMT"
    locale => "en"
    target => "event.created"
  }
  if [log_rule] {
    mutate {
      remove_field => ["log_rule"]
    }
  }
  mutate {
    remove_field => ["rest_of_msg","log.received_time"]
  }
  
}
output {
  pipeline { send_to => [enrichments] }
}