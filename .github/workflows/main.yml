# This workflow will install Python dependencies, run lint with a single version of Python

name: OpenSIEM

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: [ github-actions ]

jobs:
  # pylint:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  logstash-setup:
    runs-on: ubuntu-latest

    steps:
    - name: download logstash
      run: |
        export LOGSTASH_GPG_KEY="46095ACC8548582C1A2699A9D27D666CD88E42B4"
        export LOGSTASH_HOME="/usr/share/logstash"
        sudo apt-get install -qqy --no-install-recommends ca-certificates curl
        set -x\
        && mkdir ${LOGSTASH_HOME} \
        && export DOWNLOAD_URL=https://artifacts.elastic.co/downloads/logstash \
        && export LOGSTASH_BINARY=logstash-oss-${LOGSTASH_VERSION}-linux-x86_64.tar.gz \
        && cd /tmp \
        && curl -L -O "${DOWNLOAD_URL}/${LOGSTASH_BINARY}" \
        && curl -L -O "${DOWNLOAD_URL}/${LOGSTASH_BINARY}.sha512" \
        && sha512sum --check "${LOGSTASH_BINARY}.sha512"; \
        curl -L -O "${DOWNLOAD_URL}/${LOGSTASH_BINARY}.asc" \
          && export GNUPGHOME="$(mktemp -d)"; \
          ( gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$LOGSTASH_GPG_KEY" \
          || gpg --keyserver pgp.mit.edu --recv-keys "$LOGSTASH_GPG_KEY" \
          || gpg --keyserver keyserver.pgp.com --recv-keys "$LOGSTASH_GPG_KEY" ); \
          gpg --batch --verify "${LOGSTASH_BINARY}.asc" "${LOGSTASH_BINARY}"; \
        \
        tar xzf ${LOGSTASH_BINARY} -C ${LOGSTASH_HOME} --strip-components=1; \
        \
        rm -rf "$GNUPGHOME" "${LOGSTASH_BINARY}" "${LOGSTASH_BINARY}.sha512" "${LOGSTASH_BINARY}.asc" || true;

  # - name: Cache
  # uses: actions/cache@v2.1.5
  # with:
  #   # A list of files, directories, and wildcard patterns to cache and restore
  #   path:
  #   # An explicit key for restoring and saving the cache
  #   key:
  #   # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
  #   restore-keys: # optional